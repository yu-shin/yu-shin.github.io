<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Array</title>
    <url>/posts/60cdc1b3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="array">Array</h1>
<ul>
<li>為表示<strong>有序串列</strong>之一種方式</li>
<li>其佔用<strong>連續性的記憶體空間</strong></li>
<li>各元素型態皆需<strong>相同</strong> (一致)</li>
<li>支援 <strong>Sequential Sequential</strong> 及 <strong>Random Access Random Access</strong></li>
<li><strong>插入</strong>、<strong>刪除</strong>元素較為麻煩
<ul>
<li>∵ 需挪移其它元素</li>
<li>∴ 不易動態增刪空間大小</li>
<li>Time = O(n)</li>
</ul></li>
</ul>
<a id="more"></a>
<img src="/posts/60cdc1b3/array.jpg" class="">
<h1 id="n維陣列">N維陣列</h1>
<p>N維陣列儲存在主記憶體中的方式有兩種:</p>
<ul>
<li>Row-major</li>
<li>Column-major</li>
</ul>
<h3 id="一般化宣告">一般化宣告</h3>
<p>宣告: A[1:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.207ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 975.6 592" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D462"></use></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-31"></use></g></g></g></g></svg></mjx-container> , 1:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.207ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 975.6 592" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D462"></use></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g></g></g></svg></mjx-container> , 1:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="2.207ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 975.6 607.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D462"></use></g><g data-mml-node="mn" transform="translate(572, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-33"></use></g></g></g></g></svg></mjx-container> , …, 1:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="2.367ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 1046.3 599.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D462"></use></g><g data-mml-node="mi" transform="translate(572, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g></g></g></g></svg></mjx-container> ], 起始位址為: <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="1.587ex" height="1.945ex" role="img" focusable="false" viewBox="0 -694 701.6 859.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D459"></use></g><g data-mml-node="mn" transform="translate(298, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g></svg></mjx-container> , 元素大小: d <img src="/posts/60cdc1b3/row.jpg" class=""> <img src="/posts/60cdc1b3/column.jpg" class=""> <div class="video-container"><iframe src="https://www.youtube.com/embed/YIAWgd1hL0E" frameborder="0" loading="lazy" allowfullscreen></iframe></div></p>
<h3 id="議題2維為例">議題(2維為例)</h3>
<ul>
<li>給予所有宣告，求A[i, j]之location</li>
<li>給予兩個已知位置，求A[i, j]之location
<ul>
<li>須自行判斷出Row或Column-major</li>
</ul></li>
<li>給予兩個已知位置，但判斷出Row或Column-major皆有可能，求A[i, j]之location</li>
<li>給予三個已知位置量，求A[i, j]之location</li>
</ul>
<h1 id="多項式">多項式</h1>
<ol type="1">
<li><strong>按照指數由高到低，依序儲存係數</strong> <img src="/posts/60cdc1b3/%E5%A4%9A%E9%A0%85%E5%BC%8F1.jpg" class=""></li>
<li><strong>儲存非零項次的係數與指數</strong> <img src="/posts/60cdc1b3/%E5%A4%9A%E9%A0%85%E5%BC%8F2.jpg" class=""></li>
</ol>
<h1 id="稀疏矩陣-sparse-matrix">稀疏矩陣 (Sparse Matrix)</h1>
<ol type="1">
<li><strong>利用 m x n 的二維陣列</strong> <img src="/posts/60cdc1b3/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%99%A31.jpg" class=""></li>
<li><strong>利用3-tuple來儲存非零元素</strong> <img src="/posts/60cdc1b3/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%99%A32.jpg" class=""> <strong>補充： Column-major 也可以</strong> <img src="/posts/60cdc1b3/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%99%A33.jpg" class=""></li>
</ol>
<h1 id="下三角矩陣-lower-triangular-matrix">下三角矩陣 (Lower Triangular Matrix)</h1>
<div class="video-container"><iframe src="https://www.youtube.com/embed/tohAs7etUzQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<h1 id="上三角矩陣-upper-triangular-matrix">上三角矩陣 (Upper Triangular Matrix)</h1>
<div class="video-container"><iframe src="https://www.youtube.com/embed/CAsQNi5oolY" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<h1 id="對稱矩陣-symmetric-matrix">對稱矩陣 (Symmetric Matrix)</h1>
<div class="video-container"><iframe src="https://www.youtube.com/embed/CAsQNi5oolY" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course03.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Binary Search</title>
    <url>/posts/fbb0c1cd/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="binary-search">Binary search</h1>
<p>Binary search 是一個用在已排序數列(sorted list)上有效率的演算法。 藉由不斷把list分割一半直到最後將可能的位置縮小到一個。 <a id="more"></a> 以下是binary search step-by-step的描述： 1. Let min = 1 and max = n 2. (max+min)/2且round成整數 3. 如果猜中了，就停止 4. 如果太小，則把min設成guess+1 5. 如果太大，則把max設成guess-1 6. 重新從第二步驟開始</p>
<h2 id="完整程式碼">完整程式碼</h2>
<p>時間複雜度：O(logN) <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [1, 2, 3, 4, 5, 6, 7, 8, 9]

def binary_search(data, key):
    #設置選取範圍的指標
    low &#x3D; 0
    upper &#x3D; len(data) - 1
    while low &lt;&#x3D; upper:
        mid &#x3D; (low + upper) &#x2F; 2  #取中間索引的值
        if data[mid] &lt; key:    #若搜尋值比中間的值大，將中間索引+1，取右半
            low &#x3D; mid + 1
        elif data[mid] &gt; key:  #若搜尋值比中間的值小，將中間索引+1，取左半
            upper &#x3D; mid - 1
        else:                    #若搜尋值等於中間的值，則回傳
            return mid
    return -1


index &#x3D; binary_search(data, 5)
if index &gt;&#x3D; 0:
    print(&quot;找到數值於索引 &quot; + str(index))
else:
    print(&quot;找不到數值&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> # 時間複雜度 ## worst case 剛好分割到最後一個數。 1. 假設n為2的指數(n=128)，則需要8次(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.466ex" xmlns="http://www.w3.org/2000/svg" width="6.662ex" height="2.036ex" role="img" focusable="false" viewBox="0 -694 2944.7 900" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-2-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-2-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-2-TEX-N-2061" d=""></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-N-6C"></use><use xlink:href="#MJX-2-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-2-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(1278, 0)"><use xlink:href="#MJX-2-TEX-N-2061"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1444.7, 0)"><g data-mml-node="mn"><use xlink:href="#MJX-2-TEX-N-31"></use><use xlink:href="#MJX-2-TEX-N-32" transform="translate(500, 0)"></use><use xlink:href="#MJX-2-TEX-N-38" transform="translate(1000, 0)"></use></g></g></g></g></svg></mjx-container>+1) 2. 假設n不為2的指數(n=1000)，則需要10次(round(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.466ex" xmlns="http://www.w3.org/2000/svg" width="4.626ex" height="2.036ex" role="img" focusable="false" viewBox="0 -694 2044.7 900" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-2-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-2-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-2-TEX-N-2061" d=""></path><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-N-6C"></use><use xlink:href="#MJX-2-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-2-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(1278, 0)"><use xlink:href="#MJX-2-TEX-N-2061"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1444.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g></g></g></g></svg></mjx-container>)+1)</p>
<h2 id="best-case">best case</h2>
<p>第一個就找到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-2-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<h1 id="practice">practice</h1>
<p>You have an array containing the prime numbers from 2 to 311 in sorted order: [2, 3, 5, 7, 11, 13, ..., 307, 311]. There are 64 items in the array. About how many items of the array would binary search have to examine before concluding that 52 is not in the array, and therefore not prime? <code>7</code></p>
<h1 id="參考資料">參考資料</h1>
<p><a href="https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search">Binary search</a> <a href="https://ithelp.ithome.com.tw/articles/10206818">二分搜尋</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Bubble Sort</title>
    <url>/posts/10244486/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="bubble-sort">Bubble Sort</h1>
<p><strong>Bucket Sort</strong>雖然直覺、簡單好懂，但也遺留了一些問題。舉例來說如果資料很大，就會很浪費空間，或者當資料有小數的時候，沒辦法產生相對應的桶子。<a id="more"></a> <strong>Bubble Sort</strong>想法是這樣的，假設要由小排到大，左邊為小右邊為大，以左邊第一個為基準點，不斷的跟右邊的值比大小，比較小的就往左，大的就停住，然後再從這個大的值繼續往右比，直到最後一個位置。現在比完第一輪了，接著再從最左邊的頭開始，往下比下去。 --- 假設我們現在有一筆班上的成績想要排序： <code>data = [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]</code> ## 1.計算幾個泡泡 <pre class="line-numbers language-python" data-language="python"><code class="language-python">n &#x3D; len(data)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> ## 2.外圈要跑n-1次 最後剩下最小泡泡不用比較所以-1次 <pre class="line-numbers language-python" data-language="python"><code class="language-python">for i in range(n-1):
    # code<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> ## 3.內圈跑n-1-i次（兩兩比較次數） 因為每一圈剩下n-i個泡泡 每圈比較n-i-1次 <pre class="line-numbers language-python" data-language="python"><code class="language-python">for j in range(n-i-1):
    # code<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> ## 4.完整程式碼 <strong>時間複雜度：O(N^2)</strong> <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]

n &#x3D; len(data)
# 總共跑n-1次
for i in range(n-1):
    # 內圈跑n-1-i次
    for j in range(n-i-1):
        if data[j] &gt; data[j+1]:
            data[j], data[j+1] &#x3D; data[j+1], data[j]
print(data)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <code>[23, 23, 29, 34, 55, 66, 67, 78, 78, 79, 88, 89, 92, 96, 96, 100]</code> # 練習 <code>data = [['Abby', 58], ['Julia', 44], ['Jane', 31], ['Stephen', 76], ['Ryn', 82],['Justin', 99], ['Caroline', 65], ['James', 87], ['Damon', 25], ['Elena', 76]]</code> <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [[&#39;Abby&#39;, 58], [&#39;Julia&#39;, 44], [&#39;Jane&#39;, 31], [&#39;Stephen&#39;, 76], [&#39;Ryn&#39;, 82],[&#39;Justin&#39;, 99], [&#39;Caroline&#39;, 65], [&#39;James&#39;, 87], [&#39;Damon&#39;, 25], [&#39;Elena&#39;, 76]]
n &#x3D; len(data)

for i in range(n-1):
    for j in range(n-i-1):
        if data[j][1] &gt; data[j+1][1]:
            data[j], data[j+1] &#x3D; data[j+1], data[j]
print(data)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <code>[['Damon', 25], ['Jane', 31], ['Julia', 44], ['Abby', 58], ['Caroline', 65], ['Stephen', 76], ['Elena', 76], ['Ryn', 82], ['James', 87], ['Justin', 99]]</code> # 參考資料 <a href="https://ithelp.ithome.com.tw/articles/10202160">泡沫排序</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Bucket Sort</title>
    <url>/posts/4502df03/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="bucket-sort">Bucket Sort</h1>
<p>桶子排序法 (Bucket Sort) 想法很簡單，其實就是準備幾個桶子，將要排序的資料分類丟至指定的桶子中，再依序將桶子裡的東西取出。 <a id="more"></a> --- 假設我們現在有一筆班上的成績想要排序： <code>data = [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]</code> ## 1.準備桶子 準備好每個分數的<strong>空桶子(0)</strong> <pre class="line-numbers language-python" data-language="python"><code class="language-python">max_score &#x3D; 100
bucket &#x3D; []
for i in range(max_score+1):
    bucket.append(0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre> ## 2.分類成績 接著把未排序的成績們放入相對應分數的桶子 每次桶子+1 <pre class="line-numbers language-python" data-language="python"><code class="language-python">for score in data:
    bucket[score] &#x3D; bucket[score] + 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> ## 3.讀取成績 依序檢查每個桶子是否有東西在裡面(非0) 有的話看此桶子有幾個，一個一個拿出來排好 最後就得出排序完的分數了 <pre class="line-numbers language-python" data-language="python"><code class="language-python">index &#x3D; 0
for i in range(len(bucket)):
    if bucket[i] !&#x3D; 0:
        for j in range(bucket[i]):
            data[index] &#x3D; i
            index +&#x3D; 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> ## 4.完整程式碼 程式時間複雜度：<strong>O(M+N)</strong> <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]

def bucketsort(data):
    max_score &#x3D; 100
    bucket &#x3D; []
    
    for i in range(max_score+1):
        bucket.append(0)
    for score in data:
        bucket[score] &#x3D; bucket[score] + 1

    index &#x3D; 0
    for i in range(len(bucket)):
        if bucket[i] !&#x3D; 0:
            for j in range(bucket[i]):
                data[index] &#x3D; i
                index +&#x3D; 1

bucketsort(data)
print(data)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <code>[23, 23, 29, 34, 55, 66, 67, 78, 78, 79, 88, 89, 92, 96, 96, 100]</code></p>
<h1 id="練習">練習</h1>
<p>如果假設我們的資料還包含了姓名在內，那要如何排序呢？ <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [[&#39;Abby&#39;, 58], [&#39;Julia&#39;, 44], [&#39;Jane&#39;, 31], [&#39;Stephen&#39;, 76], [&#39;Ryn&#39;, 82], [&#39;Justin&#39;, 99], [&#39;Caroline&#39;, 65], [&#39;James&#39;, 87], [&#39;Damon&#39;, 25], [&#39;Elena&#39;, 76]]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 我的答案： ## 陣列 <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [[&#39;Abby&#39;, 58], [&#39;Julia&#39;, 44], [&#39;Jane&#39;, 31], [&#39;Stephen&#39;, 76], [&#39;Ryn&#39;, 82], [&#39;Justin&#39;, 99], [&#39;Caroline&#39;, 65], [&#39;James&#39;, 87], [&#39;Damon&#39;, 25], [&#39;Elena&#39;, 76]]

max_value &#x3D; 100
bucket &#x3D; []
data_sorted &#x3D; []

for i in range(max_value + 1):
    bucket.append([])

for i in data:
    bucket[i[1]].append(i[0])

for i, j in enumerate(bucket):
    if len(j) !&#x3D; 0:
        for name in j:
	        data_sorted.append([name, i])

print(data_sorted) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <code>[['Damon', 25], ['Jane', 31], ['Julia', 44], ['Abby', 58], ['Caroline', 65], ['Stephen', 76], ['Elena', 76], ['Ryn', 82], ['James', 87], ['Justin', 99]]</code> 以上是利用陣列，但其實也可以用字典 ## 字典 簡略 # 參考資料 <a href="https://ithelp.ithome.com.tw/articles/10201707">桶子排序法</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Complexity</title>
    <url>/posts/17b8c54b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="complexity">Complexity</h1>
<img src="/posts/17b8c54b/complexity.png" class="">
<a id="more"></a>
<h2 id="section"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="66.937ex" height="2.48ex" role="img" focusable="false" viewBox="0 -846 29586 1096" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-3-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-3-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-3-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-3-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-3-TEX-N-2061" d=""></path><path id="MJX-3-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-3-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-3-TEX-N-21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2318.8, 0)"><use xlink:href="#MJX-3-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(3374.6, 0)"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(4137.6, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(4526.6, 0)"><use xlink:href="#MJX-3-TEX-N-6C"></use><use xlink:href="#MJX-3-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-3-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(5804.6, 0)"><use xlink:href="#MJX-3-TEX-N-2061"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5971.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g></g><g data-mml-node="mo" transform="translate(6859.2, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(7526, 0)"><use xlink:href="#MJX-3-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(8581.8, 0)"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(9344.8, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(9733.8, 0)"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(10621.8, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(11288.6, 0)"><use xlink:href="#MJX-3-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(12344.3, 0)"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(13107.3, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(13496.3, 0)"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g><g data-mml-node="mi" transform="translate(14551, 0)"><use xlink:href="#MJX-3-TEX-N-6C"></use><use xlink:href="#MJX-3-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-3-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(15829, 0)"><use xlink:href="#MJX-3-TEX-N-2061"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(15995.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g></g><g data-mml-node="mo" transform="translate(16883.7, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(17550.4, 0)"><use xlink:href="#MJX-3-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(18606.2, 0)"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(19369.2, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(19758.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g><g data-mml-node="TeXAtom" transform="translate(942.3, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-3-TEX-N-32"></use></g></g></g><g data-mml-node="mo" transform="translate(21104, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(21770.8, 0)"><use xlink:href="#MJX-3-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(22826.6, 0)"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(23589.6, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(23978.6, 0)"><g data-mml-node="mn"><use xlink:href="#MJX-3-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g></g></g><g data-mml-node="mo" transform="translate(25156.5, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(25823.3, 0)"><use xlink:href="#MJX-3-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(26879, 0)"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(27642, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(28031, 0)"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(28919, 0)"><use xlink:href="#MJX-3-TEX-N-21"></use></g><g data-mml-node="mo" transform="translate(29197, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container></h2>
<p>最有效率的是常數的時間複雜度(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container>)，意思其「運算成本與資料量無關」，所以不管資料量多大，保證能夠在「可數(countable)、有限(finite)」的時間內完成</p>
<h1 id="asymptotic-notation">Asymptotic Notation</h1>
<p>在評估演算法之<strong>Complexity</strong>時，常使用<strong>Asymptotic Notation</strong>，其概念為： * 希望能以「簡單的函數」(例如：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex" xmlns="http://www.w3.org/2000/svg" width="9.932ex" height="2.339ex" role="img" focusable="false" viewBox="0 -833.9 4390 1033.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-3-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-3-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-3-TEX-N-6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path id="MJX-3-TEX-N-2061" d=""></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g><g data-mml-node="TeXAtom" transform="translate(942.3, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-3-TEX-N-32"></use></g></g></g><g data-mml-node="mo" transform="translate(1623.6, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">、</text></g><g data-mml-node="mi" transform="translate(2501.4, 0)"><use xlink:href="#MJX-3-TEX-N-6C"></use><use xlink:href="#MJX-3-TEX-N-6E" transform="translate(278, 0)"></use></g><g data-mml-node="mo" transform="translate(3335.4, 0)"><use xlink:href="#MJX-3-TEX-N-2061"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3502, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D441"></use></g></g></g></g></svg></mjx-container>等等)來描述<strong>Complexity</strong>的「<strong>趨勢</strong>」，特別是針對資料量非常大的時候。</p>
<p><strong>Asymptotic Notation</strong>是所有能夠描述演算法趨勢的「函數之集合」，給定： - 非負函數<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container>：描述演算法之趨勢。 - 非負函數<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1855 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(477, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(866, 0)"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1466, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container>：簡單函數。</p>
<p>以下分別介紹五個<strong>Asymptotic Notation</strong></p>
<h2 id="big-theta-notation"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="3.52ex" height="1.781ex" role="img" focusable="false" viewBox="0 -705 1556 787" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-2212"></use></g></g></g></svg></mjx-container>Big-Theta Notation</h2>
<h3 id="若滿足以下定義">若滿足以下定義：</h3>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.605ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7339.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-1-TEX-N-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(1644, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2033, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2633, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3022, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3688.8, 0)"><use xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mo" transform="translate(4744.6, 0)"><use xlink:href="#MJX-1-TEX-N-7B"></use></g><g data-mml-node="mstyle" transform="translate(5244.6, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(5411.2, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(5961.2, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(6350.2, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(6950.2, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>
：存在正整數<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="8.948ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 3954.9 636" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="msub" transform="translate(222.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="mn" transform="translate(433, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1058.8, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1503.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="mn" transform="translate(433, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2340, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(2784.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mstyle" transform="translate(3788.2, 0)"><g data-mml-node="mspace"></g></g></g></g></svg></mjx-container>,並且對於所有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="8.028ex" height="1.878ex" role="img" focusable="false" viewBox="0 -636 3548.4 830" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(877.8, 0)"><use xlink:href="#MJX-1-TEX-N-2265"></use></g><g data-mml-node="msub" transform="translate(1933.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mo" transform="translate(2937.1, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="mstyle" transform="translate(3381.8, 0)"><g data-mml-node="mspace"></g></g></g></g></svg></mjx-container>滿足<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="28.357ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 12534 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-1-TEX-N-2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-N-7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-30"></use></g><g data-mml-node="mo" transform="translate(777.8, 0)"><use xlink:href="#MJX-1-TEX-N-2264"></use></g><g data-mml-node="msub" transform="translate(1833.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mi" transform="translate(2670.1, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(3147.1, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(3536.1, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4136.1, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4802.9, 0)"><use xlink:href="#MJX-1-TEX-N-2264"></use></g><g data-mml-node="mi" transform="translate(5858.7, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(6408.7, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(6797.7, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(7397.7, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(8064.4, 0)"><use xlink:href="#MJX-1-TEX-N-2264"></use></g><g data-mml-node="msub" transform="translate(9120.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g></g><g data-mml-node="mi" transform="translate(9956.8, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(10433.8, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(10822.8, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(11422.8, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(11811.8, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(12034, 0)"><use xlink:href="#MJX-1-TEX-N-7D"></use></g></g></g></svg></mjx-container></li>
</ul>
<p>表示<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1855 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(477, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(866, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1466, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>為<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>趨勢之<strong>「邊界」</strong>(bound)，即可使用<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1855 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(477, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(866, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1466, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>來描述<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>之趨勢，以<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="14.845ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6561.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2205.8, 0)"><use xlink:href="#MJX-1-TEX-N-2208"></use></g><g data-mml-node="mi" transform="translate(3150.6, 0)"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(3928.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(4317.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(4794.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(5183.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(5783.6, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(6172.6, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>表示(也會看到<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="15.096ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6672.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2205.8, 0)"><use xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(3261.6, 0)"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(4039.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(4428.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(4905.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(5294.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(5894.6, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(6283.6, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>，但切記，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.717ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3411 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(1644, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2033, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2633, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3022, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>是一個集合)。</p>
<img src="/posts/17b8c54b/f2.png" class="">
<p>根據定義，既然係數<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="4.791ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 2117.8 636" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(836.6, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1281.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g></g></g></g></svg></mjx-container>可以任選，那麼以上兩個<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1855 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(477, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(866, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1466, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>函數其實可以把係數都提到<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="4.791ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 2117.8 636" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(836.6, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1281.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g></g></g></g></svg></mjx-container>裡，以同一個函數：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="8.571ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3788.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(477, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(866, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1466, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2132.8, 0)"><use xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(3188.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g></g></g></svg></mjx-container>表示即可。 - 由此可以確認，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.717ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3411 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(1644, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2033, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2633, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3022, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>是多個函數的「集合」。</p>
<p>以上情況可以推廣至所有的<code>多項式(polynomial)</code>，以<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="20.845ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 9213.6 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-1-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-1-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-1-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2205.8, 0)"><use xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(3261.6, 0)"><use xlink:href="#MJX-1-TEX-N-33"></use></g><g data-mml-node="msup" transform="translate(3761.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" transform="translate(600, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-33"></use></g></g></g><g data-mml-node="mo" transform="translate(4987.3, 0)"><use xlink:href="#MJX-1-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(5987.6, 0)"><use xlink:href="#MJX-1-TEX-N-34"></use></g><g data-mml-node="msup" transform="translate(6487.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" transform="translate(600, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g></g><g data-mml-node="mo" transform="translate(7713.3, 0)"><use xlink:href="#MJX-1-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(8713.6, 0)"><use xlink:href="#MJX-1-TEX-N-35"></use></g></g></g></svg></mjx-container>為例，當<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g></g></g></svg></mjx-container>越來越大時，對<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>之趨勢具有決定性影響力的是「最高次項」，此例為「三次方項」，所以，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>的複雜度為<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.791ex" height="2.451ex" role="img" focusable="false" viewBox="0 -833.2 2559.6 1083.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" transform="translate(600, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-33"></use></g></g></g><g data-mml-node="mo" transform="translate(2170.6, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>，將係數拿進<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="4.791ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 2117.8 636" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(836.6, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1281.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="TeXAtom" transform="translate(433, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-32"></use></g></g></g></g></g></svg></mjx-container>，便以: - <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.919ex" height="2.451ex" role="img" focusable="false" viewBox="0 -833.2 5710.1 1083.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2205.8, 0)"><use xlink:href="#MJX-1-TEX-N-2208"></use></g><g data-mml-node="mi" transform="translate(3150.6, 0)"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(3928.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(4317.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" transform="translate(600, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-33"></use></g></g></g><g data-mml-node="mo" transform="translate(5321.1, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>或者 - <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="13.17ex" height="2.451ex" role="img" focusable="false" viewBox="0 -833.2 5821.1 1083.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(2205.8, 0)"><use xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(3261.6, 0)"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(4039.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(4428.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" transform="translate(600, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-33"></use></g></g></g><g data-mml-node="mo" transform="translate(5432.1, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>表示</p>
<p><strong>Big-Theta</strong>(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.149ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1834 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-N-B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(1167, 0)"><use xlink:href="#MJX-1-TEX-N-B7"></use></g><g data-mml-node="mo" transform="translate(1445, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>)是同時找到<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>的「<strong>上界</strong>(upper bound)」與「<strong>下界</strong>(lower bound)」，像是三明治一樣把<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>夾住。 若把「<strong>上界</strong>」與「<strong>下界</strong>」分開來看，就是下面要介紹的<strong>Big-O</strong>與<strong>Big-Omega</strong></p>
<h2 id="big-o-notation"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="3.486ex" height="1.778ex" role="img" focusable="false" viewBox="0 -704 1541 786" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-1-TEX-N-2212"></use></g></g></g></svg></mjx-container>Big-O Notation</h2>
<p>一般談論的演算法之複雜度，經常是指<strong>Big-O</strong>，因為在估算成本時，最想知道的是「<strong>上界</strong>(upper bound)」 ### <strong>Big-O</strong>定義如下： - <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.571ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7324.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-1-TEX-N-7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(1629, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2018, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2618, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3007, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3673.8, 0)"><use xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mo" transform="translate(4729.6, 0)"><use xlink:href="#MJX-1-TEX-N-7B"></use></g><g data-mml-node="mstyle" transform="translate(5229.6, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(5396.2, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(5946.2, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(6335.2, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(6935.2, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>存在正整數<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="5.136ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 2270.1 636" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(222.2, 0)"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="mo" transform="translate(655.2, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1099.9, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mstyle" transform="translate(2103.4, 0)"><g data-mml-node="mspace"></g></g></g></g></svg></mjx-container>,並且對於所有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="8.217ex" height="1.878ex" role="img" focusable="false" viewBox="0 -636 3631.8 830" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-N-A0" d=""></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(877.8, 0)"><use xlink:href="#MJX-1-TEX-N-2265"></use></g><g data-mml-node="msub" transform="translate(1933.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mo" transform="translate(2937.1, 0)"><use xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="mtext" transform="translate(3381.8, 0)"><use xlink:href="#MJX-1-TEX-N-A0"></use></g></g></g></svg></mjx-container>滿足 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="18.338ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8105.3 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-1-TEX-N-2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><use xlink:href="#MJX-1-TEX-N-30"></use></g><g data-mml-node="mo" transform="translate(777.8, 0)"><use xlink:href="#MJX-1-TEX-N-2264"></use></g><g data-mml-node="mi" transform="translate(1833.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(2383.6, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2772.6, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(3372.6, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4039.3, 0)"><use xlink:href="#MJX-1-TEX-N-2264"></use></g><g data-mml-node="mi" transform="translate(5095.1, 0)"><use xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="mi" transform="translate(5528.1, 0)"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(6005.1, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(6394.1, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(6994.1, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(7383.1, 0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(7605.3, 0)"><use xlink:href="#MJX-1-TEX-N-7D"></use></g></g></g></svg></mjx-container></p>
<p>根據定義，可以將<strong>Big-O</strong>視為<strong>Big-Theta</strong>(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.149ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1834 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-N-B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(1167, 0)"><use xlink:href="#MJX-1-TEX-N-B7"></use></g><g data-mml-node="mo" transform="translate(1445, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>)的「上半部」，其以「簡單函數<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1855 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D454"></use></g><g data-mml-node="mo" transform="translate(477, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(866, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1466, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>」描述<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.362ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1928 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(550, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(939, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1539, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>在資料量夠大時，「最多」會達到怎麼樣的趨勢。</p>
<img src="/posts/17b8c54b/f3.png" class="">
<h2 id="big-omega-notation"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="3.394ex" height="1.778ex" role="img" focusable="false" viewBox="0 -704 1500 786" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-3A9" d="M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-3A9"></use></g><g data-mml-node="mo" transform="translate(722, 0)"><use xlink:href="#MJX-1-TEX-N-2212"></use></g></g></g></svg></mjx-container>Big-Omega Notation</h2>
<p>簡略 ## <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="2.857ex" height="1.505ex" role="img" focusable="false" viewBox="0 -583 1263 665" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D45C"></use></g><g data-mml-node="mo" transform="translate(485, 0)"><use xlink:href="#MJX-1-TEX-N-2212"></use></g></g></g></svg></mjx-container>Littel-o Notation 簡略 ## <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="3.167ex" height="1.505ex" role="img" focusable="false" viewBox="0 -583 1400 665" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D714" d="M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D714"></use></g><g data-mml-node="mo" transform="translate(622, 0)"><use xlink:href="#MJX-1-TEX-N-2212"></use></g></g></g></svg></mjx-container>Littel-omega Notation 簡略 ## 題外話 如果我們說一個執行時間是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.882ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3484 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(1717, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2106, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2706, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3095, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>，則他的執行時間也是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.848ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3469 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(1702, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2091, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2691, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3080, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container> 但是反過來就不一定。 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="7.756ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3428 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-3A9" d="M55 454Q55 503 75 546T127 617T197 665T272 695T337 704H352Q396 704 404 703Q527 687 596 615T666 454Q666 392 635 330T559 200T499 83V80H543Q589 81 600 83T617 93Q622 102 629 135T636 172L637 177H677V175L660 89Q645 3 644 2V0H552H488Q461 0 456 3T451 20Q451 89 499 235T548 455Q548 512 530 555T483 622T424 656T361 668Q332 668 303 658T243 626T193 560T174 456Q174 380 222 233T270 20Q270 7 263 0H77V2Q76 3 61 89L44 175V177H84L85 172Q85 171 88 155T96 119T104 93Q109 86 120 84T178 80H222V83Q206 132 162 199T87 329T55 454Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-I-1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-1-TEX-N-3A9"></use></g><g data-mml-node="mo" transform="translate(722, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1111, 0)"><use xlink:href="#MJX-1-TEX-I-1D453"></use></g><g data-mml-node="mo" transform="translate(1661, 0)"><use xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2050, 0)"><use xlink:href="#MJX-1-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2650, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3039, 0)"><use xlink:href="#MJX-1-TEX-N-29"></use></g></g></g></svg></mjx-container>也是同樣道理。</p>
<h1 id="參考資料">參考資料</h1>
<ol type="1">
<li><a href="http://alrightchiu.github.io/SecondRound/complexityasymptotic-notationjian-jin-fu-hao.html">Complexity：Asymptotic Notation(漸進符號)</a></li>
<li><a href="https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/asymptotic-notation">Asymptotic notation</a></li>
</ol>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Divide and conquer</title>
    <url>/posts/6018ea0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="divide-and-conquer">Divide and conquer</h1>
<p><strong>Divide and conquer</strong> 具有以下三種特性: 1. <strong>Divide</strong> the problem into a number of subproblems that are smaller instances of the same problem. 2. <strong>Conquer</strong> the subproblems by solving them recursively. If they are small enough, solve the subproblems as base cases. 3. <strong>Combine</strong> the solutions to the subproblems into the solution for the original problem.</p>
<a id="more"></a>
/posts/6018ea0/divide-and-conquer.png
<h1 id="參考資料">參考資料</h1>
<p><a href="https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/divide-and-conquer-algorithms">Divide and conquer algorithms</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Extended Binary Tree</title>
    <url>/posts/a1a29755/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="extended-binary-tree">Extended Binary Tree</h1>
<p>具有 <code>External Node</code> 的 B.T. 稱之</p>
<ul>
<li>一個二元樹具有 n 個節點，若以 Link List 表示，則會有 <code>n+1 條空 Link</code>，在這些空 Link 上加上特定節點，稱為 External Node (或 Failure Node)，其餘 Nodes 稱 <code>Internal Nodes</code></li>
<li>外部節點數 = 內部節點數 + 1 <strong>( 2n – (n - 1) = n + 1 )</strong></li>
<li>為何外部節點又被稱為失敗節點？
<ul>
<li>以<code>二元搜尋樹</code>的角度來説，若搜尋到外部節點時，代表在原本的二元樹中找不到想要的資料，也就是搜尋失敗</li>
</ul></li>
</ul>
<img src="/posts/a1a29755/ebt1.jpg" class="">
<a id="more"></a>
<h1 id="internal-path-length-i-and-extended-path-length-e">Internal path Length (I) and Extended path Length (E)</h1>
<h2 id="定義">定義</h2>
<p><span class="math display">\[ I = \sum_{i=1}^n Root 到內部節點 i 的路徑長度 \]</span> <span class="math display">\[ E = \sum_{i=1}^n Root 到外部節點 j 的路徑長度 \]</span></p>
<h2 id="定理">定理</h2>
<p><code>E = I + 2n</code> ( n 為內部節點個數 )</p>
<h2 id="範例">範例</h2>
<ul>
<li><strong>範例 1：</strong> 一個具有 5 個 Internal Nodes 的 Extended B.T.，其 <strong>I</strong> 値與 <strong>E</strong> 値分別為? <img src="/posts/a1a29755/ebt2.jpg" class=""></li>
<li><p><strong>Ans:</strong></p>
<ul>
<li><strong>I</strong> = 0 + 1 + 1 + 2 + 2 = 6</li>
<li><strong>E</strong> = 2 + 2 + 3 + 3 + 3 + 3 = 16 = <strong>I + 2n</strong></li>
</ul></li>
<li><strong>範例 2：</strong> 一個具有 n 個 Internal Nodes 的 SkewedExtended B.T.，其 <strong>I</strong> 値與 <strong>E</strong> 値分別為? <img src="/posts/a1a29755/ebt3.jpg" class=""></li>
<li><p><strong>Ans:</strong></p>
<ul>
<li><strong>I</strong> = 0+1+2+…+(n-1) = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(989, 0)"><use xlink:href="#MJX-4-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1767, 0)"><use xlink:href="#MJX-4-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2267, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g><g data-mml-node="mi" transform="translate(2656, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></li>
<li><strong>E</strong> = 1+2+3+…+2n= <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="30.092ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 13300.7 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-4-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-4-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-4-TEX-I-1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(989, 0)"><use xlink:href="#MJX-4-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1767, 0)"><use xlink:href="#MJX-4-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2267, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g><g data-mml-node="mi" transform="translate(2656, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(2964.6, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(3964.8, 0)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(4464.8, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(5342.6, 0)"><use xlink:href="#MJX-4-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(6398.3, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1589, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(2367, 0)"><use xlink:href="#MJX-4-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(2867, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(9418.5, 0)"><use xlink:href="#MJX-4-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(10474.2, 0)"><use xlink:href="#MJX-4-TEX-I-1D43C"></use></g><g data-mml-node="mo" transform="translate(11200.5, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(12200.7, 0)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(12700.7, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g></g></g></svg></mjx-container></li>
</ul></li>
</ul>
<h2 id="結論">結論</h2>
<ul>
<li><strong>E</strong> 値與 <strong>I</strong> 値成正比</li>
<li>愈平衡 (即：高度愈小) 的 Extended B.T.，其 E 値與 I 値愈小 (不考慮節點的加權值或加權值皆相同情況下)</li>
<li>然而，若<code>外部 Node 有加權値時</code>，則第二個結論不見得成立</li>
</ul>
<h1 id="weighted-external-path-length-w.e.p.l.-加權外部路徑長度">Weighted External Path Length (W.E.P.L.; 加權外部路徑長度)</h1>
<h2 id="定義-1">定義</h2>
<p>Extended B.T. 若有 n 個<strong>內部節點</strong>，則會有 n + 1 個<strong>外部節點</strong>。分別給予毎一個外部節點 1 個加權値，則： <span class="math display">\[ W.E.P.L. = \sum_{j=1}^{n+1} (Root 到外部節點 j 的路徑長度) \times (外部節點 j 的加權值) \]</span> </p>
<ul>
<li>當節點有<strong>加權値</strong>，且毎個<strong>加權値</strong>不盡相同時，則當樹愈平衡時，不見得其外部路徑長度就愈小</li>
<li><p><strong>問題：</strong></p>
<ul>
<li><strong>若有三個 ( n 個 ) 內部節點，什麼情況它們的 Weighted E.P.L. 是最小的?</strong></li>
</ul></li>
</ul>
<h1 id="min.-w.e.p.l.-最小加權外部路徑長度">Min. W.E.P.L. ( 最小加權外部路徑長度 )</h1>
<h2 id="定義-2">定義</h2>
<p>給予 (n+1) 個外部節點加權値，<strong>在 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.912ex" xmlns="http://www.w3.org/2000/svg" width="4ex" height="3.423ex" role="img" focusable="false" viewBox="0 -1109.8 1767.9 1512.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="msubsup" transform="translate(304.1, 520.2) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D436"></use></g><g data-mml-node="TeXAtom" transform="translate(812.2, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-4-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 0)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g></g><g data-mml-node="mi" transform="translate(715, -247) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g></g><g data-mml-node="mrow" transform="translate(220, -345) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(1378, 0)"><use xlink:href="#MJX-4-TEX-N-31"></use></g></g><rect width="1527.9" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 顆樹中，具有最小的 W.E.P.L. 稱之</strong></p>
<h2 id="應用">應用</h2>
<p>( n+1 ) 個訊息傳輸，其<strong>平均解碼時間最小</strong> (或：<strong>編碼位元長度最小</strong>)</p>
<h2 id="求-min.-w.e.p.l.的方法">求 Min. W.E.P.L.的方法</h2>
<ol type="1">
<li>Brute Force 法 (暴力法)</li>
<li><code>Huffman Algorithm (霍夫曼演算法)</code></li>
</ol>
<h1 id="huffman-algorithm-霍夫曼演算法">Huffman Algorithm (霍夫曼演算法)</h1>
<p>令 <strong><code>W</code> 為外部節點加權値的集合</strong>，Huffman Algo. 的執行<strong>歩驟</strong>如下：</p>
<ol type="1">
<li>自 W 中取出 <code>2 個具最小加權値的節點</code></li>
<li>替這 2 個節點<code>建立 Extended B.T</code></li>
<li>再將此 2 個節點的加權値和<code>加入 W</code> 中</li>
<li>Repeat 前三歩直到 W 中只<code>剩一個加權値為止</code></li>
</ol>
<h2 id="範例-1">範例</h2>
<p>有 6 個外部節點，其加權値分別為： 2, 3, 5, 7, 9, 13。求 <strong>Min. W.E.P.L.</strong> <img src="/posts/a1a29755/ha1.jpg" class=""></p>
<h2 id="精神">精神</h2>
<ul>
<li>若希望求得加權路徑長度總和為最小，則 <code>加權値愈重的節點，離 Root 要愈近</code></li>
<li>∴ 建樹時是從底層建起；在建樹的過程中，皆是取<code>當時在 W 集合中權重値最輕的兩個節點</code></li>
</ul>
<h2 id="應用-1">應用</h2>
<ol type="1">
<li>有 6 個 Message 要傳輸，其出現頻率如下： <span class="math display">\[ M_1 = \frac{2}{39}, M_2 = \frac{3}{39}, M_3 = \frac{5}{39}, M_4 = \frac{7}{39}, M_5 = \frac{9}{39}, M_6 = \frac{13}{39} \]</span> 今希望<strong>平均解碼時間最小</strong>，則：</li>
</ol>
<ul>
<li><strong>解碼時間最短的 Encoding / Decoding Tree</strong> 為何?</li>
<li>各 Message 之<strong>編碼</strong>內容為何?</li>
<li><strong>平均最小編碼位元長度</strong>為何?</li>
</ul>
<p><strong>Ans:</strong></p>
<p><code>Message：外部節點</code> <code>出現頻率： 加權値</code></p>
<ul>
<li><strong>解碼時間最短的 Encoding / Decoding Tree :</strong>
<ul>
<li>將出現頻率通分後，以分子當加權値建立 Huffman Tree <img src="/posts/a1a29755/ht1.jpg" class=""></li>
<li>Encoding / Decoding Tree (都是同一顆Tree):
<ul>
<li>左分支： 0</li>
<li>右分支： 1</li>
</ul></li>
</ul></li>
<li><strong>各 Message 之編碼內容： (由 Root 開始走)</strong>
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="10.65ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 4707.1 833" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-3-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1651.3, 0)"><use xlink:href="#MJX-3-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(2707.1, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use><use xlink:href="#MJX-3-TEX-N-30" transform="translate(500, 0)"></use><use xlink:href="#MJX-3-TEX-N-30" transform="translate(1000, 0)"></use><use xlink:href="#MJX-3-TEX-N-30" transform="translate(1500, 0)"></use></g></g></g></svg></mjx-container></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="10.65ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 4707.1 833" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-3-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-3-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1651.3, 0)"><use xlink:href="#MJX-3-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(2707.1, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use><use xlink:href="#MJX-3-TEX-N-30" transform="translate(500, 0)"></use><use xlink:href="#MJX-3-TEX-N-30" transform="translate(1000, 0)"></use><use xlink:href="#MJX-3-TEX-N-31" transform="translate(1500, 0)"></use></g></g></g></svg></mjx-container></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="9.518ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 4207.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(1651.3, 0)"><use xlink:href="#MJX-2-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(2707.1, 0)"><use xlink:href="#MJX-2-TEX-N-31"></use><use xlink:href="#MJX-2-TEX-N-30" transform="translate(500, 0)"></use><use xlink:href="#MJX-2-TEX-N-31" transform="translate(1000, 0)"></use></g></g></g></svg></mjx-container></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="8.387ex" height="1.885ex" role="img" focusable="false" viewBox="0 -683 3707.1 833" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-2-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-2-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-2-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(1651.3, 0)"><use xlink:href="#MJX-2-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(2707.1, 0)"><use xlink:href="#MJX-2-TEX-N-30"></use><use xlink:href="#MJX-2-TEX-N-30" transform="translate(500, 0)"></use></g></g></g></svg></mjx-container></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="8.387ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 3707.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-2-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-2-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-2-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(1651.3, 0)"><use xlink:href="#MJX-2-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(2707.1, 0)"><use xlink:href="#MJX-2-TEX-N-30"></use><use xlink:href="#MJX-2-TEX-N-31" transform="translate(500, 0)"></use></g></g></g></svg></mjx-container></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="8.387ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 3707.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-2-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-2-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(1651.3, 0)"><use xlink:href="#MJX-2-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(2707.1, 0)"><use xlink:href="#MJX-2-TEX-N-31"></use><use xlink:href="#MJX-2-TEX-N-31" transform="translate(500, 0)"></use></g></g></g></svg></mjx-container></li>
</ul></li>
<li>Message Decoding Time = Message Bit 數 = Root 到外部節點的路徑長度</li>
<li>經常出現的訊息，Bit 數要愈少；即路徑長度要愈短</li>
<li>平均最小編碼位元長度:
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="21.269ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 9401.1 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-SO-2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-2-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-2-TEX-SO-2211"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1222.7, 0)"><g data-mml-node="mo"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(389, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">編</text><text data-variant="normal" transform="translate(600, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">碼</text><text data-variant="normal" transform="translate(1200, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">位</text><text data-variant="normal" transform="translate(1800, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">元</text><text data-variant="normal" transform="translate(2400, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">數</text></g><g data-mml-node="mo" transform="translate(3389, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4000.2, 0)"><use xlink:href="#MJX-2-TEX-N-D7"></use></g><g data-mml-node="mo" transform="translate(5000.4, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(5389.4, 0)"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">出</text><text data-variant="normal" transform="translate(600, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">現</text><text data-variant="normal" transform="translate(1200, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">頻</text><text data-variant="normal" transform="translate(1800, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(7789.4, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></g></svg></mjx-container>
<span class="math display">\[ 2 \times \frac{7}{39} + 2 \times \frac{9}{39} + 2 \times \frac{13}{39} + 3 \times \frac{5}{39} + 4 \times \frac{3}{39} + 4 \times \frac{2}{39} = \frac{93}{39} \approx 2.38 \]</span></li>
</ul></li>
</ul>
<ol start="2" type="1">
<li>有一字串 AABBBACCBADDECBA，求 Encoding / Decoding Tree 為何?</li>
</ol>
<p><strong>Ans:</strong></p>
<ul>
<li><strong>毎個字元的出現頻率：</strong>
<ul>
<li>A: 5次</li>
<li>B: 5次</li>
<li>C: 3次</li>
<li>D: 2次</li>
<li>E: 1次 <img src="/posts/a1a29755/ht2.jpg" class=""></li>
</ul></li>
</ul>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course08.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Graph Traversal</title>
    <url>/posts/108de846/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="圖形追蹤-traverse-graph">圖形追蹤 (Traverse Graph)</h1>
<ul>
<li><strong>目的：</strong>
<ul>
<li>圖形中的所有頂點都被拜訪到，且僅被拜訪到一次</li>
</ul></li>
<li><strong>拜訪方式有兩種：</strong>
<ul>
<li><code>Depth First Search</code> (DFS；深先搜尋，需利用 <strong>Stack</strong>)</li>
<li><code>Breadth First Search</code> (BFS；廣先搜尋，需利用 <strong>Queue</strong>)</li>
</ul></li>
<li><strong>應用：</strong>
<ul>
<li>檢査 Graph 是否連通？</li>
<li>找出此圖的連通單元</li>
<li>... <a id="more"></a></li>
</ul></li>
<li>不論是採用何種圖形追蹤方法，在實作上皆可引入一個 <code>visited flag</code> (拜訪旗標)，<strong>以指出頂點的目前状況</strong>
<ul>
<li>Flag = <strong>0</strong>：尚未拜訪 (not processed)</li>
<li>Flag = <strong>1</strong>：拜訪中 (in queue or stack)</li>
<li>Flag = <strong>2</strong>：已拜訪 (processed)</li>
</ul></li>
</ul>
<h1 id="depth-first-traversal">Depth-First Traversal</h1>
<p>走訪起始頂點 v，然後選擇一個相鄰至 v 且尚未被拜訪過的頂點 w；以w為起始點再做 Depth-First 追蹤。如果從任何已拜訪過的頂點，都無法再拜訪到一個尚未被走過的頂點時，則結束拜訪 <div class="note success"><p>包含<code>遞迴</code>應用的概念，因此可利用 <code>Stack</code> 保存走訪過程中間所走過的點</p>
</div></p>
<ul>
<li><strong>Steps:</strong>
<ol type="1">
<li>選擇一起始拜訪頂點 (可任選) ，將它 Push 到 stack 中</li>
<li><ul>
<li>若 Stack 不為空，則
<ul>
<li>從 Stack 中 Pop 一個頂點 (視為已拜訪頂點)，並將<code>此頂點所有相鄰之其它未拜訪頂點</code> Push 到 Stack 中。 (重覆執行)</li>
<li>若所有頂點皆已被拜訪過，而 Stack 仍不為空時，則將 Stack 清空</li>
</ul></li>
<li>若 Stack 為空，則追蹤程序完成</li>
</ul></li>
</ol></li>
</ul>
<p><strong>例:</strong> <img src="/posts/108de846/gt1.jpg" class=""> <img src="/posts/108de846/gt2.jpg" class=""> <img src="/posts/108de846/gt3.jpg" class=""> <img src="/posts/108de846/gt4.jpg" class=""> <img src="/posts/108de846/gt5.jpg" class=""> <img src="/posts/108de846/gt6.jpg" class=""> <img src="/posts/108de846/gt7.jpg" class=""> <img src="/posts/108de846/gt8.jpg" class=""> <img src="/posts/108de846/gt9.jpg" class=""> <img src="/posts/108de846/gt10.jpg" class=""> <img src="/posts/108de846/gt11.jpg" class=""> <img src="/posts/108de846/gt12.jpg" class=""></p>
<p><strong>Ans:</strong> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="24.898ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 11005.1 877" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-5-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-5-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path id="MJX-5-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-5-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-5-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-5-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(986.6, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1431.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2417.8, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(2862.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(3849, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(4293.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-38"></use></g></g><g data-mml-node="mo" transform="translate(5280.2, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5724.9, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(6711.4, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(7156.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(8142.7, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(8587.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(9573.9, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(10018.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-37"></use></g></g></g></g></svg></mjx-container> <div class="note danger"><ul>
<li>DFS 之順序<code>並不唯一</code>
<ul>
<li>起始頂點可任選</li>
<li>每個頂點的分枝路徑可任選</li>
</ul></li>
<li>除非規定 “拜訪時，依 Node 編號<code>由小到大</code>拜訪” 才會唯一 (上面答案就是)</li>
</ul>
</div></p>
<p><strong>例:</strong> 承上圖，下列何者不為 DFS 之 Order?</p>
<ol type="a">
<li>1, 2, 5, 8, 6, 3, 7, 4</li>
<li>1, 3, 6, 8, 5, 2, 4, 7</li>
<li>1, 3, 7, 8, 6, 5, 2, 4</li>
<li>1, 2, 4, 8, 6, 3, 7, 5</li>
<li>1, 3, 7, 8, 5, 4, 2, 6</li>
</ol>
<p><strong>Ans:</strong> e</p>
<h1 id="breadth-first-traversal">Breadth-First Traversal</h1>
<p>由起始頂點 v 開始走訪。所有相鄰至 v 且尚未被拜訪過的頂點，都會在下個步驟裡一一被走訪。而相鄰至這些被走訪頂點且尚未走過的頂點，又將被一一走訪；重複上述，直到無頂點可被拜訪為止</p>
<ul>
<li><strong>Steps:</strong>
<ol type="1">
<li>選擇一起始拜訪頂點 (可任選) ，將它放入 Queue 中</li>
<li><ul>
<li>若 Queue 不為空，則
<ul>
<li>從 Queue 的前端移出一個頂點 (視為已拜訪頂點)，並將此頂點<code>所有相鄰之其它未拜訪頂點放入 Queue 中</code>。 (重覆執行)</li>
</ul></li>
<li>若 Queue 為空，則追蹤程序完成</li>
</ul></li>
</ol></li>
</ul>
<img src="/posts/108de846/gt13.jpg" class="">
<img src="/posts/108de846/gt14.jpg" class="">
<img src="/posts/108de846/gt15.jpg" class="">
<img src="/posts/108de846/gt16.jpg" class="">
<img src="/posts/108de846/gt18.jpg" class="">
<img src="/posts/108de846/gt19.jpg" class="">
<p><strong>Ans:</strong> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="24.898ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 11005.1 877" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-5-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-5-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-5-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-5-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-5-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-5-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(986.6, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1431.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2417.8, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(2862.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3849, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(4293.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(5280.2, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5724.9, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(6711.4, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(7156.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(8142.7, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(8587.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(9573.9, 0)"><use xlink:href="#MJX-5-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(10018.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-38"></use></g></g></g></g></svg></mjx-container> <div class="note danger"><ul>
<li>BFS 之順序<code>並不唯一</code></li>
<li>除非規定 “拜訪時，依 Node 編號<code>由小到大</code>拜訪” 才會唯一 (上面答案就是)</li>
</ul>
</div></p>
<h1 id="aov-activity-on-vertex-network">AOV (Activity On Vertex) Network</h1>
<ul>
<li>假設 G = &lt;V, E&gt; 為一個 Directed grapth，其中 <code>Vertex</code> 表示<strong>工作(Activity)</strong>，<code>Edge</code> 表示<strong>工作執行之先後次序關係</strong></li>
<li>E.g. <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="7.595ex" height="2.211ex" role="img" focusable="false" viewBox="0 -683 3356.8 977.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-5-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-5-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-5-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1154.7, 0)"><use xlink:href="#MJX-5-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2432.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D457"></use></g></g></g></g></svg></mjx-container>，表示 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.984ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 877 840.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-4-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 工作必須先於 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="2.091ex" height="2.211ex" role="img" focusable="false" viewBox="0 -683 924.3 977.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-4-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D457"></use></g></g></g></g></svg></mjx-container> 執行，稱 G 為 <strong>AOV Network</strong></li>
<li>應用: 求合理的工作執行順序 ⇒ 即： <strong>Topological Order (拓樸順序)</strong></li>
</ul>
<img src="/posts/108de846/gt20.jpg" class="">
<h2 id="topological-order-拓樸順序">Topological Order (拓樸順序)</h2>
<p>給定一個<code>不具 Cycle</code> 的 <strong>AOV Network</strong>，則可以定出 ≥ 1 組 Vertex (或稱 job ) 的拜訪順序，且此順序須滿足: “若在 <strong>AOV Network</strong>，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.984ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 877 840.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="2.091ex" height="2.211ex" role="img" focusable="false" viewBox="0 -683 924.3 977.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g></g></g></svg></mjx-container> 的前導，則在此順序中， <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.984ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 877 840.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 必定出現在 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="2.091ex" height="2.211ex" role="img" focusable="false" viewBox="0 -683 924.3 977.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mi" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g></g></g></svg></mjx-container> 之前”</p>
<p><strong>例：</strong> 請列出下圖的其中一組 Topological Order <img src="/posts/108de846/gt21.jpg" class=""></p>
<ol type="1">
<li>找出一個<code>無前導</code>的頂點 (Indegree = 0)</li>
<li>將此頂點輸出，且<code>刪除此點所 Leading-out 之 edge</code></li>
<li>Repeat 1~2，直到<code>所有 Vertex 已輸出</code>，或剩下的點<code>皆有前導存在</code></li>
<li>If “不是所有點皆輸出” then “No Topological Order 存在”</li>
</ol>
<p><strong>Ans:</strong> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="18.422ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 8142.7 877" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-3-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-3-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-3-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-3-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-3-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(986.6, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1431.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2417.8, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(2862.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3849, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(4293.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(5280.2, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5724.9, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(6711.4, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(7156.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-36"></use></g></g></g></g></svg></mjx-container></p>
<div class="note warning"><p><img src="/posts/108de846/gt22.jpg" class=""></p>
<ul>
<li>若 AOV Network 有 cycle，則無 Topological Order。(∵ 無法決定誰先做)</li>
<li>不具 cycle 的 AOV Network，其 Topological Order ≥ 1組。 (不一定唯一)</li>
</ul>
</div>
<h2 id="aov-network-之資料結構表示">AOV Network 之資料結構表示</h2>
<p><strong>做法：</strong></p>
<ul>
<li>利用 <code>Adjacency List</code>，並在相鄰串列 Vertex[1…n] 中多加一個欄位： <code>count 欄</code>，用以<strong>記錄 vertex 的射入邊數</strong> (即：in-degree)</li>
<li>如何實作 “<code>刪除某 vertex 所 Leading-out 之 edge</code>” 的動作？
<ul>
<li>從該 vertex 的相鄰串列中，找出與之相鄰的其它頂點</li>
<li>將這些頂點的 count 欄之值<code>減1</code>
<ul>
<li>∵ <mark class="label success">刪除某 vertex 所 Leading-out 之 edge = 降低與該 vertex 相鄰之所有頂點的 in-degree 數目</mark>。(沒有實質的 “<strong>刪除邊</strong>” 之動作)</li>
</ul></li>
</ul></li>
</ul>
<p><strong>範例：</strong></p>
<ol type="1">
<li>找出一個<code>無前導</code>的頂點 (Indegree = 0)</li>
<li>將此頂點輸出，且<code>刪除此點所 Leading-out 之 edge</code></li>
<li>Repeat 1~2，直到<code>所有 Vertex 已輸出</code>，或剩下的點<code>皆有前導存在</code></li>
<li>If “不是所有點皆輸出” then “No Topological Order 存在”</li>
</ol>
<img src="/posts/108de846/gt23.jpg" class="">
<img src="/posts/108de846/gt24.jpg" class="">
<img src="/posts/108de846/gt25.jpg" class="">
<p><span class="math display">\[ ... \]</span> <img src="/posts/108de846/gt26.jpg" class=""></p>
<p><strong>Ans:</strong> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex" xmlns="http://www.w3.org/2000/svg" width="18.422ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 8142.7 877" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-2-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-2-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(986.6, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1431.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2417.8, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(2862.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3849, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(4293.7, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(5280.2, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5724.9, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(6711.4, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(7156.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-36"></use></g></g></g></g></svg></mjx-container></p>
<h1 id="aoe-network">AOE Network</h1>
<p>G = (V, E) 有向圖，以 <code>Edge</code> 表示工作 (Activity)，<code>Vertex</code> 表示事件 (Event)，Edge 上具有加權值，表示工作完成所需的時數 <div class="note success"><ul>
<li>事件發生，射出工作 (leading out) 才可以開始執行</li>
<li>所有射入工作完成，事件才會發生</li>
</ul>
</div> </p>
<ul>
<li>完成此計畫所需之最少(最起碼)的工作時數?
<ul>
<li>求從 Start → End 事件之<code>最長路徑</code>長度</li>
<li>即: 求 <code>Critical path (臨界路徑)</code>的長度</li>
</ul></li>
<li>上圖的可能路徑有(取部份為例):
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="19.486ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 8612.9 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="30.989ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 13697.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(11432.8, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(12710.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="25.238ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 11155 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="30.989ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 13697.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(11432.8, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(12710.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="25.238ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 11155 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 14)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="19.486ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 8612.9 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 11)</li>
<li>最長路徑的長度為 18，因此有四條路徑為 Critical path</li>
</ul></li>
<li>前例所有的臨界路徑有:
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="19.486ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 8612.9 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="30.989ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 13697.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-35"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(11432.8, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(12710.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="25.238ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 11155 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-36"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="30.989ex" height="1.92ex" role="img" focusable="false" viewBox="0 -683 13697.1 848.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-2-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1264.3, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(2542.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(3806.4, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(5084.2, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(6348.5, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(7626.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-34"></use></g></g><g data-mml-node="mo" transform="translate(8890.7, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(10168.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(11432.8, 0)"><use xlink:href="#MJX-2-TEX-N-2192"></use></g><g data-mml-node="msub" transform="translate(12710.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D449"></use></g><g data-mml-node="mn" transform="translate(583, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-38"></use></g></g></g></g></svg></mjx-container>
(時數= 18)</li>
<li>交集的工作為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.11ex" height="1.337ex" role="img" focusable="false" viewBox="0 -441 932.6 591" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D44E"></use></g><g data-mml-node="mn" transform="translate(529, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g></g></g></svg></mjx-container>，此即為 Critical Task。若加速此工作，則有助於縮短完成時間。</li>
</ul></li>
</ul>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course07.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Graph</title>
    <url>/posts/c8842ad8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="graph">Graph</h1>
<p>一個圖形(Graph) 是由<strong>頂點集合</strong> V 與<strong>邊集合</strong> E 所組成，表示如下： <code>G (V, E)</code> <img src="/posts/c8842ad8/g1.jpg" class=""> <a id="more"></a></p>
<h2 id="圖形種類">圖形種類</h2>
<h3 id="無向圖-undirected-graph">無向圖 (Undirected graph)</h3>
<ul>
<li>G = (V, E), 其中 V 為<strong>頂點集合</strong>，E 為<strong>邊集合</strong>。 邊集合中的毎一個邊都<code>沒有方向性</code></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="15.813ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 6989.4 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-6-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-6-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-6-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-6-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3105.7, 0)"><use xlink:href="#MJX-6-TEX-N-3D"></use></g><g data-mml-node="mo" transform="translate(4161.5, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(4550.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(5376.8, 0)"><use xlink:href="#MJX-6-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5821.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(6600.4, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container>
<img src="/posts/c8842ad8/g3.jpg" class=""></li>
</ul>
<h4 id="範例">範例:</h4>
<img src="/posts/c8842ad8/g4.jpg" class="">
<ul>
<li><strong>V(G)</strong> = {0,1,2,3}</li>
<li><strong>E(G)</strong> = {(0,1), (0,2),(0,3),(1,2),(1,3),(2,3)} <img src="/posts/c8842ad8/g5.jpg" class=""></li>
<li><strong>V(G)</strong> = {0,1,2,3,4,5,6}</li>
<li><strong>E(G)</strong> = {(0,1), (0,2),(1,3),(1,4),(2,5),(2,6)}</li>
</ul>
<h3 id="有向圖-directed-graph">有向圖 (Directed graph)</h3>
<ul>
<li>G = (V, E), 其中 V 為<strong>頂點集合</strong>，E 為<strong>邊集合</strong>。邊集合中的毎一個邊都有<code>方向性</code>，以指向下一個頂點</li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="15.813ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 6989.4 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-6-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-6-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-6-TEX-N-2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-6-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3105.7, 0)"><use xlink:href="#MJX-6-TEX-N-2260"></use></g><g data-mml-node="mo" transform="translate(4161.5, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(4550.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(5376.8, 0)"><use xlink:href="#MJX-6-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5821.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(6600.4, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container></li>
<li>有向圖的邊有時亦稱為弧 (Arc) <img src="/posts/c8842ad8/g2.jpg" class=""></li>
</ul>
<h4 id="範例-1">範例:</h4>
<img src="/posts/c8842ad8/g6.jpg" class="">
<ul>
<li><strong>V(G)</strong> = {0,1,2}</li>
<li><strong>E(G)</strong> = {(0,1), (1,0),(1,2)}</li>
</ul>
<h1 id="terminology-相關術語">Terminology (相關術語)</h1>
<h2 id="complete-graph-完整圖">Complete Graph (完整圖)</h2>
<p>一個<strong>完整圖 (complete graph)</strong> 是一個擁有<code>最多</code>非重複邊線的圖</p>
<h3 id="無向圖">無向圖</h3>
<p>若圖具有 n 個<strong>頂點</strong>，則具有最多的非重複邊個數達 <code>n(n-1)/2</code> 時，此圖稱為<strong>完整圖</strong> <img src="/posts/c8842ad8/g7.jpg" class=""> <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="15.106ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 6676.8 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-6-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-6-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-6-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1589, 0)"><use xlink:href="#MJX-6-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2367, 0)"><use xlink:href="#MJX-6-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2867, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3020.1, 0)"><use xlink:href="#MJX-6-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(4075.9, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mn"><use xlink:href="#MJX-6-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(500, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(889, 0)"><use xlink:href="#MJX-6-TEX-N-34"></use></g><g data-mml-node="mo" transform="translate(1389, 0)"><use xlink:href="#MJX-6-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2167, 0)"><use xlink:href="#MJX-6-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2667, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1123.7, -345) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g><rect width="2360.9" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> = 6 (非重複邊個數)</strong></p>
<h3 id="有向圖">有向圖</h3>
<p>若圖具有 n 個<strong>頂點</strong>，則具有最多的非重複邊個數達 <code>n(n-1)</code> 時，此圖稱為<strong>完整圖</strong> <img src="/posts/c8842ad8/g8.jpg" class=""> <strong>n(n-1) = 4(4-1) = 12 (非重複邊個數)</strong></p>
<h2 id="subgraph-子圖">Subgraph (子圖)</h2>
<p>若 G’ 是圖形 G 的<strong>子圖</strong>，則表示 <code>V(G‘) ⊆  V(G)</code> 且 <code>E(G’) ⊆ E(G)</code></p>
<p><strong>例:</strong>(以下子圖未完全列出) <img src="/posts/c8842ad8/g9.jpg" class=""> <img src="/posts/c8842ad8/g10.jpg" class=""></p>
<h2 id="path-路徑">Path (路徑)</h2>
<p>在圖形 G 中，由頂點 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="2.015ex" height="1.652ex" role="img" focusable="false" viewBox="0 -443 890.7 730.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-5-TEX-I-1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D45D"></use></g></g></g></g></svg></mjx-container> 到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="1.946ex" height="1.652ex" role="img" focusable="false" viewBox="0 -443 860.3 730.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-5-TEX-I-1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D45E"></use></g></g></g></g></svg></mjx-container> 的路徑是:(兩種說法各佔一半)</p>
<ol type="1">
<li><code>一連串頂點的集合</code></li>
<li><code>一連串邊的集合</code></li>
</ol>
<p>例： (以下路徑未完全列出)</p>
<img src="/posts/c8842ad8/g11.jpg" class="">
<ol type="1">
<li>點
<ul>
<li>0 → 2 : (0, 1, 3, 2)</li>
<li>1 → 3 : (1, 2, 3)</li>
<li>0 → 1 : (0, 1, 3, 1)</li>
</ul></li>
<li>邊
<ul>
<li>0 → 2 : (0, 1), (1, 3), (3, 2)</li>
<li>1 → 3 : (1, 2), (2, 3)</li>
<li>0 → 1 : (0, 1), (1, 3), (3, 1)</li>
</ul></li>
</ol>
<img src="/posts/c8842ad8/g12.jpg" class="">
<ol type="1">
<li>點
<ul>
<li>0 → 2 : (0, 1, 2)</li>
<li>1 → 2 : (1, 0, 1, 2)</li>
</ul></li>
<li>邊
<ul>
<li>0 → 2 : (0, 1), (1, 2)</li>
<li>1 → 2 : (1, 0), (0, 1), (1, 2)</li>
</ul></li>
</ol>
<h2 id="path-length-路徑長度">Path Length (路徑長度)</h2>
<p>路徑上所包含的<code>邊之數目</code></p>
<h2 id="simple-path-簡單路徑">Simple Path (簡單路徑)</h2>
<p>路徑上除了起點和終點可以相同之外，<code>其餘頂點均不相同</code> <img src="/posts/c8842ad8/g13.jpg" class=""> <img src="/posts/c8842ad8/g14.jpg" class=""></p>
<h2 id="cycle-迴圈">Cycle (迴圈)</h2>
<p>是一個簡單路徑，且<code>起點與終點相同</code> <img src="/posts/c8842ad8/g15.jpg" class=""> <img src="/posts/c8842ad8/g16.jpg" class=""></p>
<h2 id="connected-連通">Connected (連通)</h2>
<h3 id="無向圖-1">無向圖</h3>
<p>在一 undirected graph 中，<code>任何成對頂點之間皆有路徑存在</code> <img src="/posts/c8842ad8/g17.jpg" class=""></p>
<h3 id="有向圖-1">有向圖</h3>
<ul>
<li><strong>Strongly connected (強連通)</strong>
<ul>
<li>在有向圖形中，任何成對頂點之間<code>皆有路徑</code>可以<code>相互到達對方</code> <img src="/posts/c8842ad8/g18.jpg" class=""></li>
</ul></li>
<li><strong>Weakly connected (弱連通)</strong>
<ul>
<li>在有向圖中，至少有兩個頂點<code>無法以有向路徑相互到達對方</code></li>
<li>即：僅某一頂點可到達另一點，而另一點卻無法走回到對方 <img src="/posts/c8842ad8/g19.jpg" class=""></li>
</ul></li>
<li><strong>Disjoint (不相連)</strong>
<ul>
<li>一個有向圖形被切割成多個<code>互不相連</code>的子圖 <img src="/posts/c8842ad8/g20.jpg" class=""></li>
</ul></li>
</ul>
<h2 id="degree-分枝度">Degree (分枝度)</h2>
<h3 id="無向圖-2">無向圖</h3>
<p>一個頂點的<strong>分枝度</strong>，為<code>連接至該頂點的邊之個數</code> <img src="/posts/c8842ad8/g21.jpg" class=""> The <strong>degrees</strong> of the nodes A, C, D, F = 1</p>
<p>The <strong>degrees</strong> of the nodes B, E = 3</p>
<h3 id="有向圖-2">有向圖</h3>
<p>一個頂點的分枝度，是由該頂點的<strong>入分枝度 (<code>Indegree</code>)</strong> 與<strong>出分枝度 (<code>Outdegree</code>)</strong> 加總而得</p>
<ul>
<li><strong>Outdegree</strong>：一個頂點的出分枝度為<code>離開該頂點的邊之個數</code></li>
<li><strong>Indegree</strong>：一個頂點的入分枝度為<code>進入該頂點的邊之個數</code></li>
</ul>
<img src="/posts/c8842ad8/g22.jpg" class="">
<p>B 的 <strong>Indegree</strong> = 1; B 的 <strong>outdegree</strong> = 2; B 的 d<strong>egree</strong> = 3</p>
<p>E 的 <strong>indegree</strong> = 2; E 的 <strong>outdegree</strong> = 2; E 的 <strong>degree</strong> = 4</p>
<h2 id="degree-與邊的關係">Degree 與邊的關係</h2>
<h3 id="無向圖-3">無向圖</h3>
<p><span class="math display">\[\begin{equation}
\sum_{i=1}^n d_i = 2e \quad \therefore e = \frac{\sum d_i}{2} \quad (d_i : 指 V_i 的 degree)
\end{equation}\]</span> <img src="/posts/c8842ad8/g23.jpg" class=""> <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="16.149ex" height="2.745ex" role="img" focusable="false" viewBox="0 -868.2 7137.7 1213.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path><path id="MJX-4-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-4-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-4-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D452"></use></g><g data-mml-node="mo" transform="translate(743.8, 0)"><use xlink:href="#MJX-4-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(1799.6, 0)"><g data-mml-node="mrow" transform="translate(220, 398) scale(0.707)"><g data-mml-node="mn"><use xlink:href="#MJX-4-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(500, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(1278, 0)"><use xlink:href="#MJX-4-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(1778, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(2556, 0)"><use xlink:href="#MJX-4-TEX-N-33"></use></g><g data-mml-node="mo" transform="translate(3056, 0)"><use xlink:href="#MJX-4-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(3834, 0)"><use xlink:href="#MJX-4-TEX-N-33"></use></g></g><g data-mml-node="mn" transform="translate(1575.5, -345) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><rect width="3264.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(5581.9, 0)"><use xlink:href="#MJX-4-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(6637.7, 0)"><use xlink:href="#MJX-4-TEX-N-36"></use></g></g></g></svg></mjx-container></strong></p>
<h3 id="有向圖-3">有向圖</h3>
<p><span class="math display">\[\begin{equation}
e = \sum_{i=1}^n Indegree_i = \sum_{i=1}^n Outdegree_i
\end{equation}\]</span> <span class="math display">\[\begin{equation}
(Indegree_i : 指 V_i 的 indegree, Outdegree_i : 指 V_i 的 Outdegree)
\end{equation}\]</span> <img src="/posts/c8842ad8/g24.jpg" class=""> <strong>e = 3</strong> (僅看 Indegree 或 Outdegree 的個數)</p>
<h1 id="圖形的儲存結構-graph-storage-structures">圖形的儲存結構 (Graph Storage Structures)</h1>
<h2 id="adjacency-matrix-相鄰矩陣">Adjacency Matrix (相鄰矩陣)</h2>
<h3 id="無向圖-4">無向圖</h3>
<p>G = (V, E) 為一無向圖，|V| = n。宣告一個 n × n 的二維矩陣 A，其中： <span class="math display">\[\begin{equation}
A[i, j] = 
\begin{cases}
0, &amp; if \; (V_i, V_j) \notin E \\
1, &amp; if \; (V_i, V_j) \in E
\end{cases}
\end{equation}\]</span></p>
<p><strong>範例：</strong> <img src="/posts/c8842ad8/g25.jpg" class=""></p>
<h4 id="特質">特質</h4>
<p>此 Matrix 必為<code>對稱 (Symmetric)</code></p>
<p>∵ 無向圖中，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="15.813ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 6989.4 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-4-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-4-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-4-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-4-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3105.7, 0)"><use xlink:href="#MJX-4-TEX-N-3D"></use></g><g data-mml-node="mo" transform="translate(4161.5, 0)"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(4550.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(5376.8, 0)"><use xlink:href="#MJX-4-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5821.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(6600.4, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g></g></g></svg></mjx-container>，∴ A[i, j] = A[j, i] 儲存時可用<strong>上三角或下三角陣列</strong></p>
<h4 id="運作">運作</h4>
<ul>
<li><strong>判斷邊 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-4-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-4-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-4-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g></g></g></svg></mjx-container> 是否存在?</strong>
<ul>
<li><strong>做法</strong>：檢査 <code>A[i, j]</code> 的値是否為 1</li>
<li><strong>時間複雜度</strong>： <code>O(1)</code></li>
</ul></li>
<li><strong>求頂點 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-4-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 的分枝度?</strong>
<ul>
<li><strong>做法</strong>：求第 i 列或第 i 行之元素値總和</li>
<li><strong>時間複雜度</strong>： <code>O(n)</code> (∵ 需用一個迴圈)</li>
</ul></li>
<li><strong>求圖形的邊數?</strong>
<ul>
<li><strong>做法</strong>： <span class="math display">\[\begin{equation}
e = \sum_{i=1}^n \frac{D_i}{2} = \sum_{i=1}^n \sum_{j=1}^n \frac{A[i, j]}{2}
\end{equation}\]</span></li>
<li><strong>時間複雜度</strong>：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.757ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2544.6 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, 363) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2155.6, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g></g></g></svg></mjx-container></li>
</ul></li>
</ul>
<h3 id="有向圖-4">有向圖</h3>
<p>G = (V, E) 為一有向圖，|V| = n。宣告一個 n × n 的二維矩陣 A，其中： <span class="math display">\[\begin{equation}
A[i, j] = 
\begin{cases}
0, &amp; if \; (V_i, V_j) \notin E \\
1, &amp; if \; (V_i, V_j) \in E
\end{cases}
\end{equation}\]</span></p>
<p><strong>範例：</strong> (以 <strong>Out-degree</strong> 為主) <img src="/posts/c8842ad8/g26.jpg" class=""> <div class="note warning"><p>圖中<strong>列</strong>為 Outdegree，<strong>行</strong>為 Indegree</p>
</div></p>
<h4 id="特質-1">特質</h4>
<p>此 Matrix <code>不一定</code>是對稱 (Symmetric)</p>
<p>∵ 有向圖中，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container> 存在，不見得 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-3-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(1215.3, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1660, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container> 也會存在</p>
<h4 id="運作-1">運作</h4>
<ul>
<li><strong>判斷邊 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container> 是否存在?</strong>
<ul>
<li><strong>做法</strong>：檢査 A[i, j] 的値是否為 1 (同無向圖)</li>
<li><strong>時間複雜度</strong>： <code>O(1)</code></li>
</ul></li>
<li><strong>求頂點 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 的出分枝度與入分枝度? (若矩陣是以 <mark class="label info">Out-degree</mark> 為主)</strong>
<ul>
<li><strong>做法</strong>：
<ul>
<li><strong>Out-degree</strong>：求第 i 列之元素値總和</li>
<li><strong>In-degree</strong>：求第 i 行之元素値總和</li>
</ul></li>
<li><strong>時間複雜度</strong>： <code>O(n)</code> (∵ 需用一個迴圈)</li>
</ul></li>
<li><strong>求圖形的邊數?</strong>
<ul>
<li><strong>做法</strong>： <span class="math display">\[\begin{equation}
e = \sum_{i=1}^n D_i^{Out} = \sum_{i=1}^n D_i^{In} = \sum_{i=1}^n \sum_{j=1}^n A[i,j]
\end{equation}\]</span></li>
<li><strong>時間複雜度</strong>： <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.757ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2544.6 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, 363) scale(0.707)"><use xlink:href="#MJX-3-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2155.6, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container></li>
</ul></li>
</ul>
<h2 id="adjacency-list-相鄰串列">Adjacency List (相鄰串列)</h2>
<h3 id="無向圖-5">無向圖</h3>
<p>若 G = (V, E) 為一無向圖，|V| = n 且 |E| = e，則需使用 <code>n 條相鄰串列</code>與<code>一個 Size 為 n 的一維矩陣 A[1, …, n]</code>，其中 A[i] 所存放的是頂點 i 的相鄰串列，此串列中毎個 Node 皆記録著與頂點 i 相鄰之其它頂點 <img src="/posts/c8842ad8/g27.jpg" class=""></p>
<h4 id="特質-2">特質</h4>
<ul>
<li>在無向圖中，<strong>相鄰串列</strong>的 Node 總數 = 2e (<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.777ex" xmlns="http://www.w3.org/2000/svg" width="13.217ex" height="2.563ex" role="img" focusable="false" viewBox="0 -789.6 5841.8 1132.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-SO-2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path><path id="MJX-3-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-I-1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path><path id="MJX-3-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-3-TEX-I-1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="munderover"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-SO-2211"></use></g><g data-mml-node="mi" transform="translate(1056, 477.1) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" transform="translate(1056, -285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(345, 0)"><use xlink:href="#MJX-3-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1123, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g></g></g><g data-mml-node="msub" transform="translate(2420.3, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D437"></use></g><g data-mml-node="mi" transform="translate(828, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(3820, 0)"><use xlink:href="#MJX-3-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(4875.8, 0)"><use xlink:href="#MJX-3-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(5375.8, 0)"><use xlink:href="#MJX-3-TEX-I-1D452"></use></g></g></g></svg></mjx-container>)</li>
</ul>
<p>∵ 無向圖中，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="15.813ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 6989.4 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-3-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3105.7, 0)"><use xlink:href="#MJX-3-TEX-N-3D"></use></g><g data-mml-node="mo" transform="translate(4161.5, 0)"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(4550.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(5376.8, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(5821.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(6600.4, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container>，∴ 在頂點為 i 的<strong>相鄰串列</strong>中會加入 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="1.87ex" height="1.668ex" role="img" focusable="false" viewBox="0 -443 826.3 737.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g></g></g></svg></mjx-container> 的 Node；同時，在頂點為 j 的<strong>相鄰串列</strong>中會加入 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 的 Node - 每個 Node 所連接到的<strong>相鄰串列</strong>其<strong>長度</strong>等於該 Node 的<strong>分枝度</strong></p>
<h4 id="運作-2">運作</h4>
<ul>
<li><strong>判斷邊 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-3-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-3-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g></svg></mjx-container> 是否存在?</strong>
<ul>
<li><strong>做法</strong>： 檢査頂點為 i 的相鄰串列中，是否有 Node j 存在。(Yes: 存在, No: 不存在)</li>
<li><strong>時間複雜度</strong>： <code>O(e)</code> (∵ 與 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 相連的邊之個數有關，∴ 比相鄰矩陣花時間)</li>
</ul></li>
<li><strong>求頂點 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-3-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 的分枝度?</strong>
<ul>
<li><strong>做法</strong>：求頂點 i 之相鄰串列的長度 (即：節點總數)</li>
<li><strong>時間複雜度：</strong> <code>O(e)</code></li>
</ul></li>
<li><strong>求圖形的邊數?</strong>
<ul>
<li><strong>做法：</strong> <span class="math display">\[\begin{align}
e &amp;= \sum_{i=1}^n \frac{D_i}{2} \\
&amp;= \sum_{i=1}^n \frac{\text{頂點 i 之相鄰串列長度}}{2} \\ 
&amp;= \frac{\text{所有串列之節點總數}}{2}
\end{align}\]</span></li>
<li><strong>時間複雜度</strong>： <code>O(n + e)</code></li>
</ul></li>
<li><strong>時間複雜度 O(n + e) 的進一歩分析:</strong>
<ul>
<li><code>當圖形的邊很少的情況</code>： 一個無向圖可以保持連通的最少邊數為 e = n-1。因此，O(n+e) = O(2n-1) ≒ O(n)</li>
<li><code>當圖形的邊很多的情況</code>：一個擁有最多邊數的圖形是<strong>完整圖 (Complete Graph)</strong>，即：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="10.276ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 4541.9 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path><path id="MJX-2-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D452"></use></g><g data-mml-node="mo" transform="translate(743.8, 0)"><use xlink:href="#MJX-2-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(1799.6, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1589, 0)"><use xlink:href="#MJX-2-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2367, 0)"><use xlink:href="#MJX-2-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2867, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>。因此，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="17.438ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 7707.6 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-2-TEX-I-1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-2-TEX-N-2252" d="M15 541Q15 569 33 585T75 601T117 585T135 541Q135 514 118 498T75 481T32 498T15 541ZM56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153ZM642 -41Q642 -17 658 0T702 18Q726 18 744 3T762 -41Q762 -67 745 -84T702 -101Q676 -101 659 -85T642 -41Z"></path><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1974.2, 0)"><use xlink:href="#MJX-2-TEX-N-2B"></use></g><g data-mml-node="mi" transform="translate(2974.4, 0)"><use xlink:href="#MJX-2-TEX-I-1D452"></use></g><g data-mml-node="mo" transform="translate(3440.4, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4107.2, 0)"><use xlink:href="#MJX-2-TEX-N-2252"></use></g><g data-mml-node="mi" transform="translate(5163, 0)"><use xlink:href="#MJX-2-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(5926, 0)"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(6315, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, 363) scale(0.707)"><use xlink:href="#MJX-2-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(7318.6, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container></li>
<li><code>由上述兩種情況分析</code>，當圖形的邊很多的情況，使用相鄰串列來求圖形的邊數不見得比<strong>相鄰矩陣</strong>有利。然而，時間複雜度雖然可能會與<strong>相鄰矩陣</strong>相同，但是<strong>相鄰串列</strong>在資料結構上多存放了 <strong>link</strong> ，需要更多的<code>記憶體空間</code>來執行</li>
</ul></li>
</ul>
<h3 id="有向圖-5">有向圖</h3>
<p>若 G = (V, E) 為一有向圖，|V| = n 且 |E| = e，則需使用 <code>n 條相鄰串列</code>與<code>一個 Size 為 n 的一維矩陣 A[1, …, n]</code>，其中A[i] 所存放的是頂點 i 的相鄰串列，此串列中毎個 Node 皆記録著與頂點 i 相鄰之其它頂點</p>
<p><strong>範例:： (以Out-degree為主)</strong> <img src="/posts/c8842ad8/g28.jpg" class=""></p>
<h4 id="特質-3">特質</h4>
<p>在有向圖中，相鄰串列的 Node 總數 = e ∵ 有向圖中，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-2-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-2-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container> 存在，不見得 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-2-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-2-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-2-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(1215.3, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1660, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container> 也會存在</p>
<h4 id="運作-3">運作</h4>
<ul>
<li><strong>判斷邊 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="6.398ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 2827.9 1044.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-2-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-2-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-2-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-2-TEX-I-1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path><path id="MJX-2-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-2-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D456"></use></g></g><g data-mml-node="mo" transform="translate(1168, 0)"><use xlink:href="#MJX-2-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1612.6, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D457"></use></g></g><g data-mml-node="mo" transform="translate(2438.9, 0)"><use xlink:href="#MJX-2-TEX-N-29"></use></g></g></g></svg></mjx-container> 是否存在?</strong>
<ul>
<li><strong>做法</strong>： 檢査頂點為 i 的<strong>相鄰串列</strong>中，是否有 Node j 存在。(Yes: 存在, No: 不存在)</li>
<li><strong>時間複雜度</strong>： <code>O(e)</code> (∵ 與 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-2-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 相連的邊之個數有關)</li>
</ul></li>
<li><strong>求頂點 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="1.762ex" height="1.359ex" role="img" focusable="false" viewBox="0 -443 779 600.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path><path id="MJX-2-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-2-TEX-I-1D463"></use></g><g data-mml-node="mi" transform="translate(485, -150) scale(0.707)"><use xlink:href="#MJX-2-TEX-I-1D456"></use></g></g></g></g></svg></mjx-container> 的分枝度?</strong>
<ul>
<li><strong>Out-degree</strong>：求頂點 i 之<strong>相鄰串列</strong>的長度 (即：節點總數；時間複雜度： <code>O(e)</code>)</li>
<li><strong>In-degree：</strong> 檢査所有串列，統計 Node i 出現的次數 (時間複雜度：<code>O(n+e)</code>)</li>
</ul></li>
<li><strong>求圖形的邊數?</strong>
<ul>
<li><strong>做法：</strong> <span class="math display">\[\begin{align}
e &amp;= \sum_{i=1}^n D_i \\
&amp;= \sum_{i=1}^n \text{頂點 i 之相鄰串列長度} \\ 
&amp;= \text{所有串列之節點總數}
\end{align}\]</span></li>
<li><strong>時間複雜度：</strong> <code>O(n + e)</code></li>
</ul></li>
</ul>
<h3 id="相鄰矩陣與相鄰串列的-比較">相鄰矩陣與相鄰串列的 比較</h3>
<img src="/posts/c8842ad8/g29.jpg" class="">
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course07.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Insertion Sort</title>
    <url>/posts/76d24d28/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="insertion-sort">Insertion Sort</h1>
<p>想像手上有一副撲克牌，若想要將紙牌從左到右按照「小到大」排序。 <strong>Insertion Sort</strong> 的方法為：將第i張紙牌加入(insert)「前i−1張排序過」的紙牌組合，得到i張排序過的紙牌組合。 給一張圖就很好理解: <img src="/posts/76d24d28/Insertion-sort-example-300px.gif" class=""> <a id="more"></a></p>
<img src="/posts/76d24d28/%E4%BA%94%E5%80%8Bsort.jpg" class="">
<img src="/posts/76d24d28/%E6%AF%94%E8%BC%83%E5%9C%96.jpg" class="">
<h1 id="程式碼">程式碼</h1>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">def insertion_sort(collection: list) -&gt; list:
    # 依序從collection[1:]開始往前插入
    for insert_index, insert_value in enumerate(collection[1:]):
        temp_index &#x3D; insert_index
        # 檢查到index&#x3D;0停止 and 一個一個往前比
        while insert_index &gt;&#x3D; 0 and insert_value &lt; collection[insert_index]:
            # 往後移一個index
            collection[insert_index + 1] &#x3D; collection[insert_index]
            # 繼續往前
            insert_index -&#x3D; 1
        # 有改變index
        if insert_index !&#x3D; temp_index:
            # 前面while最後一行insert_index -&#x3D; 1
            collection[insert_index + 1] &#x3D; insert_value
    return collection


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    from doctest import testmod

    testmod()

    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    unsorted &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]
    print(f&quot;&#123;insertion_sort(unsorted) &#x3D; &#125;&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="特性">特性</h1>
<ul>
<li>資料量少時較高效，且比其他<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-7-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-7-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container>的排序法高效（selection sort/bubble sort）。</li>
<li><strong>自適應排序</strong>：可根據當前資料排序情形加速排序，資料越接近排序完成，效率越高。</li>
<li><strong>穩定排序</strong>：相同鍵值的元素，排序後相對位置不改變。</li>
<li><strong>原地排序</strong>：不需額外花費儲存空間來排序。</li>
<li><strong>即時演算法</strong>：可處理逐步輸入的資料，不需等資料完全備妥。</li>
</ul>
<h1 id="變形">變形</h1>
<p>請參考<a href="https://rust-algo.club/sorting/insertion_sort/index.html#%E8%AE%8A%E5%BD%A2">Binary Insertion Sort</a></p>
<h1 id="時間複雜度">時間複雜度</h1>
<h2 id="best-case">best case</h2>
<p>若要處理的array剛好是ascending，那只要比較n-1次，所以<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.495ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2429 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-7-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2040, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container> ## average case <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-7-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-7-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container> 詳情請參考<a href="http://home.cse.ust.hk/faculty/golin/COMP271Sp03/Notes/Ins_Sort_Average_Case.pdf">Mordecai Golin：Average Case Analysis of Insertionsort</a> ## worst case 若要處理的array剛好是descending，那麼第i個元素則需要向前比較i-1次，所以n+(n-1)+...+1 = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-6-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1589, 0)"><use xlink:href="#MJX-6-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(2367, 0)"><use xlink:href="#MJX-6-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2867, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>，因此是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container> ## "Almost sorted" case <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.495ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2429 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-5-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2040, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g></g></g></svg></mjx-container> 幾乎每次進到insert動作時(while迴圈)條件檢查就被擋下來，所以是constant time，最外圈loop(for迴圈)執行N-1次。 所以是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.495ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2429 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-5-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2040, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g></g></g></svg></mjx-container>。</p>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://alrightchiu.github.io/SecondRound/comparison-sort-insertion-sortcha-ru-pai-xu-fa.html">插入排序法</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort">Insertion Sort</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/sorts/insertion_sort.py">shellhub GitHub</a> <a href="https://rust-algo.club/sorting/insertion_sort/index.html#%E8%AE%8A%E5%BD%A2">插入排序 Insertion Sort</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Link Lists</title>
    <url>/posts/d37550bb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="定義">定義</h1>
<p>由一組<code>節點 (Node)</code> 所組成的<code>有序串列</code>，各 Node 除了 <code>Data 欄</code>之外，另外有 <code>≥ 1 個 Link 欄</code> (或稱 Pointer)，用以指向其它 Node 之位址。</p>
<h1 id="特質">特質</h1>
<ul>
<li>各Node不一定要佔用連續的Memory空間</li>
<li>各Node之型態 (Data Type) (Data Type) 不一定要相同</li>
<li>僅支援Sequential Access</li>
<li>Insert/Delete Node Insert/Delete Node 容易 <a id="more"></a></li>
</ul>
<h1 id="link-list的種類">Link list的種類</h1>
<h2 id="single-link-list-單向鏈結串列">Single Link List (單向鏈結串列)</h2>
<p>由一組<code>節點 (Node)</code>所組成的<code>有序串列</code>，各 Node 除了 Data 欄之外，另外有 <code>1 個Link欄</code> (或稱 Pointer)，用以指向下一個 Node 之位址。 <img src="/posts/d37550bb/link1.jpg" class=""></p>
<h3 id="create-list">Create List</h3>
<img src="/posts/d37550bb/link2.jpg" class="">
<h3 id="insert-node">Insert Node</h3>
<ul>
<li>
<pre class="line-numbers language-none"><code class="language-none">begin
  New(t);             &#x2F;&#x2F;跟系統要求記憶體空間以配置一個新節點，且讓指標 t 指向該節點
  t → data &#x3D; item;    &#x2F;&#x2F;把item塞到這個新節點t的Data欄位中
1 t → link &#x3D; x → link;&#x2F;&#x2F;先把新節點t掛到x節點之後!!
2 x → link &#x3D; t;       &#x2F;&#x2F;再將x節點接到節點t
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><img src="/posts/d37550bb/link4.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">begin
  New(t);
  t → data &#x3D; x → data;
  t → link &#x3D; x → link;
  x → link &#x3D; t;
  x → data &#x3D; 20;
  x &#x3D; t;
end;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="delete-node">Delete Node</h3>
<p>刪除鏈節串列的節點時，會先:</p>
<ol type="1">
<li>改變串列指標，以做到<code>邏輯性移除</code>(Logically Remove)的動作</li>
<li>再將要被移除的節點做<code>實際刪除</code>(Physically Delete) 的動作，讓節點從記憶體中刪除</li>
</ol>
<p>需要準備兩個輔助指標 x 與 pPre：</p>
<ul>
<li>x用以指向<code>欲刪除的節點</code></li>
<li>pPre指向<code>節點x所在之前一個node</code></li>
</ul>
<img src="/posts/d37550bb/link5.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">1 if (pPre &#x3D; nil) then     &#x2F;&#x2F;表示 x 為第一個節點
    list &#x3D; x → link;
  else                     &#x2F;&#x2F;表示 x 節點是中間節點
    pPre → link &#x3D; x → link;
2 Ret(x);                  &#x2F;&#x2F;將 “節點 x” 回收. 有的書是用delete(x), release(x), dispose(x)…etc.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="storage-pool">Storage Pool</h3>
<p><code>可用節點 (Free Node)</code> 之集合 (集中管理之處)，通常O.S.以 <code>Single link list</code> 來管理 Free Nodes，稱為 <code>AV-list</code>(Available list) <img src="/posts/d37550bb/link9.jpg" class=""> 提供兩個動作:</p>
<ul>
<li><code>New(t)</code>: 相當於刪除 AV-list 中 Free Node (if AV-list ≠ nil)</li>
<li><code>Ret(t)</code>: 相當於 Insert 節點到 AV-list 中</li>
</ul>
<h4 id="newt">New(t)</h4>
<img src="/posts/d37550bb/link7.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">if (AV ≠ nil) then
1 t &#x3D; AV
2 AV &#x3D; AV → link;
else
  print(“No Free Node.”);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="rett">Ret(t)</h4>
<img src="/posts/d37550bb/link8.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">begin
1 t → link &#x3D; AV;
2 AV &#x3D; t;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="circular-link-list-環状鏈結串列">Circular Link List (環状鏈結串列)</h2>
<p>將 Single link list 中，最後一個 node 的指標指回第一個 node <img src="/posts/d37550bb/link6.jpg" class=""></p>
<ul>
<li>不論從哪個 Node 開始，必定能夠拜訪 (經過) 所有 Node
<ul>
<li>並無明顯的頭尾節點</li>
<li>Single Link List 必須從頭開始才可以</li>
</ul></li>
<li>回收整個串列的時間為 <code>O(1)</code> (即: 與 Link list 長度無關)
<ul>
<li>Single Link List 回收時間為 O(n) 其中, n 為長度或 Node 數目</li>
</ul></li>
</ul>
<h3 id="回收時間的比較單向-vs.-環狀">回收時間的比較(單向 vs. 環狀)</h3>
<h4 id="single-linked-list">Single Linked List</h4>
<img src="/posts/d37550bb/link10.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Release list(list: pointer to S.L.)
  if (list≠nil) then
    S &#x3D; list;
1   while (S → link ≠ nil) do &#x2F;&#x2F;while迴圈會讓S一直前進至最後一節點
      S &#x3D; S → link;
2     S → link &#x3D; AV;
3     AV &#x3D; list;              &#x2F;&#x2F;回收節點至AV list AV list 中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(N)</code></p>
<h4 id="circular-linked-list">Circular Linked List</h4>
<img src="/posts/d37550bb/link11.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Release C(C: pointer to S.L.)
  begin
    if (C≠nil) then
1     p &#x3D; C → link;
2     C → link &#x3D; AV;
3     AV &#x3D; P
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(1)</code></p>
<h2 id="double-link-list-雙向鏈結串列">Double Link List (雙向鏈結串列)</h2>
<p>串列中各節點除了 Data 欄之外，另外有 2 個 Link 欄，用以指向前一個與下一個節點之位址 <img src="/posts/d37550bb/link12.jpg" class=""></p>
<ul>
<li><p>一般使用雙向鏈結串列時，通常會加入串列首 (Head Node)，此 Node 不存資料 <img src="/posts/d37550bb/link13.jpg" class=""></p></li>
<li><p>此時，雙向鏈結串列可視為2個 Circular Link List</p></li>
</ul>
<h3 id="insertion">Insertion</h3>
<p>插入Node t 在Node x之後: <img src="/posts/d37550bb/link14.jpg" class=""> <pre class="line-numbers language-none"><code class="language-none">begin
1 t → RLink &#x3D; x → RLink;
2 t → LLink &#x3D; x;
3 (x → RLink) → LLink &#x3D; t;
4 x → RLink &#x3D; t;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="deletion">Deletion</h3>
<p>刪除一個節點 x: <img src="/posts/d37550bb/link15.jpg" class=""> <pre class="line-numbers language-none"><code class="language-none">begin
1 (x → LLink) → RLink &#x3D; x → RLink;
2 (x → RLink) → LLink &#x3D; x → LLink ;
3 Ret(x);
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="double-linked-list-與-single-linked-list-的比較">Double linked list 與 Single linked list 的比較</h3>
<img src="/posts/d37550bb/link16.jpg" class="">
<h1 id="link-list-三個常見的動作">Link list 三個常見的動作</h1>
<h2 id="length">Length</h2>
<h3 id="single-linked-list-1">Single linked list</h3>
<img src="/posts/d37550bb/link17.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Length list(list: pointer to S.L.)
  count &#x3D; 0;
  p &#x3D; list;
  while (p≠ nil) do
    count++;
    p &#x3D; p → link;
  return count;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(N)</code></p>
<h3 id="circular-linked-list-1">Circular linked list</h3>
<img src="/posts/d37550bb/link18.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Length C(C: pointer to S.L.)
  if (C &#x3D; nil) then
    return 0;
  else
    count &#x3D; 0;
    p &#x3D; C;
    repeat            &#x2F;&#x2F;不能用while迴圈!!∵一定至少要做一次!!!
      count++;
      p &#x3D; p → link;
    until p &#x3D; C;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(N)</code></p>
<h2 id="concatenate">Concatenate</h2>
<h3 id="single-linked-list-2">Single linked list</h3>
<p>假設連結A, B串列成為C串列:</p>
<ul>
<li>Case 1: A = nil and B ≠ nil, 則 C = B</li>
<li>Case 2: A ≠ nil and B = nil, 則 C = A</li>
<li>Case 3: A ≠ nil and B ≠ nil, 則 <code>C = A+B</code></li>
<li>Case 4: A = nil and B = nil, 則 C = nil</li>
</ul>
<img src="/posts/d37550bb/link19.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Con.two.S(A, B, C: pointer to S.L.)
  C &#x3D; nil;
  if (A &#x3D; nil and B ≠ nil) then C &#x3D; B;   &#x2F;&#x2F;Case 1 
  elif (A ≠ nil and B &#x3D; nil) then C &#x3D; A; &#x2F;&#x2F;Case 2 
  elif (A ≠ nil and B ≠ nil) then        &#x2F;&#x2F;Case 3
    p &#x3D; A;
1   while(p → link ≠ nil)  do
        p &#x3D; p → link;
2     p → link &#x3D; B;
3     C &#x3D; A;
  return C;                       &#x2F;&#x2F;回傳Case 1~4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(N) 或 O(M)</code></p>
<h3 id="circular-linked-list-2">Circular linked list</h3>
<p>假設連結A, B串列成為C串列:</p>
<ul>
<li>Case 1: A = nil and B ≠ nil, 則 C = B</li>
<li>Case 2: A ≠ nil and B = nil, 則 C = A</li>
<li>Case 3: A ≠ nil and B ≠ nil, 則 <code>C = A+B</code></li>
<li>Case 4: A = nil and B = nil, 則 C = nil</li>
</ul>
<img src="/posts/d37550bb/link20.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Con.two.S(A, B, C: pointer to C.L.)
  C &#x3D; nil;
  if (A &#x3D; nil and B ≠ nil) then C &#x3D; B;   &#x2F;&#x2F;Case 1 
  elif (A ≠ nil and B &#x3D; nil) then C &#x3D; A; &#x2F;&#x2F;Case 2 
  elif (A ≠ nil and B ≠ nil) then        &#x2F;&#x2F;Case 3
1   C &#x3D; A → link;
2   A → link &#x3D; B → link;
3   B → link &#x3D; C;
  return C;                             &#x2F;&#x2F;回傳 Case 1~ 4 的結果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(1)</code></p>
<h2 id="invert">Invert</h2>
<h3 id="single-linked-list-3">Single linked list</h3>
<p>需要三個指標: r, q, p</p>
<ul>
<li>r 跟著 q 走， q 跟著 p 走， p 往前進</li>
</ul>
<img src="/posts/d37550bb/link21.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Invert S(S: pointer to S.L.)
  p &#x3D; S; q &#x3D; nil;
  while (p ≠ nil) do
    r &#x3D; q;    &#x2F;&#x2F;r 一開始會在此被設為 nil
    q &#x3D; p;
    p &#x3D; p → link;
    q → link &#x3D; r;
  S &#x3D; q;       &#x2F;&#x2F;S可能指向反轉後的第一個節點或是null list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(N)</code></p>
<h3 id="circular-linked-list-3">Circular linked list</h3>
<p>亦需要三個指標: r, q, p</p>
<ul>
<li>r跟著q走，q跟著p走，p往前進</li>
</ul>
<img src="/posts/d37550bb/link22.jpg" class="">
<pre class="line-numbers language-none"><code class="language-none">Procedure Invert C(C: pointer to C.L.)
  if (C ≠ nil) then
    p &#x3D; C → link;    &#x2F;&#x2F;p指向C的下一個node
    q &#x3D; C;          &#x2F;&#x2F;初值
    while (p ≠ c) do
      r &#x3D; q;
      q &#x3D; p;
      p &#x3D; p → link;
      q → link &#x3D; r;
    C → link &#x3D; q;
    C &#x3D; q;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Time Complexity: O(N)</code></p>
<h1 id="array-與-link-list-的比較">Array 與 Link List 的比較</h1>
<img src="/posts/d37550bb/link23.jpg" class="">
<h2 id="利用-single-link-list-表示多項式">利用 Single link list 表示多項式</h2>
<img src="/posts/d37550bb/link24.jpg" class="">
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course04.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Merge sort</title>
    <url>/posts/d7c658d8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="merge-sort">Merge sort</h1>
<p>Merge sort利用divide and conquer遵循以下三個步驟: 1. <strong>Divide</strong> by finding the number q of the position midway between p and r. Do this step the same way we found the midpoint in binary search: add p and r, divide by 2, and round down. 2. <strong>Conquer</strong> by recursively sorting the subarrays in each of the two subproblems created by the divide step. That is, recursively sort the subarray <strong>array[p..q]</strong> and recursively sort the subarray <strong>array[q+1..r]</strong> 3. <strong>Combine</strong> by merging the two sorted subarrays back into the single sorted subarray <strong>array[p..r]</strong></p>
<a id="more"></a>
<img src="/posts/d7c658d8/%E4%BA%94%E5%80%8Bsort.jpg" class="">
<img src="/posts/d7c658d8/%E6%AF%94%E8%BC%83%E5%9C%96.jpg" class="">
<p>base case: 一個subarray包含少於兩個數，即p &gt;= r，所以我們只在p &lt; r時做divide and conquer。</p>
<p>假設現在有一 array: [3, 7, 12, 14, 2, 6, 9, 11]，下圖即是他的divide and conquer圖。</p>
<img src="/posts/d7c658d8/divide_merge.png" class="">
<h1 id="merge">Merge</h1>
<p>Merge sort的關鍵在於<strong>merge</strong>！ &gt; merge時從兩個array的index(0)開始比較，比較小的數先進去merge後的array，然後index(1)比index(0)...直到兩個array裡的元素都比完放入merge後的array。 &gt; merge總花費<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.529ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2444 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-8-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2055, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container> time(可見<a href="https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/linear-time-merging">Linear-time merging</a>最後一段)</p>
<p>如下圖: <img src="/posts/d7c658d8/merge_1.jpg" class=""> 接著 <img src="/posts/d7c658d8/merge_2.jpg" class=""> 接著 <img src="/posts/d7c658d8/merge_3.jpg" class=""></p>
<h1 id="complexity">Complexity</h1>
<p>假設現在array有n個數，依照merge sort的三個步驟來討論: 1. <strong>Divide</strong>。因為此步驟只計算出q的位置，所以只需花費<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.652ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2056 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1167, 0)"><use xlink:href="#MJX-8-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1667, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container>時間。 2. <strong>Conquer</strong>。此步驟要看切割後的subproblem解決所需時間(每個subarray有近似n/2個數)。 3. <strong>Merge</strong>。先前有討論，若要merge總共n個數，須花費<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.529ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2444 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-8-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2055, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container>時間。</p>
<p>現在合起來看步驟1和3總共花費<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.529ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2444 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-7-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2055, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container>時間，具體來說是cn時間(c=constant) 那我們把解決問題的流程化成tree: <img src="/posts/d7c658d8/merge_tree_1.png" class=""> <img src="/posts/d7c658d8/merge_tree_2.png" class=""> <img src="/posts/d7c658d8/merge_tree_3.png" class=""> 最後可以得到base case: size=1的subproblem(花費<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.652ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2056 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1167, 0)"><use xlink:href="#MJX-7-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1667, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container>時間) <img src="/posts/d7c658d8/merge_tree_total.png" class=""> 最後計算tree的高度=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.546ex" xmlns="http://www.w3.org/2000/svg" width="9.436ex" height="2.116ex" role="img" focusable="false" viewBox="0 -694 4170.7 935.4" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-6-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-6-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-6-TEX-N-2061" d=""></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-6-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mn" transform="translate(1278, -241.4) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1681.6, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(1848.2, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2670.4, 0)"><use xlink:href="#MJX-6-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(3670.7, 0)"><use xlink:href="#MJX-6-TEX-N-31"></use></g></g></g></svg></mjx-container> 所以Complexity = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.999ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4419.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-6-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-6-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1767, 0)"><use xlink:href="#MJX-6-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2065, 0)"><use xlink:href="#MJX-6-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(2550, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D454"></use></g><g data-mml-node="mn" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g></g><g data-mml-node="mi" transform="translate(3430.6, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4030.6, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<h1 id="後記">後記</h1>
<p>有件事情值得注意，因為merging時，會複製出一個完整的array(left_half_array, right_half_array)，所以在同一時間所需的space非constant，而selection sort 和 insertion sort 在同一時間所需的space為constant，所以此時可以按照time和space的衡量去使用適合的sort algorithm。</p>
<h1 id="程式碼">程式碼</h1>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">def merge_sort(collection: list) -&gt; list:
    &quot;&quot;&quot;Pure implementation of the merge sort algorithm in Python
    :param collection: some mutable ordered collection with heterogeneous
    comparable items inside
    :return: the same collection ordered by ascending
    Examples:
    &gt;&gt;&gt; merge_sort([0, 5, 3, 2, 2])
    [0, 2, 2, 3, 5]
    &gt;&gt;&gt; merge_sort([])
    []
    &gt;&gt;&gt; merge_sort([-2, -5, -45])
    [-45, -5, -2]
    &quot;&quot;&quot;

    def merge(left: list, right: list) -&gt; list:
        &quot;&quot;&quot;merge left and right
        :param left: left collection
        :param right: right collection
        :return: merge result
        &quot;&quot;&quot;

        def _merge():
            while left and right:
                yield (left if left[0] &lt;&#x3D; right[0] else right).pop(0)
            yield from left
            yield from right

        return list(_merge())

    if len(collection) &lt;&#x3D; 1:
        return collection
    mid &#x3D; len(collection) &#x2F;&#x2F; 2
    return merge(merge_sort(collection[:mid]), merge_sort(collection[mid:]))


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    import doctest

    doctest.testmod()
    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    unsorted &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]
    print(*merge_sort(unsorted), sep&#x3D;&quot;,&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="參考資料">參考資料</h1>
<p><a href="https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/overview-of-merge-sort">Overview of merge sort</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/linear-time-merging">Linear-time merging</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort">Analysis of merge sort</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/sorts/merge_sort.py">merge_sort</a> <a href="http://alrightchiu.github.io/SecondRound/comparison-sort-merge-sorthe-bing-pai-xu-fa.html#series">合併排序法</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Queue</title>
    <url>/posts/be3c5067/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="queue-佇列">Queue (佇列)</h1>
<ul>
<li>具有 FIFO (First-in, First-out) 性質的有序串列</li>
<li>插入與刪除元素的動作發生在佇列的不同端
<ul>
<li>插入動作發生在尾端 (Rear)</li>
<li>刪除動作發生在前端 (Front)</li>
</ul></li>
</ul>
<img src="/posts/be3c5067/queue1.jpg" class="">
<a id="more"></a>
<h1 id="queue-的應用">Queue 的應用</h1>
<ul>
<li>日常生活的排隊行為</li>
<li>在作業系統中的 job scheduling，在相同的 priority 下，利用 queue 來完成先到先做的策略</li>
<li>有許多的 I/O 工作同時要處理。將所有的 I/O 要求，利用 queue 來達成先到先做的策略</li>
<li>用於模擬 (Simulation) 方面，如佇列理論 (Queuing Theory)</li>
</ul>
<h1 id="queue-的-adt">Queue 的 ADT</h1>
<h2 id="data-objects">Data Objects</h2>
<ul>
<li>Queue: a set of data items</li>
<li>Front: 指示Queue之前端元素所在</li>
<li>Rear: 指示Queue之尾端元素所在</li>
</ul>
<h2 id="operations">Operations</h2>
<ul>
<li>Create(Q): 建立空佇列Q</li>
<li>ADDQ(Q, item) → Q: 將 item 插入到 Queue Q 中，成為新的尾端元素(if Queue is full, then 無法執行)</li>
<li>DeleteQ(Q, item) → item, Q: 刪除 Queue 中的前端元素 (if Queue is empty, then empty, then 無法執行)</li>
<li>IsEmpty(Q) → Boolean</li>
<li>IsFull(Q) → Boolean</li>
<li>Front(Q) → item: 傳回 Queue 之 Front 端元素 (但不刪除)</li>
</ul>
<h1 id="queue的製作">Queue的製作</h1>
<ol type="1">
<li>用 Link list 製作
<ul>
<li>Single link list</li>
</ul></li>
<li>用Array製作
<ul>
<li>利用 Linear Array</li>
<li>利用 Circular Array with (n-1) space used</li>
<li>利用 Circular Array with n space used</li>
</ul></li>
</ol>
<h2 id="用-linked-list-製作">用 Linked list 製作</h2>
<h3 id="createq">Create(Q)</h3>
<p><strong>宣告:</strong></p>
<ul>
<li>rear: pointer = nil</li>
<li>front: pointer = nil</li>
</ul>
<h3 id="addqq-item">ADDQ(Q, item)</h3>
<ul>
<li>Case 1: (當Queue為空佇列) <img src="/posts/be3c5067/queue2.jpg" class=""></li>
<li>Case 2: (當Queue不為空佇列) <img src="/posts/be3c5067/queue3.jpg" class=""></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;F &#x3D; front, R &#x3D; rear
begin
  New(newPtr);
  newPtr → data &#x3D; item;
  newPtr → link &#x3D; nil; 
  if (rear &#x3D; nil):         &#x2F;&#x2F;Case 1
    front &#x3D; newPtr;
  else:                    &#x2F;&#x2F;Case 2
    rear → link &#x3D; newPtr;
  rear &#x3D; newPtr;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="deleteq">Delete(Q)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (front &#x3D; nil):
    Queue Empty;
  else:
1   deleteLoc &#x3D; front;
2   item &#x3D; front → data;
3   front &#x3D; front → link;
4   Ret(deleteLoc);
    if (front &#x3D; nil):   &#x2F;&#x2F;見下面註釋
      rear &#x3D; nil;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/posts/be3c5067/queue4.jpg" class="">
<div class="note info no-icon"><ul>
<li>假設 Queue 中只有一個 node，回收後把 Rear 指向 nil</li>
<li>主要是擔心系統不會自動將 Rear 設成 nil，使得 Rear 指標無效 <img src="/posts/be3c5067/queue5.jpg" class=""></li>
</ul>
</div>
<h2 id="用-array-製作">用 Array 製作</h2>
<h3 id="利用-linear-array">利用 Linear Array</h3>
<h4 id="createq-1">Create(Q)</h4>
<p><strong>宣告:</strong></p>
<ul>
<li>Q: array[0…n-1] of items //宣告 Q 是一個大小為n的一維 Array</li>
<li>Front: integer = -1 //初値</li>
<li>Rear: integer = -1 //初値</li>
</ul>
<h4 id="addqq-item-queue">AddQ(Q, item) → Queue</h4>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (rear &#x3D; n):
    QueueFull;
  else:
    rear &#x3D; rear +1
    Q[rear] &#x3D; item
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/posts/be3c5067/queue6.jpg" class="">
<h4 id="deleteqq-item-queue">DeleteQ(Q) → item, Queue</h4>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (rear &#x3D; front):
    QueueEmpty;
  else:
    front &#x3D; front +1
    item &#x3D; Q[front]
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div class="note danger"><p>問題: <code>當 rear = n 時，Queue 並不代表真正為滿的情況</code> <img src="/posts/be3c5067/queue7.jpg" class=""></p>
<ul>
<li>為解決上述問題，我們或許可以設計一個副程式，當資料已成長到 Arrar 的最末端時，作一次 “<code>是否真的為滿</code>” 的判斷 (即：<strong><mark class="label info">Rear = n</mark></strong> 且 <strong><mark class="label info">Front = 0</mark></strong>)。若不為真滿，則需將 <strong><mark class="label danger">(Front+1)</strong> 到 Rear 端的所有元素往左移 Front 格，並重設 Rear 與 Front 的指標値</mark></li>
<li>然而，此種作法會導致 Queue 之 Add 動作時間為 <code>O(n)</code>
<ul>
<li>∵是用<code>廻圈</code>來實作資料的搬移，花費時間太大。同時，此搬移工作是額外的處理項目，與 Add 動作本身是無關的</li>
<li>∴當 Add 的工作很頻繁時，整體執行效益差</li>
</ul></li>
</ul>
</div>
<h3 id="利用-circular-array-with-n-1-space-used">利用 Circular Array with (n-1) space used</h3>
<img src="/posts/be3c5067/queue8.jpg" class="">
<h4 id="createq-2">Create(Q)</h4>
<p><strong>宣告:</strong></p>
<ul>
<li>Q: Array[0…n-1]</li>
<li>front = rear = 0 //初値</li>
</ul>
<h4 id="addqq-item-queue-1">AddQ(Q, item) → Queue</h4>
<pre class="line-numbers language-none"><code class="language-none">begin
  rear &#x3D; (rear+1) mod n ; &#x2F;&#x2F;rear指標先前進
  if (rear &#x3D; front):
    QueueFull;            &#x2F;&#x2F;表示Queue滿了
    rear &#x3D; rear-1 mod n;  &#x2F;&#x2F;將rear重設回前一格
  else
    Q[rear]&#x3D;item;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="deleteqq-item-queue-1">DeleteQ(Q) → item, Queue</h4>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (front&#x3D;rear): &#x2F;&#x2F;先檢查
    QueueEmpty;
  else:
    front &#x3D; (front+1) mod n;
    item &#x3D; Q[front];
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="特點">特點</h4>
<ul>
<li>最多只利用到 <code>n-1 格空間</code></li>
<li>若硬要使用到 n 格空間，則 rear = front 條件成立時，<strong><mark class="label success">無法真正區分出 Queue 為 Full 或 Empty</mark></strong>
<ul>
<li>∵ 判斷 Full 與 Empty 的條件式相同 (皆為 <strong><mark class="label info">rear = Full</mark></strong>)</li>
</ul></li>
<li>Add 與 Delete 之動作時間皆為<code>O(1)</code>
<ul>
<li>∵ <mark class="label info">沒有資料挪移</mark>的動作</li>
</ul></li>
</ul>
<h3 id="利用-circular-array-with-n-space-used">利用 Circular Array with n space used</h3>
<p>引進一個<mark class="label info">Tag 變數</mark>，用以<mark class="label danger">協助判斷</mark>Queue 為 Empty 或 Full:</p>
<ul>
<li>該變數為 Boolean 型態</li>
<li>若 Tag = True: 則可協助判斷是否為 Full</li>
<li>若 Tag = False: 則可協助判斷是否為 Null</li>
<li><strong><mark class="label danger">不是光靠 Tag 就能做正確判斷</mark></strong></li>
</ul>
<h4 id="createq-3">Create(Q)</h4>
<p><strong>宣告：</strong></p>
<ul>
<li>Q: Array[0…n-1]</li>
<li>front = rear: int = 0 //初値</li>
<li><code>Tag</code>: Boolean = 0 //初値</li>
</ul>
<h4 id="addqq-item-queue-2">AddQ(Q, item) → Queue</h4>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (rear &#x3D; front and Tag &#x3D; 1):
    QueueFull;
  else:
    rear &#x3D; (rear+1) mod n; &#x2F;&#x2F;rear指標前進
    Q[rear]&#x3D;item;
    if (rear&#x3D;front):
      Tag&#x3D;1;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="deleteqq-item-queue-2">DeleteQ(Q) → item, Queue</h4>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (Front&#x3D;Rear and Tag&#x3D;0):
    QueueEmpty;
  else:
    Front &#x3D; (Front+1) mod n;
    item &#x3D; Q[Front];
    if (Front&#x3D;Rear):
      Tag&#x3D;0;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="特點-1">特點</h4>
<ul>
<li>最多可利用到 <code>n 格空間</code></li>
<li>Add 與 Delete 之運作時間稍長
<ul>
<li>∵多了一條 <mark class="label success">if 測試</mark>，來測試 Tag 値設定，且此兩個運作使用上極頻繁</li>
<li>∴<strong><mark class="label info">整體時間效益稍嫌 Poor</mark></strong></li>
</ul></li>
</ul>
<h1 id="queue的種類">Queue的種類</h1>
<h2 id="fifo-queue-先進先出佇列">FIFO Queue (先進先出佇列)</h2>
<p>即一般的佇列，具有 FIFO 特性，前端刪除元素，尾端加入元素</p>
<h2 id="priority-queue-優先權佇列">Priority Queue (優先權佇列)</h2>
<ul>
<li>不一定遵守FIFO特性</li>
<li>運作：
<ul>
<li>插入任意優先權値之元素</li>
<li>刪除時，是刪除具最大/最小優先權値之元素</li>
</ul></li>
<li>可利用 Heap (堆積) 來製作</li>
</ul>
<h2 id="double-ended-queue-雙邊佇列">Double Ended Queue (雙邊佇列)</h2>
<ul>
<li>可於任何一端執行插入/刪除元素的動作</li>
<li>亦可實作成：
<ul>
<li>Input-restricted：插入動作在固定端，刪除動作在任意端</li>
<li>Output-restricted：插入動作在任意端，刪除動作在固定端</li>
</ul></li>
</ul>
<h2 id="double-ended-priority-queue-雙邊優先佇列">Double Ended Priority Queue (雙邊優先佇列)</h2>
<ul>
<li>可於任何一端執行插入元素的動作。但刪除時，有一端是做 Delete Max 元素的動作，另一端則作 Delete Min 元素的動作</li>
<li>可利用 Min-Max Heap (堆積) 來製作</li>
</ul>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course05.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Recursion</title>
    <url>/posts/36e66ece/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="recursion">Recursion</h1>
<p>遞迴的基本概念就是: &gt; To solve a problem, solve a subproblem that is a smaller instance of the same problem, and then use the solution to that smaller instance to solve the original problem. <a id="more"></a></p>
<p>最後可以整理出兩個重點: 1. Each recursive call should be on <strong>a smaller instance of the same problem</strong>, that is, a smaller subproblem. 2. The recursive calls must eventually reach a <strong>base case</strong>, which is solved without further recursion.</p>
<p>簡單來說： 1. 決定基本情況 (<strong>Base Case</strong>) - 此base case即為遞迴的<strong>終止條件</strong> 2. 決定一般情況 (<strong>General case</strong>) - 産生遞迴呼叫的指令碼，即<strong>遞迴關係式</strong> 3. 將上述兩種情況寫入演算法 <pre class="line-numbers language-none"><code class="language-none">Procedure 遞迴程式名(參數)
&#123;
if (Base case)
  return(結果); ……&#x2F;&#x2F;達到終止條件時結束遞迴，需要時回傳結果
else
  General case; ……&#x2F;&#x2F;利用general case執行遞迴呼叫，需要時加上return
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h1 id="議題">議題</h1>
<ol type="1">
<li>階乘(Factorial;n!)</li>
<li>費氏數(Fibonacci Number)</li>
<li>兩數之最大公因數 (Greatest common divisor; G. C. D.)</li>
<li>二項式係數 (Binomial Coefficient;或稱組合問題 “Combination of n objects”)</li>
<li>Ackerman’s Function</li>
<li>迴文(palindrome)</li>
<li>河內塔問題(Tower of Hanoi)</li>
<li>排列問題(Permutation)</li>
</ol>
<p>遞迴常見的課題： - 寫一個Algorithm (or Program) - 追蹤一個Recursion Algorithm (找結果、呼叫次數)</p>
<h2 id="階乘factorialn">階乘(Factorial;n!)</h2>
<h3 id="定義">定義</h3>
<p><strong>階乘(n!) = 1 × 2 × 3 × … ×(n-1) × n</strong></p>
<h3 id="解法">解法</h3>
<ul>
<li><strong>數學表示式:</strong> <img src="/posts/36e66ece/%E9%9A%8E%E4%B9%981.jpg" class=""></li>
<li><strong>pseudocode:</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 所要求算的階乘數値n
Output: n! 結果回傳
Procedure Factorial(int n)
  begin
  if (n &#x3D; 0)
    return 1;
  else
    return (n× Factorial(n-1));
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><strong>Factorial(3) = ? 呼叫了幾次函數？</strong> <img src="/posts/36e66ece/%E9%9A%8E%E4%B9%983.jpg" class=""> 呼叫了4次 (含Factorial(3))，計算結果為6 ※ Factorial(n)會被呼叫幾次? 呼叫n+1次</li>
<li><strong>Iterative Factorial Algorithm 的 pseudocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 所要求算的階乘數値n
Output: n! 結果回傳
Procedure Factorial(int n)
  begin
  i &#x3D; 1;
  factN &#x3D; 1;
  loop (i ≤ n)
    factN &#x3D; factN * i;
    i &#x3D; i +1;
  end loop
  return factN;
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><strong>python code</strong> <pre class="line-numbers language-python" data-language="python"><code class="language-python">def factorial(num: int) -&gt; int:
    if num &lt; 0:
        raise ValueError(&quot;Number should not be negative.&quot;)

    return 1 if num in (0, 1) else num * factorial(num - 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="費氏數fibonacci-number">費氏數(Fibonacci Number)</h2>
<h3 id="定義-1">定義</h3>
<table>
<thead>
<tr class="header">
<th>n</th>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="2.528ex" height="1.895ex" role="img" focusable="false" viewBox="0 -680 1117.3 837.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-I-1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path><path id="MJX-9-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D439"></use></g><g data-mml-node="mi" transform="translate(643, -150) scale(0.707)"><use xlink:href="#MJX-9-TEX-I-1D45B"></use></g></g></g></g></svg></mjx-container></td>
<td>0</td>
<td>1</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>5</td>
<td>8</td>
<td>13</td>
<td>21</td>
<td>34</td>
<td>55</td>
</tr>
</tbody>
</table>
<p><strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="12.712ex" height="1.895ex" role="img" focusable="false" viewBox="0 -680 5618.6 837.8" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-I-1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path><path id="MJX-9-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-9-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-9-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path><path id="MJX-9-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-9-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D439"></use></g><g data-mml-node="mi" transform="translate(643, -150) scale(0.707)"><use xlink:href="#MJX-9-TEX-I-1D44E"></use></g></g><g data-mml-node="mo" transform="translate(1289.3, 0)"><use xlink:href="#MJX-9-TEX-N-2B"></use></g><g data-mml-node="msub" transform="translate(2289.5, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D439"></use></g><g data-mml-node="mi" transform="translate(643, -150) scale(0.707)"><use xlink:href="#MJX-9-TEX-I-1D44F"></use></g></g><g data-mml-node="mo" transform="translate(3563.6, 0)"><use xlink:href="#MJX-9-TEX-N-3D"></use></g><g data-mml-node="msub" transform="translate(4619.4, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D439"></use></g><g data-mml-node="mi" transform="translate(643, -150) scale(0.707)"><use xlink:href="#MJX-9-TEX-I-1D450"></use></g></g></g></g></svg></mjx-container></strong></p>
<h3 id="解法-1">解法</h3>
<ul>
<li><strong>數學表示式:</strong> <img src="/posts/36e66ece/%E8%B2%BB%E6%B0%8F%E6%95%B81.jpg" class=""></li>
<li><strong>pseodocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 費氏數値num
Output: 回傳Fibonacci number結果
Procedure Fib(int num)
  begin
  if (num is 0 OR num is 1) &#x2F;&#x2F;Base Case
    return num;
  else
    return (Fib(num-1) + Fib(num-2));
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><strong>Iterative Fibonacci Number Algorithm pseodocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 費氏數値num
Output: 回傳Fibonacci number結果
Procedure Fib(int n)
begin
  if (num is 0 OR num is 1)
    return num;
  else begin
    Fa &#x3D; 0,Fb &#x3D; 1;
    for(i &#x3D; 2 to n) &#x3D; 2 to n)
      Fc &#x3D; Fa + Fb;
      Fa &#x3D; Fb;
      Fb &#x3D; Fc;
    end for;
    return Fc;
  end if;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><strong>python code</strong></li>
</ul>
<ol type="1">
<li><pre class="line-numbers language-python" data-language="python"><code class="language-python">&quot;&quot;&quot;
This program calculates the nth Fibonacci number in O(log(n)).
It&#39;s possible to calculate F(1_000_000) in less than a second.
&quot;&quot;&quot;
import sys

def fibonacci(n: int) -&gt; int:
    if n &lt; 0:
        raise ValueError(&quot;Negative arguments are not supported&quot;)
    return _fib(n)[0]

# returns (F(n), F(n-1))
def _fib(n: int) -&gt; tuple[int, int]:
    if n &#x3D;&#x3D; 0:  # (F(0), F(1))
        return (0, 1)

    # F(2n) &#x3D; F(n)[2F(n+1) − F(n)]
    # F(2n+1) &#x3D; F(n+1)^2+F(n)^2
    a, b &#x3D; _fib(n &#x2F;&#x2F; 2)
    c &#x3D; a * (b * 2 - a)
    d &#x3D; a * a + b * b
    return (d, c + d) if n % 2 else (c, d)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><pre class="line-numbers language-python" data-language="python"><code class="language-python">class Fibonacci:
    def __init__(self, N&#x3D;None):
        self.fib_array &#x3D; []
        if N:
            N &#x3D; int(N)
            self.fib_array.append(0)
            self.fib_array.append(1)
            for i in range(2, N + 1):
                self.fib_array.append(self.fib_array[i - 1] + self.fib_array[i - 2])
        elif N &#x3D;&#x3D; 0:
            self.fib_array.append(0)
        print(self.fib_array)

    def get(self, sequence_no&#x3D;None):
        &quot;&quot;&quot;
        &gt;&gt;&gt; Fibonacci(5).get(3)
        [0, 1, 1, 2, 3, 5]
        [0, 1, 1, 2]
        &gt;&gt;&gt; Fibonacci(5).get(6)
        [0, 1, 1, 2, 3, 5]
        Out of bound.
        &gt;&gt;&gt; Fibonacci(5).get(-1)
        [0, 1, 1, 2, 3, 5]
        []
        &quot;&quot;&quot;
        if sequence_no is not None:
            if sequence_no &lt; len(self.fib_array):
                return print(self.fib_array[: sequence_no + 1])
            else:
                print(&quot;Out of bound.&quot;)
        else:
            print(&quot;Please specify a value&quot;)


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    print(&quot;\n********* Fibonacci Series Using Dynamic Programming ************\n&quot;)
    print(&quot;\n Enter the upper limit for the fibonacci sequence: &quot;, end&#x3D;&quot;&quot;)
    try:
        N &#x3D; int(input().strip())
        fib &#x3D; Fibonacci(N)
        print(
            &quot;\n********* Enter different values to get the corresponding fibonacci &quot;
            &quot;sequence, enter any negative number to exit. ************\n&quot;
        )
        while True:
            try:
                i &#x3D; int(input(&quot;Enter value: &quot;).strip())
                if i &lt; 0:
                    print(&quot;\n********* Good Bye!! ************\n&quot;)
                    break
                fib.get(i)
            except NameError:
                print(&quot;\nInvalid input, please try again.&quot;)
    except NameError:
        print(&quot;\n********* Invalid input, good bye!! ************\n&quot;)

    import doctest

    doctest.testmod()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h2 id="兩數之最大公因數-greatest-common-divisor-g.-c.-d.">兩數之最大公因數 (Greatest common divisor; G. C. D.)</h2>
<h3 id="定義-2">定義</h3>
<p>省略。</p>
<h3 id="解法-2">解法</h3>
<ul>
<li>利用<strong>輾轉相除法</strong>，如下圖所示： <img src="/posts/36e66ece/gcd.jpg" class=""></li>
<li><strong>pseudocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 輸入二個整數A與B
Output: 傳回A與B的最大公因數
Procedure gcd(int A, int B)
  begin
  if (A mod B &#x3D; 0)       &#x2F;&#x2F;Base Case
    return B;
  else
    return gcd(B, A mod B);
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>PS. 不用考慮 A &lt; B 的問題。因為假如 A &lt; B ：gcd(A, B) = gcd(B, A)，等於前面多 call 一次遞迴</li>
</ul>
<h2 id="二項式係數-binomial-coefficient或稱組合問題-combination-of-n-objects">二項式係數 (Binomial Coefficient;或稱組合問題 “Combination of n objects”)</h2>
<h3 id="定義-3">定義</h3>
<p>組合問題的公式如下： <img src="/posts/36e66ece/%E7%B5%84%E5%90%88.jpg" class=""></p>
<h3 id="解法-3">解法</h3>
<p>本題解法思路不需要去管，因為最後遞迴關係式式數學家推導出來的： - 數學表示式：  - <strong>pseudocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 輸入二項式的n與m
Output: 傳回二項式計算結果
Procedure Bin(int n, int m)
  begin
  if (n&#x3D;m or m&#x3D;0)      &#x2F;&#x2F;Base Case
    return 1;
  else
    return (Bin(n-1, m) + Bin(n-1, m-1));
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="ackermans-function">Ackerman’s Function</h2>
<h3 id="定義-4">定義</h3>
<p>省略。</p>
<h3 id="解法-4">解法</h3>
<ul>
<li>數學表示式 </li>
<li><strong>pseudocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: 輸入Ackerman(M, N)
Output: 傳回Ackerman(M, N)計算結果
Procedure Ackerman(M, N)
  begin
  if (M&#x3D;0)         &#x2F;&#x2F;Base Case
    return N+1;
  elif (N&#x3D;0)
    return Ackerman(M-1, 1)
  else
    return Ackerman(M-1, Ackerman(M, N-1))  
  end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>追蹤遞迴 </li>
</ul>
<h2 id="河內塔問題tower-of-hanoi">河內塔問題(Tower of Hanoi)</h2>
<h3 id="定義-5">定義</h3>
<p>河內塔也是個經典的Recursion問題。因為此屬簡單問題所以簡單介紹。 河內塔目標是把n個盤子從A柱移動到B柱(如下圖n=5)，且遵循以下兩個規則: 1. 一次只能移動一個盤子 2. 較小的盤子必須在較大的盤子上面</p>
<img src="/posts/36e66ece/%E7%9B%92%E5%85%A7%E5%A1%941.png" class="">
<img src="/posts/36e66ece/%E7%9B%92%E5%85%A7%E5%A1%942.png" class="">
<blockquote>
<p>傳說在亞洲某個地方盛傳一個傳說，如果把當地64個盤子成功移動到另一個柱子，世界末日即將到來！</p>
</blockquote>
<h3 id="解法-5">解法</h3>
<p>因為很簡單所以直接說解法了。 觀察: 1. n=1，只需要一次(直接把盤子放到B柱) 2. n=2，需要三次(如下圖) <img src="/posts/36e66ece/n2_1.png" class=""> <img src="/posts/36e66ece/n2_2.png" class=""> <img src="/posts/36e66ece/n2_3.png" class=""> <img src="/posts/36e66ece/n2_4.png" class=""> 3. n=3，需要3+1+3次(把2個盤子從A柱放到C柱，移動最大盤從A到B柱，把2個盤子從C放到B柱) <img src="/posts/36e66ece/n2_5.jpg" class=""> - <strong>數學表示式:</strong> 1. <strong>Base Case</strong>: if n = 1, 移動一次 2. <strong>General Case</strong>: when n &gt;=2, 解問題按照下列三步驟: 1. 遞迴解決子問題n-1移動次數 2. 移動最大盤 3. 遞迴解決子問題n-1移動次數 - <strong>Recursive Tower of Hanoi Algorithm pseudocode</strong> <pre class="line-numbers language-none"><code class="language-none">Input: n個盤子，三根柱子(A, B, C)
Output: 移動過程
Procedure Towers(int n, char A, char C, char B)
begin
  if (n &gt; 0)
    Towers(n Towers(n-1, A, B, C); 1, A, B, C);
    print(“Move disk”, n, “from”, A, “to”, C);
    Towers(n Towers(n-1, B, C, A);
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> - <strong>python code</strong> <pre class="line-numbers language-python" data-language="python"><code class="language-python">def moveTower(height,fromPole, toPole, withPole):
    if height &gt;&#x3D; 1:
        moveTower(height-1,fromPole,withPole,toPole)
        print(&quot;moving disk from&quot;,fp,&quot;to&quot;,tp)
        moveTower(height-1,withPole,toPole,fromPole)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> <code>moveTower(3,"A","B","C")</code></p>
<h3 id="時間複雜度">時間複雜度</h3>
<p>T(n) = T(n-1) + 1 + T(n-1) = 2T(n-1) + 1 = 2[2T(n-2) + 1] + 1 = 4T(n-2) + 3 = ... = <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="21.404ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 9460.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-9-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-9-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-9-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-9-TEX-I-1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path><path id="MJX-9-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-9-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-9-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-9-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-9-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1378, 0)"><use xlink:href="#MJX-9-TEX-N-31"></use></g></g></g><g data-mml-node="mi" transform="translate(1877.9, 0)"><use xlink:href="#MJX-9-TEX-I-1D447"></use></g><g data-mml-node="mo" transform="translate(2581.9, 0)"><use xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2970.9, 0)"><use xlink:href="#MJX-9-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(3470.9, 0)"><use xlink:href="#MJX-9-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4082.2, 0)"><use xlink:href="#MJX-9-TEX-N-2B"></use></g><g data-mml-node="mo" transform="translate(5082.4, 0)"><use xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(5471.4, 0)"><g data-mml-node="mn"><use xlink:href="#MJX-9-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-9-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1378, 0)"><use xlink:href="#MJX-9-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(7571.6, 0)"><use xlink:href="#MJX-9-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(8571.8, 0)"><use xlink:href="#MJX-9-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(9071.8, 0)"><use xlink:href="#MJX-9-TEX-N-29"></use></g></g></g></svg></mjx-container></strong> = <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.101ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2696.7 757.5" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-8-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-8-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-8-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-8-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-8-TEX-I-1D45B"></use></g></g><g data-mml-node="mo" transform="translate(1196.5, 0)"><use xlink:href="#MJX-8-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2196.7, 0)"><use xlink:href="#MJX-8-TEX-N-31"></use></g></g></g></svg></mjx-container></strong></p>
<p><strong>由上可知一個遞迴演算法會包含兩個部份：</strong> 1. <strong>遞迴呼叫的執行次數 : 2T(n-1)</strong> 2. <strong>非遞迴工作的執行次數 : 1</strong></p>
<blockquote>
<p>回到剛剛說世界末日的故事，移動64個盤子需要<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.741ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 2979.6 923.7" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-8-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path id="MJX-8-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-8-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-8-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-8-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use xlink:href="#MJX-8-TEX-N-36"></use><use xlink:href="#MJX-8-TEX-N-34" transform="translate(500, 0)"></use></g></g></g><g data-mml-node="mo" transform="translate(1479.3, 0)"><use xlink:href="#MJX-8-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2479.6, 0)"><use xlink:href="#MJX-8-TEX-N-31"></use></g></g></g></svg></mjx-container>次，假設每秒可以移動一個盤子，則大概需要5845億年來移動，還沒到那時太陽的壽命已經消耗殆盡了！</p>
</blockquote>
<h2 id="permutation-排列問題">Permutation (排列問題)</h2>
<h3 id="定義-6">定義</h3>
<p>給予a，b，c三個字元，請印出所有的Permutation。 - 共有3! = 6 種排列</p>
<h3 id="解法-6">解法</h3>
<ul>
<li>數學表示式 </li>
<li><strong>pseudocode</strong> <pre class="line-numbers language-C" data-language="C"><code class="language-C">void perm(list[ ], int i, int n)   &#x2F;&#x2F; 此函式可產生從 list[i] 至 list[n] 的元素排列
&#123;
  if (i&#x3D;&#x3D;n)                        &#x2F;&#x2F; 當 list[ ] 中的所有元素排列完畢，即：終止條件
  &#123;
    for (j&#x3D;1; j&lt;&#x3D;n; j++)
      print(list[j]);              &#x2F;&#x2F; print list內排列好的結果
  &#125;
else                               &#x2F;&#x2F; 當 list[ ] 中的元素尚未排列完畢，即：遞迴關係式
  &#123;
    for(j&#x3D;i; j&lt;&#x3D;n; j++)
      &#123;
        swap(list[i], list[j]);    &#x2F;&#x2F; 讓某個字元當頭(第j個字元當頭)
        perm(list[ ], i+1, n);     &#x2F;&#x2F; 從第i字元後的其他字元，自己去做排列
        swap(list[i], list[j]);    &#x2F;&#x2F; 將list陣列還原
      &#125;
  &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h1 id="recursion-與-non-recursion-的比較">Recursion 與 Non-recursion 的比較</h1>
<table>
<thead>
<tr class="header">
<th></th>
<th>Recursion</th>
<th>Non-recursion</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>優</td>
<td>程式碼較精簡</td>
<td>冗長</td>
<td>缺</td>
</tr>
<tr class="even">
<td>優</td>
<td>需要宣告的區域變數較少</td>
<td>較多</td>
<td>缺</td>
</tr>
<tr class="odd">
<td>優</td>
<td>程式碼較節省空間</td>
<td>浪費</td>
<td>缺</td>
</tr>
<tr class="even">
<td>優</td>
<td>表達力強，易於理解</td>
<td>表達力差，不易理解</td>
<td>缺</td>
</tr>
</tbody>
</table>
<h1 id="memoization優化">Memoization優化</h1>
<p>考慮Fibonacci數列: 1. If n is 0 or 1, return n 2. Otherwise, return fibonacci(n-1) + fibonacci(n-2)</p>
<p>當n=5時, the computer makes 15 calls: <div class="video-container"><iframe src="https://www.youtube.com/embed/214lD7tWkz8" frameborder="0" loading="lazy" allowfullscreen></iframe></div> 隨著n越來越大，fibonacci(30)在遞迴時 call 了 fibonacci(2)超過50萬次。 &gt; 所以我們可以實做一個<strong>lookup table</strong>紀錄算過的fibonacci(input)，當然這個table要有效率像是hash table擁有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-7-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container>查找時間。當然會犧牲一些space存放result(類似快取)。</p>
<ul>
<li>if n == 0 or 1, return n</li>
<li>if n in the table, return the table's value for n</li>
<li>Otherwise
<ul>
<li>計算fibonacci(n-1) + fibonacci(n-2)</li>
<li>儲存result在table</li>
<li>return result</li>
</ul></li>
</ul>
<img src="/posts/36e66ece/1609352899044.jpg" class="">
<p>如上表所示，隨著n越來越大function call以指數增加，但是佔用的space卻是線性增加。</p>
<h1 id="bottom-up">Bottom-up</h1>
<p>有時候改善recursive algorithm最有效的方法就是不使用recursion。 在這個Fibonacci numbers例子中，一個 iterative 技巧叫做 <strong>bottom-up approach</strong>可以同時節省time和space。當使用bottom-up approach時，會先解決子問題然後使用部份解去得出最終解。 time complexity: <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.495ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2429 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-7-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(2040, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container></strong> space complexity: <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g></g></g></svg></mjx-container></strong> since it only remembers three numbers at a time. 以下是pseudocode: - if n == 0 or 1, return n - Otherwise - Create variable <strong>twoBehind</strong> to remember the result of <strong>(n-2)</strong> and initialize to <strong>0</strong> - Create variable <strong>oneBehind</strong> to remember the result of <strong>(n-1)</strong> and initialize to <strong>1</strong> - Create variable <strong>result</strong> to store the <strong>final result</strong> and initialize to <strong>0</strong> - Repeat (n-1) times: - Update <strong>result</strong> to the sum of <strong>twoBehind</strong> plus <strong>oneBehind</strong> - Update <strong>twoBehind</strong> to store the current value of <strong>oneBehind</strong> - Update <strong>oneBehind</strong> to store the current value of <strong>result</strong> - return <strong>result</strong></p>
<h1 id="初探-dynamic-programming">初探 Dynamic programming</h1>
<p>上述的 Memoization 和 bottom-up 都是使用了 <strong>dynamic programming</strong> 策略。 當一個問題具有* *optimal substructure<strong> 和 </strong>overlapping subproblems<strong> 特性時，Dynamic programming 則可以被使用。 - </strong>Optimal substructure<strong>: the optimal solution to the problem can be created from optimal solutions of its subproblems. - fib(5) can be solved with fib(4) and fib(3) - </strong>Overlapping subproblems**: whenever a subproblem is solved multiple times. - fib(5) made multiple calls to the typically recursive fib(3) and fib(2)</p>
<h1 id="總結">總結</h1>
<p>當以下的問題有任何一個為 當以下的問題有任何一個為 <strong>no</strong>，則不該使用遞迴來設計演算法 用遞迴來設計演算法: 1. 問題的演算法或資料結構本身是否就具備 問題的演算法或資料結構本身是否就具備<strong>遞迴的特性</strong>? 2. 使用遞迴求解問題是否能 使用遞迴求解問題是否能<strong>更簡化</strong>或是<strong>更易了解</strong>? 3. 使用遞迴求解問題是否能在 使用遞迴求解問題是否能在<strong>可接受的時間</strong>或<strong>記憶體空間限制</strong>下完成?</p>
<h1 id="參考資料">參考資料</h1>
<p><a href="https://www.khanacademy.org/computing/computer-science/algorithms/recursive-algorithms/a/recursion">Recursion</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/recursive-algorithms/a/improving-efficiency-of-recursive-functions">Improving efficiency of recursive functions</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/factorial.py">factorial</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/fibonacci.py">fibonacci</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/fast_fibonacci.py">fast_fibonacci</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/towers-of-hanoi/a/towers-of-hanoi">Towers of Hanoi</a> <a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course02.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Selection Sort</title>
    <url>/posts/937e8c27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="selection-sort">Selection Sort</h1>
<p>Selection Sort的概念很簡單，假設有一個array需要排序，按照以下步驟排序。</p>
<ol type="1">
<li>找到最小的數，和第一個數swap</li>
<li>找到第二小的數，和第二個數swap</li>
<li>繼續往下找直到最後一個數</li>
</ol>
<p>找第二小的數可以視為找到array中最小數後，找subarray中的最小數。 <a id="more"></a> <img src="/posts/937e8c27/Selection-Sort-Animation.gif" class=""></p>
<img src="/posts/937e8c27/%E4%BA%94%E5%80%8Bsort.jpg" class="">
<img src="/posts/937e8c27/%E6%AF%94%E8%BC%83%E5%9C%96.jpg" class="">
<h1 id="完整程式碼">完整程式碼</h1>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">def selection_sort(collection):
    length &#x3D; len(collection)
    for i in range(length - 1):
        least &#x3D; i
        for k in range(i + 1, length):
            if collection[k] &lt; collection[least]:
                least &#x3D; k
        if least !&#x3D; i:
            collection[least], collection[i] &#x3D; (collection[i], collection[least])
    return collection


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    unsorted &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]
    print(selection_sort(unsorted))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="特性">特性</h1>
<ul>
<li>對小資料序列排序效率較高。</li>
<li><strong>不穩定排序</strong>：排序後，相同鍵值的元素相對位置可能改變。</li>
<li><strong>原地排序</strong>：不需額外花費儲存空間來排序。</li>
</ul>
<h3 id="不穩定排序">不穩定排序</h3>
<p>假定有一個序列要遞增排序，其中有重複的 2 元素，我們將其標上 2a、2b 以利辨識。 <pre class="line-numbers language-none"><code class="language-none">[2a, 3, 4, 2b, 1]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 開始迭代找出最小值並置換。 <pre class="line-numbers language-none"><code class="language-none"> *             *
[1, 3, 4, 2b, 2a] # 1. 置換 2a, 1

     *     *
[1, 2b, 4, 3, 2a] # 2. 置換 3, 2b

        *       *
[1, 2b, 2a, 3, 4] # 3. 置換 4, 2a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 有沒有發現， 2a 與 2b 的相對順序顛倒了呢？</p>
<p>問題出在 selection sort 是以置換的方式排序每次迭代的最小值。若我們將置換（swap）改為插入（insert），那麼 selection sort 就會是穩定排序，但相對地，需要位移剩餘未排序的元素，除非使用 linked list 或其他提供 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-10-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></svg></mjx-container></strong> insertion 的資料結構，不然就會多出額外 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-10-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></svg></mjx-container></strong> 的寫入成本。</p>
<h1 id="時間複雜度">時間複雜度</h1>
<table>
<thead>
<tr class="header">
<th></th>
<th>Best</th>
<th>Average</th>
<th>Worst</th>
<th>Worst space</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Complexity</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-10-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-10-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></svg></mjx-container></td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-9-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-9-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-9-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-9-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-9-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-9-TEX-N-29"></use></g></g></g></svg></mjx-container></td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-9-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-9-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-9-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-9-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-9-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-9-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-9-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-9-TEX-N-29"></use></g></g></g></svg></mjx-container></td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-8-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container> auxiliary</td>
</tr>
</tbody>
</table>
<p>對於接近排序完成的序列，selector sort 並無法有自適應的方式加快排序迭代。第一個元素要做 n−1 次比較，第二個 n−2 次，總比較次數如下： n+(n-1)+...+1 = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="6.204ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 2742.3 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-8-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-8-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-8-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1589, 0)"><use xlink:href="#MJX-8-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(2367, 0)"><use xlink:href="#MJX-8-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2867, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-8-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>，因此無論序列是否排序完成，selection sort 仍需執行<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="3.045ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1345.8 833.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g></g></g></g></svg></mjx-container>次比較，時間複雜度為<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="6.531ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2886.8 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1152, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D441"></use></g><g data-mml-node="mn" transform="translate(942.3, 363) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2497.8, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<h1 id="變形">變形</h1>
<p><strong>Heapsort</strong> <a href="https://yu-shin.github.io/2021-01-09-heapsort.html">Heapsort</a> 是一個高效的排序法，使用 selection sort 融合 <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)">heap</a> 這種半排序的資料結構，讓時間複雜度進化至 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.355ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4577 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-5-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-5-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-5-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-5-TEX-I-1D441"></use></g><g data-mml-node="mi" transform="translate(2040, 0)"><use xlink:href="#MJX-5-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2338, 0)"><use xlink:href="#MJX-5-TEX-I-1D45C"></use></g><g data-mml-node="mi" transform="translate(2823, 0)"><use xlink:href="#MJX-5-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(3300, 0)"><use xlink:href="#MJX-5-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(4188, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g></g></g></svg></mjx-container>。更多詳情可以參考<a href="https://yu-shin.github.io/2021-01-09-heapsort.html">這篇介紹</a>。 # 參考資料 <a href="https://www.khanacademy.org/computing/computer-science/algorithms/sorting-algorithms/a/selection-sort-pseudocode">Selection sort pseudocode</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/sorting-algorithms/a/analysis-of-selection-sort">Analysis of selection sort</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/sorts/selection_sort.py">Selection Sort</a> <a href="https://rust-algo.club/sorting/selection_sort/index.html">選擇排序 Selection sort</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Stack</title>
    <url>/posts/8069546e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="stack-堆疊">Stack (堆疊)</h1>
<p>具有 LIFO (last in-first out)或 FILO (first in-last out)性質的有序串列</p>
<ul>
<li>插入元素的動作稱為 <code>Push</code>, 刪除元素的動作稱為 <code>Pop</code></li>
<li>Push/Pop 的動作皆發生在同一端，此端稱為 <code>Top</code></li>
</ul>
<img src="/posts/8069546e/stack1.jpg" class="">
<a id="more"></a>
<h1 id="stack之adt">Stack之ADT</h1>
<h2 id="data-object-spec">Data Object Spec</h2>
<ul>
<li>A <code>set</code> of data item</li>
<li><code>Top</code>: 指出目前頂端元素所在</li>
<li><code>Size</code>: 表Stack的大小</li>
</ul>
<h2 id="operation-spec">Operation Spec</h2>
<ul>
<li>Create(S) → S</li>
<li>Push(S, item) → S</li>
<li>Pop(S) → item, S</li>
<li>Top(S) → item</li>
<li>IsFull(S) → Boolean</li>
<li>IsEmpty(S) → Boolean</li>
</ul>
<h1 id="stack-之製作">Stack 之製作</h1>
<p>有兩個方式:</p>
<ol type="1">
<li>Array</li>
<li>Linked List</li>
</ol>
<img src="/posts/8069546e/stack2.jpg" class="">
<h2 id="以-array-製作-stack">以 Array 製作 Stack</h2>
<h3 id="creates">Create(S)</h3>
<p>只需做宣告即可： <pre class="line-numbers language-none"><code class="language-none">S: Array[1…n] item &#x2F;&#x2F;宣告一個Array
int top &#x3D; 0 &#x2F;&#x2F;設定一整數變數top且初値為0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> <div class="note danger"><p>為了説明方便，這邊用 Array 製作 Stack 時，均假設一維陣列的起始位址是從 1 開始!</p>
</div></p>
<h3 id="pushs-item">Push(S, item)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if top &#x3D; n:
    stack Full;
  else:
    top &#x3D; top + 1; &#x2F;&#x2F;top要先加1
    S[top] &#x3D; item; &#x2F;&#x2F;再將item置入
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="pops">Pop(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if top &#x3D; 0:
    stack empty;
  else:
    item &#x3D; S[top]; &#x2F;&#x2F;先將item叫出
    top &#x3D; top - 1; &#x2F;&#x2F;再將top減1
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="tops">Top(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if top &#x3D; 0:
    stack empty;
  else:
    return S[top]; &#x2F;&#x2F;將item叫出
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="isemptys">IsEmpty(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if top &#x3D; 0:
    return True;
  else:
    return False;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="isfulls">IsFull(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if top &#x3D; n:
    return True;
  else:
    return False;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="以-linked-list-製作-stack">以 Linked List 製作 Stack</h2>
<p>要利用 linked list 實作 stack，需要撰寫兩個不同的結構(Structure)：</p>
<ul>
<li><code>Head</code>：用以當作堆疊中的Top，以指出堆疊中頂端元素之所在
<ul>
<li>此 Head 結構內不一定要有存放資料之資料變數，但<code>一定要有一個指標</code>以指向堆疊的頂端元素 <div class="note success"><p>往後文章若無特別説明，此 Head 結構皆僅有一個指標 ，名為“<mark class="label info">Top</mark>”</p>
</div></li>
</ul></li>
<li><code>Data Node</code>：用以存放欲置於堆疊中的資料
<ul>
<li>此節點的結構內<code>至少要有一個指標與一個資料變數</code>。指標用以指向下一個元素，資料變數用以存放堆疊的資料</li>
</ul></li>
</ul>
<img src="/posts/8069546e/stack3.jpg" class="">
<h3 id="creates-1">Create(S)</h3>
<p>宣告top指標為null即可: <pre class="line-numbers language-none"><code class="language-none">top &#x3D; null;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> <img src="/posts/8069546e/stack4.jpg" class=""></p>
<h3 id="pushs-item-1">Push(S, item)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  New(t); &#x2F;&#x2F;跟系統要求記憶體空間以產生並置放一個新節點pNew
  pNew → data &#x3D; item; &#x2F;&#x2F;把資料 “item” 塞到這個新節點pNew的Data欄位中
1 pNew → link &#x3D; top;
2 top &#x3D; pNew;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div class="note success"><p>只要 Memory 有空間，O.S.就允許 Linked Stack 去 Push 新資料!!不用像 Array 一樣，要先檢查 Array 是否滿了</p>
</div>
<img src="/posts/8069546e/stack5.jpg" class="">
<h3 id="pops-1">Pop(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (top &#x3D; null):
    Stack empty;
  else:
1   dltPtr &#x3D; top;
2   item &#x3D; top → data;
3   top &#x3D; dltPtr → link;
4   Ret(dltPtr);
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="/posts/8069546e/stack6.jpg" class="">
<h3 id="tops-1">Top(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
if (top &#x3D; null):
  success &#x3D; false;
else:
  print(top → data);
  success &#x3D; true;
return success;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="isemptys-1">IsEmpty(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (top &#x3D; null):
    result &#x3D; true;
  else:
    result &#x3D; false;
  return result;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="isfulls-1">IsFull(S)</h3>
<pre class="line-numbers language-none"><code class="language-none">begin
  if (memory available):
    result &#x3D; false;
  else:
    result &#x3D; true;
  return result;
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="stack-application">Stack Application</h1>
<h2 id="procedure-call-recursive-call-之處理">Procedure Call / Recursive Call 之處理</h2>
<img src="/posts/8069546e/stack7.jpg" class="">
<h2 id="parsing-剖析">Parsing (剖析)</h2>
<p>編譯器 (Compiler)將程式剖析成單獨的個體，如：關鍵字、名字、標誌…等，以進行程式語法檢査 - 一般常見的程式問題是不對稱的括號 (<code>Unmatched Parenthese</code>)，即是編譯器在剖析過程中，藉由堆疊來做判斷</p>
<img src="/posts/8069546e/stack8.jpg" class="">
<h2 id="reversing-data-反轉資料">Reversing Data (反轉資料)</h2>
<img src="/posts/8069546e/stack9.jpg" class="">
<h2 id="infix-與-prefix-postfix-間互轉">Infix 與 Prefix / Postfix 間互轉</h2>
<ol type="1">
<li>Infix (中序式)</li>
</ol>
<ul>
<li>定義: 一般所使用的 Expression Format</li>
<li>形式: <strong><mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label success">Operator(運算子)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark></strong></li>
<li>運算子的種類:
<ul>
<li>Binary: +, -, ÷, ×, and, or, …</li>
<li>Unary: not</li>
</ul></li>
<li>缺點: 不利於 Compiler 對式子運算的處理
<ul>
<li>∵需要考慮運算子之間的<code>優先權</code>、<code>結合性</code></li>
<li>∴ Compiler 可能需要來回多次 scan 才可以求算出結果</li>
<li>Ex: a + b * c ↑ (d - e)</li>
</ul></li>
</ul>
<ol start="2" type="1">
<li>Postfix (後序式)</li>
</ol>
<ul>
<li>形式: <strong><mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark> <mark class="label success">Operator(運算子)</mark></strong></li>
<li>優點:
<ul>
<li>Compiler 易於處理，scan <code>一次</code>即可求得計算結果</li>
<li>∵在後序式的表示式當中，已<mark class="label danger">免除</mark>掉<code>括號</code>，<code>優先權</code>與<code>結合性</code>的考量</li>
</ul></li>
<li>中序式轉後序式，需要用到<code>一個 Stack</code> 的支援</li>
</ul>
<ol start="3" type="1">
<li>Prefix (前序式)</li>
</ol>
<ul>
<li>形式: <strong><mark class="label success">Operator(運算子)</mark> <mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark></strong></li>
<li>優點:
<ul>
<li>Compiler 處理 Prefix 的計算，scan <code>一次</code>即可求得結果</li>
<li>∵在前序式的表示式當中，已<mark class="label danger">免除</mark>掉<code>括號</code>，<code>優先權</code>與<code>結合性</code>的考量</li>
</ul></li>
<li>但是在中序式轉前序式比較麻煩，需要用到<code>二個 Stack</code> 的支援。∴還是傾向使用 Postfix</li>
</ul>
<h3 id="中序式與後序式-前序式互轉的">中序式與後序式 / 前序式互轉的<mark class="label ">計算</mark></h3>
<h4 id="中序式轉後序式前序式">中序式轉後序式、前序式</h4>
<p><strong>使用 “<code>括號法</code>”:</strong></p>
<ul>
<li>中 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-11-TEX-N-21D2"></use></g></g></g></svg></mjx-container> 後的歩驟:
<ul>
<li>對於中序式，先加上<code>完整的括號配對</code></li>
<li>將運算子取代最近的<code>右</code>括號</li>
<li>刪除<code>左</code>括號，予以輸出即可</li>
</ul></li>
<li>中 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-11-TEX-N-21D2"></use></g></g></g></svg></mjx-container> 前的歩驟:
<ul>
<li>對於中序式，先加上<code>完整的括號配對</code></li>
<li>將運算子取代最近的<code>左</code>括號</li>
<li>刪除<code>右</code>括號，予以輸出即可</li>
</ul></li>
</ul>
<p><strong>一般常見的運算子之優先權與結合性:</strong> <img src="/posts/8069546e/stack10.jpg" class=""> <strong>以下是一些練習範例：</strong> <img src="/posts/8069546e/stack11.jpg" class=""> <img src="/posts/8069546e/stack12.jpg" class=""></p>
<h4 id="後序式前序式轉中序式">後序式、前序式轉中序式</h4>
<p>很直觀，都是由左往右掃:</p>
<ul>
<li>Prefix <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-11-TEX-N-21D2"></use></g></g></g></svg></mjx-container> Infix
<ul>
<li><strong><mark class="label success">Operator(運算子)</mark> <mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-10-TEX-N-21D2"></use></g></g></g></svg></mjx-container> <mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label success">Operator(運算子)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark></strong></li>
</ul></li>
<li>Postfix <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-10-TEX-N-21D2"></use></g></g></g></svg></mjx-container> Infix
<ul>
<li><strong><mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark> <mark class="label success">Operator(運算子)</mark> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-9-TEX-N-21D2"></use></g></g></g></svg></mjx-container> <mark class="label primary">Operand 1 (運算元 1)</mark> <mark class="label success">Operator(運算子)</mark> <mark class="label primary">Operand 2 (運算元 2)</mark></strong></li>
</ul></li>
</ul>
<p>以下是一些練習範例： <img src="/posts/8069546e/stack13.jpg" class=""> <img src="/posts/8069546e/stack14.jpg" class=""> <div class="note success"><p>轉完中序後記得把多餘的括號拿掉</p>
</div></p>
<h3 id="中序式與後序式-前序式互轉的-1">中序式與後序式 / 前序式互轉的<mark class="label ">演算法</mark></h3>
<p><strong>需要堆疊(<code>Stack</code>)支援</strong></p>
<h4 id="infix-轉-postfix-的演算法-利用1個stack">Infix 轉 Postfix 的演算法 (利用1個Stack)</h4>
<ol type="1">
<li>中序運算式<code>由左往右</code>掃描，當遇到:</li>
</ol>
<ul>
<li><mark class="label info">運算元</mark>
: 直接輸出 (或Print) 到後序式</li>
<li><mark class="label info">運算子</mark>
:
<ul>
<li>"<mark class="label success">)</mark>": pop堆疊內的運算子直到遇到 "<mark class="label success">(</mark>"</li>
<li><mark class="label success">其它運算子x</mark>
: 比大小</li>
<li>若運算子 x 的優先權 &gt; 堆疊內最 Top 的運算子時，則將運算子 x push 至堆疊中</li>
<li>若運算子 x 的優先權 ≤ 堆疊內最 Top 的運算子時，則 pop 堆疊內的運算子直到 x &gt; 堆疊內最 Top 的運算子為止</li>
</ul></li>
</ul>
<ol start="2" type="1">
<li>掃描完中序運算式，則將堆疊內的<code>殘餘資料pop完</code></li>
</ol>
<div class="note danger"><ul>
<li>Stack 為空時，其優先權最低。(∵ Stack 沒有任何運算子可與待輸入的運算子做比較)</li>
<li>“(” 在 Stack 外優先權最高，但在 Stack 內優先權最低</li>
</ul>
</div>
<p><strong>Ex. 寫出 Infix: A+B×(C-D÷E)+F 轉 Postfix 的過程:</strong></p>
<ol type="1">
<li>Print ‘A’</li>
<li>‘+’ &gt; 空的 Stack <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-9-TEX-N-21D2"></use></g></g></g></svg></mjx-container> push ‘+’</li>
<li>Print ‘B’</li>
<li>‘×’ &gt; ‘+’(堆疊的top元素) <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-7-TEX-N-21D2"></use></g></g></g></svg></mjx-container> push ‘×’</li>
<li>‘(’ &gt; ‘×’ <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-6-TEX-N-21D2"></use></g></g></g></svg></mjx-container> push ‘(’</li>
<li>Print ‘C’</li>
<li>‘-’ &gt; ‘(’ (on stack)<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-6-TEX-N-21D2"></use></g></g></g></svg></mjx-container> push ‘-’</li>
<li>Print ‘D’</li>
<li>‘÷’ &gt; ‘-’ <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-21D2"></use></g></g></g></svg></mjx-container>push ‘÷’</li>
<li>Print ‘E’</li>
<li>‘)’ <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-21D2"></use></g></g></g></svg></mjx-container> pop stack until ‘(’
<ol type="1">
<li>Pop ‘÷’, print</li>
<li>Pop ‘-’, print</li>
<li>Pop ‘(’, 不用print</li>
</ol></li>
<li>‘+’ ≤ ‘×’ &gt; pop ‘×’, print</li>
<li>‘+’ ≤ ‘+’ &gt; pop ‘+’, print</li>
<li>‘+’ &gt; 空的 Stack <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-21D2"></use></g></g></g></svg></mjx-container> push ‘+’</li>
<li>Print ‘F’</li>
<li>Scan 完畢，清空Stack <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-21D2"></use></g></g></g></svg></mjx-container> pop ‘+’</li>
</ol>
<p>Ans: <strong><mark class="label danger">ABCDE÷-×+F+</mark></strong></p>
<pre class="line-numbers language-none"><code class="language-none">while (Infix尚未Scan完畢):
  x &#x3D; NextToken; &#x2F;&#x2F;Token是指運算的單元，可能是運算元或是運算子
  if (x是operand):
    print(x);
  else:
    if (x是 ‘)’ ):
      pop(S), 直到遇見 ‘(’ 為止;
    else:
      比較 (x與stack top之優先權)
      - case “x &gt; top”: 則 push(x, S);
      - case “x ≤ top”: 則 pop(S), 直到 x &gt; top為止, 再push(x, S);
while (stack ≠empty):
  pop stack;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="postfix-之計算的演算法">Postfix 之計算的演算法</h4>
<p>由左往右掃 <pre class="line-numbers language-none"><code class="language-none">while (Postfix尚未Scan完畢):
  x &#x3D; NextToken; &#x2F;&#x2F;Token是指運算的單元，可能是運算元或是運算子
  if (x是operand):
    push(x);
  else:
    pop適當數目的運算元
    - 計算
    - 再將計算結果push回stack
pop stack; &#x2F;&#x2F;即為結果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <strong>Ex. 43-15×+，寫出postfix計算過程 (含Stack內容):</strong></p>
<ol type="1">
<li>Push ‘4’</li>
<li>Push ‘3’</li>
<li>‘-’: 1.pop ‘3’與 ‘4’ 2.計算 4-3 = 1, 再 push ‘1’</li>
<li>Push ‘1’</li>
<li>Push ‘5’</li>
<li>‘×’: 1.pop ‘5’與 ‘1’ 2.計算1 × 5 = 5, 再 push ‘5’</li>
<li>‘+’:
<ol type="1">
<li>pop ‘5’與 ‘1’</li>
<li>計算1 + 5 = 6, 再 push ‘6’</li>
</ol></li>
<li>Scan完畢，pop stack <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-21D2"></use></g></g></g></svg></mjx-container> 6</li>
</ol>
<h4 id="infix-轉-prefix-的演算法-利用2個stack">Infix 轉 Prefix 的演算法 (利用2個Stack)</h4>
<h4 id="prefix-之計算的演算法">Prefix 之計算的演算法</h4>
<p><strong>以上兩者因為繁瑣且較少實做所以省略</strong></p>
<h1 id="stack-的排列組合問題-stack-permutation">Stack 的排列組合問題 (Stack Permutation)</h1>
<ul>
<li>三個資料 a, b, c 依序 push 入 stack，而過程中可插入 pop 動作，則合法的排列組合有哪些?
<ul>
<li>abc → push a, pop, push b, pop, push c, pop</li>
<li>acb → push a, pop, push b, push c, pop, pop</li>
<li>bac → push a, push b, pop, pop, push c, pop</li>
<li>bca → push a, push b, pop, push c, pop, pop</li>
<li>cab → 無法</li>
<li>cba → push a, push b, push c, pop, pop, pop</li>
</ul></li>
<li><p>n 個資料執行 stack permutation，其合法的排列組合個數為多少? <span class="math display">\[ \frac{1}{n+1}\begin{pmatrix}2n\\n\\\end{pmatrix}\Longleftarrow  \bf{Catalmnn Number} \]</span></p></li>
<li><code>Catalmnn Number</code>可用於表示:
<ul>
<li>n 個 nodes 所形成的不同二元樹個數
<ul>
<li>後續文章討論</li>
</ul></li>
<li>n 個 “(” 與 “)” 所形成的合法配對個數
<ul>
<li>( ) ( ( ) )</li>
<li>( ( ) ( ) )</li>
<li>...</li>
</ul></li>
<li>n 個矩陣之所有可能相乘方式 (同 “括號配對”的觀念)
<ul>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.614ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7343.5 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-4-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-4-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1984.8, 0)"><use xlink:href="#MJX-4-TEX-N-D7"></use></g><g data-mml-node="msub" transform="translate(2985, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(4358.6, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(4969.8, 0)"><use xlink:href="#MJX-4-TEX-N-D7"></use></g><g data-mml-node="msub" transform="translate(5970, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-33"></use></g></g></g></g></svg></mjx-container></li>
<li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="16.614ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7343.5 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-4-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path><path id="MJX-4-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-4-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(1595.8, 0)"><use xlink:href="#MJX-4-TEX-N-D7"></use></g><g data-mml-node="mo" transform="translate(2596, 0)"><use xlink:href="#MJX-4-TEX-N-28"></use></g><g data-mml-node="msub" transform="translate(2985, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(4580.8, 0)"><use xlink:href="#MJX-4-TEX-N-D7"></use></g><g data-mml-node="msub" transform="translate(5581, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-4-TEX-I-1D440"></use></g><g data-mml-node="mn" transform="translate(970, -150) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(6954.5, 0)"><use xlink:href="#MJX-4-TEX-N-29"></use></g></g></g></svg></mjx-container></li>
<li>...</li>
</ul></li>
<li>n 輛火車進出鐵軌問題</li>
</ul></li>
</ul>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course05.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Tree</title>
    <url>/posts/eaa4738c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="tree">Tree</h1>
<p><strong>Tree</strong> 是由 <code>1 個以上</code>的 <strong>Nodes</strong> 所組成的有限集合，滿足:</p>
<ul>
<li>至少有一個 <strong>Node</strong>，稱為 <strong>Root</strong> (<code>Tree 不可為空</code>)</li>
<li>其餘的 <strong>Nodes</strong> 分成 T1, T2, …, Tn 個互斥集合，稱為 <strong>Subtree</strong> (子集合(子樹)間沒有交集)</li>
</ul>
<img src="/posts/eaa4738c/tree4.jpg" class="">
<a id="more"></a>
<h2 id="degree-of-a-node-節點分支度">Degree of a node (節點分支度)</h2>
<ul>
<li><strong><code>節點的子樹個數</code></strong>
<ul>
<li><strong>Degree</strong> of A = 3</li>
<li><strong>Degree</strong> of B = 2</li>
<li><strong>Degree</strong> of E = 0</li>
<li><strong>Degree</strong> of F = 3</li>
<li><strong>Degrees</strong> of C, D, G, H, I are all 0</li>
</ul></li>
</ul>
<img src="/posts/eaa4738c/tree1.jpg" class="">
<h2 id="degree-of-a-tree-樹分支度">Degree of a tree (樹分支度)</h2>
<p>樹中所有節點分支度<code>最大者</code>。即：Max {各 Node 之 degree}</p>
<h2 id="leaf-葉子">Leaf (葉子)</h2>
<p><code>分枝度為 0</code> 之節點</p>
<h2 id="non-leaf-node-non-terminal-node-或-internal-node">Non-leaf Node (Non-terminal Node 或 Internal Node)</h2>
<p>樹中所有非葉子的 Node，或是 <code>Degree ≥ 1</code> 的節點稱之</p>
<h2 id="parent-node-父節點-and-child-node-子節點">Parent Node (父節點) and Child Node (子節點)</h2>
<ul>
<li>若一個節點 x 有後繼節點 (Successor Nodes) ，則此節點 x 即為<strong>父節點</strong> (<strong>Parent</strong>)；反之，若一個節點 y 有前輩節點 (Predecessor)，則此節點 y 即為<strong>子節點</strong> (<strong>Child</strong>)</li>
<li>某節點所有子樹的樹根皆為該節點的 Child; 而該節點為這些樹根的 Parent</li>
</ul>
<h2 id="sibling-兄弟">Sibling (兄弟)</h2>
<p>同一個父節點的所有子節點互稱為 <strong>Sibling</strong></p>
<h2 id="ancestor-袓先">Ancestor (袓先)</h2>
<ul>
<li>某一個節點的祖先，乃是從樹根到該節點路徑中，所經過的所有節點</li>
<li>通常為一<code>集合</code></li>
<li><strong>Ancestors</strong> of C: {A, B}</li>
</ul>
<img src="/posts/eaa4738c/tree1.jpg" class="">
<h2 id="level-階度">Level (階度)</h2>
<ul>
<li>某一個節點的<strong>階度</strong>，是指<code>自樹根至該節點的距離</code></li>
<li>Root 所在的 <strong>level</strong> 値為 <code>1</code>，若父點的 <strong>level</strong> 値為 <code>i</code>，則子點的 <strong>level</strong> 値為 <code>i+1</code></li>
<li>下圖：
<ul>
<li>E 的 level = 4</li>
<li>C 的 level = 3</li>
</ul></li>
</ul>
<img src="/posts/eaa4738c/tree2.jpg" class="">
<h2 id="height-高度或稱-depth">Height (高度；或稱 Depth)</h2>
<ul>
<li>一顆樹的各 <strong>level</strong> 値當中之<code>最大値</code>，即為該樹的高度</li>
<li>上圖：
<ul>
<li>此樹的高度 = 4</li>
</ul></li>
</ul>
<h2 id="forest-森林">Forest (森林)</h2>
<ul>
<li><strong>森林</strong>及是 <code>n 個互斥樹</code>所形成的<strong>集合</strong> (n ≥ 0)</li>
<li><strong>可以為空</strong></li>
</ul>
<img src="/posts/eaa4738c/tree3.jpg" class="">
<h1 id="tree-representation-樹的表示方式">Tree Representation (樹的表示方式)</h1>
<p>一顆樹要實作於電腦系統中，通常會採用<code>指標 (Pointer)</code> 來設計</p>
<h2 id="做法1-直接用-link-list-表示">做法1: 直接用 Link list 表示</h2>
<ul>
<li>假設 <strong>Tree</strong> 有 n 個 <strong>node</strong>，<strong>degree</strong> 為 k</li>
<li>Node structure 設計如下: <img src="/posts/eaa4738c/tree5.jpg" class=""></li>
<li>其中
<ul>
<li>k: 表示 <strong>Tree degree</strong></li>
<li>Data: 存 node 的<strong>資料値</strong></li>
<li>Link i: 指標指向 <strong>ith</strong> 子樹之 <strong>Root Node</strong> (1 ≤ i ≤ k)</li>
</ul></li>
<li>例如： <img src="/posts/eaa4738c/tree6.jpg" class=""></li>
<li><code>問題</code>：
<ul>
<li>Link 空間<strong>浪費</strong>甚巨 (∵空 Link 數目太多)</li>
</ul></li>
<li>分析：
<ul>
<li>假設 <strong>tree</strong> 有 <strong><mark class="label info">n</mark></strong> 個 <strong>nodes</strong>，tree <strong>degree</strong> 為 <strong><mark class="label info">k</mark></strong></li>
<li>總共的 <strong>link</strong> 空間為: <strong>n <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0.02ex" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.09ex" role="img" focusable="false" viewBox="0 -491 778 482" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-12-TEX-N-D7"></use></g></g></g></svg></mjx-container> k</strong></li>
<li>有用的 link 數目為: <strong><code>n - 1</code></strong> (即 link ≠ nil)</li>
<li>浪費數目(即: 空 link): <strong><code>nk - (n-1)</code></strong></li>
<li>浪費<strong>比例</strong>: <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.798ex" xmlns="http://www.w3.org/2000/svg" width="26.313ex" height="3.167ex" role="img" focusable="false" viewBox="0 -1047.1 11630.2 1399.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-12-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-12-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-12-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-12-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-12-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-12-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-12-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-12-TEX-N-2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(600, 0)"><use xlink:href="#MJX-12-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(1121, 0)"><use xlink:href="#MJX-12-TEX-N-2212"></use></g><g data-mml-node="mo" transform="translate(1899, 0)"><use xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2288, 0)"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2888, 0)"><use xlink:href="#MJX-12-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(3666, 0)"><use xlink:href="#MJX-12-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(4166, 0)"><use xlink:href="#MJX-12-TEX-N-29"></use></g></g><g data-mml-node="mrow" transform="translate(1434.1, -345) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(600, 0)"><use xlink:href="#MJX-12-TEX-I-1D458"></use></g></g><rect width="3420.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3938.6, 0)"><use xlink:href="#MJX-12-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(4994.4, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-12-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(1510, 0)"><use xlink:href="#MJX-12-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2288, 0)"><use xlink:href="#MJX-12-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2788, 0)"><use xlink:href="#MJX-12-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(3177, 0)"><use xlink:href="#MJX-12-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(3955, 0)"><use xlink:href="#MJX-12-TEX-N-31"></use></g></g><g data-mml-node="mrow" transform="translate(1398.7, -345) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(600, 0)"><use xlink:href="#MJX-12-TEX-I-1D458"></use></g></g><rect width="3350.2" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(8862.4, 0)"><use xlink:href="#MJX-12-TEX-N-2248"></use></g><g data-mml-node="mfrac" transform="translate(9918.1, 0)"><g data-mml-node="mrow" transform="translate(220, 398) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(521, 0)"><use xlink:href="#MJX-12-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1299, 0)"><use xlink:href="#MJX-12-TEX-N-31"></use></g></g><g data-mml-node="mi" transform="translate(671.8, -345) scale(0.707)"><use xlink:href="#MJX-12-TEX-I-1D458"></use></g><rect width="1472.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></strong></li>
</ul></li>
</ul>
<h2 id="做法2-將-tree-化成-binary-tree-後再存">做法2: 將 Tree 化成 Binary Tree 後再存</h2>
<p><strong><code>∴ Tree 化成 Binary Tree 是資料結構中的一個很重要的議題</code></strong></p>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course06.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Heap Sort</title>
    <url>/posts/2c38fcfa/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="heap-sort">Heap Sort</h1>
<p>Heapsort 的演算法分為兩大步驟：</p>
<ol type="1">
<li>將資料轉換為 heap 資料結構（遞增排序用 max-heap, 遞減排序選擇 min-heap）。</li>
<li>逐步取出最大／最小值，並與最後一個元素置換。具體步驟如下：
<ol type="1">
<li>交換 heap 的 root 與最後一個 node，縮小 heap 的範圍（排序一筆資料，故 heap 長度 -1）。</li>
<li>更新剩下的資料，使其滿足 heap 的特性，稱為 heap ordering property。</li>
<li>重複前兩個步驟，直到 heap 中剩最後一個未排序的資料。</li>
</ol></li>
</ol>
<a id="more"></a>
<p>Heapsort（堆積排序）可以看作是 <a href="https://yu-shin.github.io/2020-12-30-Selection-Sort.html#more">selection sort</a> 的變形，同樣會將資料分為 sorted pile 與 unsorted pile，並在 unsorted pile 中尋找最大值（或最小值），加入 sorted pile 中。 <img src="/posts/2c38fcfa/%E4%BA%94%E5%80%8Bsort.jpg" class=""> <img src="/posts/2c38fcfa/%E6%AF%94%E8%BC%83%E5%9C%96.jpg" class=""></p>
<h1 id="說明">說明</h1>
<h3 id="binary-heap">Binary Heap</h3>
<p><strong>Binary Heap</strong> 有兩項基本特徵：</p>
<p><strong>特徵一</strong>： Binary Heap 之結構可以視作 <strong>Complete Binary Tree</strong> 。</p>
<ul>
<li>如圖一(a)，數值1～9，一共有9個元素，按照 <strong>Complete Binary Tree</strong> 之順序規則，填滿位置1～9，以 index(1)～index(9) 表示。</li>
</ul>
<p>這樣的優點是方便尋找「parent-child」之關係，以 index(i) 的 node 為例：</p>
<ul>
<li>其 <strong>left child</strong> 必定位在 <strong>index(2i)</strong></li>
<li>其 <strong>right child</strong> 必定位在 <strong>index(2i+1)</strong></li>
<li>其 <strong>parent</strong> 必定位在 <strong>index(⌊i/2⌋)</strong></li>
</ul>
<p>以圖一(a)中位於 index(3) 之 node(8) 為例：</p>
<ul>
<li>其 <strong>left child</strong> 為 index(6) 之 node(2)；</li>
<li>其 <strong>right child</strong> 為 index(7) 之 node(3)；</li>
<li>其 <strong>parent</strong> 為 index(1) 之 node(9)。</li>
</ul>
<img src="/posts/2c38fcfa/1610176202580.jpg" class="">
<p><strong>特徵二</strong>：若將位於 index(i) 之 node 視為 subtree 之 root ，那麼，可將此 Binary Heap 分為兩類：</p>
<ul>
<li><strong>Max Heap</strong>：在每一個 subtree 中， <strong>root</strong> 之「數值」要比兩個 <strong>child</strong> 之「數值」還要大，見圖一(a)：
<ul>
<li>value(i) &gt; value(2i)</li>
<li>value(i) &gt; value(2i+1)</li>
</ul></li>
<li><strong>Min Heap</strong>：在每一個 subtree 中， <strong>root</strong> 之「數值」要比兩個 <strong>child</strong> 之「數值」還要小，見圖一(b)：
<ul>
<li>value(i) &lt; value(2i)</li>
<li>value(i) &lt; value(2i+1)</li>
</ul></li>
</ul>
<img src="/posts/2c38fcfa/1610176456485.jpg" class="">
<h3 id="heapsort-步驟說明">heapsort 步驟說明</h3>
<p>而 heapsort 主要分為兩個部分：</p>
<ol type="1">
<li><strong>Heapify</strong>：將陣列轉換為 heap 資料結構（heapify）。</li>
<li><strong>Sorting</strong>：不斷置換 heap root 與最後一個元素來排序，並修正剩餘未排序資料使其符合 heap order。</li>
</ol>
<h1 id="程式碼">程式碼</h1>
<pre class="line-numbers language-python" data-language="python"><div class="caption"><span>HeapSort</span><a href="/downloads/code/heapsort/heapsort.py">view raw</a></div><code class="language-python">def heapify(unsorted, index, heap_size):
    largest &#x3D; index
    left_index &#x3D; 2 * index + 1
    right_index &#x3D; 2 * index + 2
    if left_index &lt; heap_size and unsorted[left_index] &gt; unsorted[largest]:
        largest &#x3D; left_index

    if right_index &lt; heap_size and unsorted[right_index] &gt; unsorted[largest]:
        largest &#x3D; right_index

    if largest !&#x3D; index:
        unsorted[largest], unsorted[index] &#x3D; unsorted[index], unsorted[largest]
        heapify(unsorted, largest, heap_size)


def heap_sort(unsorted):
    n &#x3D; len(unsorted)
    # 建立 binary heap(heapify)
    for i in range(n &#x2F;&#x2F; 2 - 1, -1, -1):
        heapify(unsorted, i, n)
    # Sorting(sift down)
    for i in range(n - 1, 0, -1):
        unsorted[0], unsorted[i] &#x3D; unsorted[i], unsorted[0]
        heapify(unsorted, 0, i)
    return unsorted


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    unsorted &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]
    print(heap_sort(unsorted))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="特性">特性</h1>
<ul>
<li>使用 <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)">heap</a> 資料結構輔助，通常使用 <a href="https://en.wikipedia.org/wiki/Binary_heap">binary heap</a>。</li>
<li>不穩定排序：排序後，相同鍵值的元素相對位置可能改變。</li>
<li>原地排序：不需額外花費儲存空間來排序。</li>
<li>較差的 CPU 快取：heap 不連續存取位址的特性，不利於 <a href="https://en.wikipedia.org/wiki/CPU_cache">CPU 快取</a>。</li>
</ul>
<h1 id="時間複雜度">時間複雜度</h1>
<table>
<thead>
<tr class="header">
<th>case</th>
<th>Best</th>
<th>Average</th>
<th>Worst</th>
<th>Worst space</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Complexity</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.355ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4577 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-12-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-12-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-12-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-12-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-12-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-12-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-12-TEX-I-1D441"></use></g><g data-mml-node="mi" transform="translate(2040, 0)"><use xlink:href="#MJX-12-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2338, 0)"><use xlink:href="#MJX-12-TEX-I-1D45C"></use></g><g data-mml-node="mi" transform="translate(2823, 0)"><use xlink:href="#MJX-12-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(3300, 0)"><use xlink:href="#MJX-12-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(4188, 0)"><use xlink:href="#MJX-12-TEX-N-29"></use></g></g></g></svg></mjx-container></td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.355ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4577 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-10-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-10-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-10-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-10-TEX-I-1D441"></use></g><g data-mml-node="mi" transform="translate(2040, 0)"><use xlink:href="#MJX-10-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2338, 0)"><use xlink:href="#MJX-10-TEX-I-1D45C"></use></g><g data-mml-node="mi" transform="translate(2823, 0)"><use xlink:href="#MJX-10-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(3300, 0)"><use xlink:href="#MJX-10-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(4188, 0)"><use xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></svg></mjx-container></td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.355ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4577 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-I-1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path><path id="MJX-8-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-8-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-8-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-8-TEX-I-1D441"></use></g><g data-mml-node="mi" transform="translate(2040, 0)"><use xlink:href="#MJX-8-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2338, 0)"><use xlink:href="#MJX-8-TEX-I-1D45C"></use></g><g data-mml-node="mi" transform="translate(2823, 0)"><use xlink:href="#MJX-8-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(3300, 0)"><use xlink:href="#MJX-8-TEX-I-1D441"></use></g><g data-mml-node="mo" transform="translate(4188, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container></td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152, 0)"><use xlink:href="#MJX-8-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container> auxiliary</td>
</tr>
</tbody>
</table>
<h3 id="build-heap-heapify">Build heap (heapify)</h3>
<p><strong>Heapify</strong> 是指將序列修正至符合 heap ordering 的序列。給定一個元素，假定其為非法的 heap order，而該元素之後的 subtree 視為符合 heap ordering property。欲修正這個在錯誤位置的元素，必須透過與其 children node 置換往下篩，這個往下篩的過程就稱為 <strong>sift down</strong>，在程式碼一節有解釋，這邊只要知道 sift down 會不斷將該元素與其 child node 比較，若不符合 heap order 則與 child node 置換，並繼續迭代每一個 level。所以 sift down 的時間複雜度為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="23.547ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 10407.8 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-N-2308" d="M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z"></path><path id="MJX-6-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-6-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-6-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-6-TEX-N-2061" d=""></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-6-TEX-N-2309" d="M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z"></path><path id="MJX-6-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(1152, 0)"><use xlink:href="#MJX-6-TEX-N-2308"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1596, 0)"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mn" transform="translate(1278, -241.4) scale(0.707)"><use xlink:href="#MJX-6-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1681.6, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mo" transform="translate(1681.6, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2070.6, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2670.6, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g><g data-mml-node="mo" transform="translate(4655.6, 0)"><use xlink:href="#MJX-6-TEX-N-2309"></use></g><g data-mml-node="mo" transform="translate(5099.6, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(5766.3, 0)"><use xlink:href="#MJX-6-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(6822.1, 0)"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(7585.1, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(7974.1, 0)"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(9252.1, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(9418.8, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(10018.8, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container>， n 為陣列元素個數。</p>
<p>Heapify 從最末個元素開始反向迭代，每個元素都呼叫 <code>sift_down</code> 調整 heap 符合 heap ordering。總共要做 n 次 <code>sift_down</code> 操作，但由於最後一層所以 leaf 已符合 heap order（因為沒有 child node），我們的迴圈可以跳過所有 leaf node 直接從非 leaf node 開始，因此複雜度為: <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="28.24ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 12482 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-N-230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path><path id="MJX-6-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-6-TEX-N-230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path><path id="MJX-6-TEX-N-22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path><path id="MJX-6-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-6-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-6-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-6-TEX-N-2061" d=""></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-6-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-6-TEX-N-230A"></use></g><g data-mml-node="mi" transform="translate(444, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1044, 0)"><g data-mml-node="mo"><use xlink:href="#MJX-6-TEX-N-2F"></use></g></g><g data-mml-node="mn" transform="translate(1544, 0)"><use xlink:href="#MJX-6-TEX-N-32"></use></g><g data-mml-node="mo" transform="translate(2044, 0)"><use xlink:href="#MJX-6-TEX-N-230B"></use></g><g data-mml-node="mo" transform="translate(2710.2, 0)"><use xlink:href="#MJX-6-TEX-N-22C5"></use></g><g data-mml-node="mi" transform="translate(3210.4, 0)"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(3973.4, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(4362.4, 0)"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(5640.4, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(5807.1, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(6407.1, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(7073.9, 0)"><use xlink:href="#MJX-6-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(8129.7, 0)"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(8892.7, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(9281.7, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(10048.3, 0)"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(11326.3, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(11493, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(12093, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<blockquote>
<p>實際上，build heap 步驟的複雜度可達到<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1752, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container>，可以看看 UMD 演算法課程 <a href="http://www.cs.umd.edu/~meesh/351/mount/lectures/lect14-heapsort-analysis-part.pdf">Lecture note的分析</a>。</p>
</blockquote>
<h3 id="sorting-sift-down">Sorting (sift down)</h3>
<p>講完了 heapify，就換到排序部分，所謂的排序其實就是利用 max-heap（或 min-heap）的最大值（最小值）會在首個元素的特性，與最後一個元素置換，完成排序，並將剩餘的部分透過 <strong>sift down</strong> 修正符合 heap order。所以總共需要做 n 次 sift down，複雜度為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.847ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4352.3 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-6-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-6-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-6-TEX-N-2061" d=""></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1918.7, 0)"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(3196.7, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(3363.3, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(3963.3, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<h3 id="sum-up">Sum up</h3>
<p>綜合這兩部分，可以看出 Sorting part 對複雜度有決定性影響，最佳複雜度為 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.847ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4352.3 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-6-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-6-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-6-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-6-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-6-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-6-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-6-TEX-N-2061" d=""></path><path id="MJX-6-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-6-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-6-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1918.7, 0)"><use xlink:href="#MJX-6-TEX-N-6C"></use><use xlink:href="#MJX-6-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-6-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mo" transform="translate(3196.7, 0)"><use xlink:href="#MJX-6-TEX-N-2061"></use></g><g data-mml-node="mi" transform="translate(3363.3, 0)"><use xlink:href="#MJX-6-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(3963.3, 0)"><use xlink:href="#MJX-6-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://alrightchiu.github.io/SecondRound/comparison-sort-heap-sortdui-ji-pai-xu-fa.html#bh">堆積排序法</a> <a href="https://rust-algo.club/sorting/heapsort/index.html">堆積排序 Heapsort</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>npm和npx</title>
    <url>/posts/4df1633d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="npm">npm</h1>
<p><strong>Node Package Manger</strong>，是<code>nodejs</code>的dependency/package manager，提供開發者install packages both globally and locally。 <a id="more"></a> 1. <strong>提供 online repository 可以 publish <code>open-source Node.js projects</code></strong> 2. <strong>提供 <code>CLI tool</code> 讓開發者 install packages and manage their versions and dependencies</strong> --- 如果想使用<code>npm</code> 去 run a package，必須在<code>package.json</code>檔案裡指定package。 當executables are installed via npm packages, npm creates links to them: 1. <strong>local installs have links created at the <code>./node_modules/.bin/ directory</code></strong> 2. <strong>global installs have links created from the global <code>bin/</code> directory (for example: <code>/usr/local/bin</code> on Linux or at <code>%AppData%/npm</code> on Windows)</strong></p>
<p>To execute a package with npm 有兩種方法: 1. 指定路徑 <pre class="line-numbers language-none"><code class="language-none">$ .&#x2F;node_modules&#x2F;.bin&#x2F;your-package<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 2. adding it into your package.json file in the scripts section <pre class="line-numbers language-none"><code class="language-none">&#123;
  &quot;name&quot;: &quot;your-application&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;scripts&quot;: &#123;
    &quot;your-package&quot;: &quot;your-package&quot;
  &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 接下來就可以 run the script using npm run: <pre class="line-numbers language-none"><code class="language-none">$ npm run your-package<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> <strong>以上就是使用<code>npm</code> run a package麻煩的地方。</strong> 所以接下來介紹<code>npx</code>。</p>
<h1 id="npx">npx</h1>
<p>npm只要更新到<strong>npm@5.2.0</strong>後，就會多出一個npx指令。</p>
<h2 id="npx使用情況">npx使用情況:</h2>
<h3 id="run-a-locally-installed-package-easily-如果想要執行-locally-installed-package只需要type-npx會檢查local或path裡是否存在command-or-package的binaries有的話便會執行">*Run a locally installed package easily 如果想要執行 locally installed package，只需要type: <pre class="line-numbers language-none"><code class="language-none">$ npx your-package<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> npx會檢查local或<code>$PATH</code>裡是否存在<code>&lt;command&gt;</code> or <code>&lt;package&gt;</code>的binaries，有的話便會執行。</h3>
<h3 id="execute-packages-that-are-not-previously-installed-使用-npx-命令他會安裝在臨時安裝包上等到項目初始化完成後就刪除不用全局性的安裝避免被汙染">*Execute packages that are not previously installed 使用 npx 命令，他會安裝在臨時安裝包上，等到項目初始化完成後就刪除，不用全局性的安裝，避免被汙染。</h3>
<h3 id="test-different-package-versions-npx-makes-it-extremely-easy-to-test-different-versions-of-a-node.js-package-or-module-以下是示範install-the-create-react-app-package-and-test-out-an-upcoming-version">*Test different package versions npx makes it extremely easy to test different versions of a Node.js package or module。 以下是示範install the <code>create-react-app</code> package and test out an upcoming version。 <pre class="line-numbers language-none"><code class="language-none">$ npm v create-react-app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> /posts/4df1633d/npx_create-react-app.jpg</h3>
<p>Let’s use <code>npx</code> to try out the <strong>next</strong> dist tag of <strong>create-react-app</strong> which will create the app inside a sandbox directory. <pre class="line-numbers language-none"><code class="language-none">$ npx create-react-app@next sandbox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> <code>npx</code>會暫時install the next version的create-react-app，然後執行以搭建該應用並安裝其dependencies。 安裝好後，我們可以進入資料夾並且執行<code>start</code> command，它將在您的默認瀏覽器窗口中自動打開React應用。 <pre class="line-numbers language-none"><code class="language-none">$ cd sandbox
$ npm start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> /posts/4df1633d/react-app.jpg</p>
<h3 id="run-code-directly-from-github-在terminal輸入-可以看到輸出yay-gist">*Run code directly from GitHub 在terminal輸入 <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ npx https:&#x2F;&#x2F;gist.github.com&#x2F;yu-shin&#x2F;6e4b9d49ec00cc9b219ab6bfe72309ab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> /posts/4df1633d/npx_github.jpg 可以看到輸出yay gist</h3>
<h3 id="bonus-round-shell-auto-fallback-待更新...">*Bonus Round: shell auto-fallback <strong>待更新...</strong></h3>
<h1 id="參考資料">參考資料</h1>
<ol type="1">
<li><a href="https://blog.npmjs.org/post/162869356040/introducing-npx-an-npm-package-runner">npmjs</a></li>
<li><a href="https://medium.com/itsems-frontend/whats-npx-e83400efe7f8">npx 是什麼? 跟 npm 差在哪?</a></li>
<li><a href="https://medium.com/@hot50773/npx-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-c9c6074c9a64">用 npx 代替 npm run xxx – 以套件 mocha 為例</a></li>
<li><a href="https://www.freecodecamp.org/news/npm-vs-npx-whats-the-difference/">npm vs npx — What’s the Difference?</a></li>
<li><a href="https://docs.npmjs.com/">npm的Docs</a></li>
</ol>
]]></content>
      <tags>
        <tag>nodejs</tag>
        <tag>npm</tag>
        <tag>npx</tag>
        <tag>haveibeenpwned</tag>
        <tag>LastPass</tag>
        <tag>1Password</tag>
      </tags>
  </entry>
  <entry>
    <title>Quick Sort</title>
    <url>/posts/932bcef/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="quick-sort">Quick Sort</h1>
<p><strong>快速排序 (Quick Sort)</strong> 的想法是說，先找一個基準點，然後派兩個代理人分別從資料的兩邊開始往中間找，如果右邊找到一個值比基準點小，左邊找到一個值比基準點大，就讓他們互換。反覆找並互換，直到兩個人相遇。然後再將相遇的點跟基準點互換，第一輪結束。 接下來再分別從兩邊資料做子循環，但做法跟上面一樣，這就用到了遞迴的概念。 <a id="more"></a></p>
<img src="/posts/932bcef/%E4%BA%94%E5%80%8Bsort.jpg" class="">
<h2 id="section"><img src="/posts/932bcef/%E6%AF%94%E8%BC%83%E5%9C%96.jpg" class=""></h2>
<p>假設我們現在有一筆班上的成績想要排序： <code>data = [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]</code> ## 1.先寫出遞迴函數架構 <pre class="line-numbers language-python" data-language="python"><code class="language-python">def quicksort(data, left, right):
    # 遞迴結束點
    if left &gt;&#x3D; right :
        return    
    # 左右指標指著
    i &#x3D; left
    j &#x3D; right
    # 基準點
    key &#x3D; data[left]
    # 迴圈左右夾
    # code<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> ## 2.由左(右)開始找出大(小)於基準點的值 <pre class="line-numbers language-python" data-language="python"><code class="language-python">while i !&#x3D; j:
    while data[j] &gt; key and i &lt; j:
        j -&#x3D; 1
    # 注意&quot;&lt;&#x3D;&quot;
    while data[i] &lt;&#x3D; key and i &lt; j:
        i +&#x3D; 1
    # 如果兩者還未相遇
    if i &lt; j:
        data[i], data[j] &#x3D; data[i], data[j]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> ## 3.相遇點和基準點對調 <pre class="line-numbers language-python" data-language="python"><code class="language-python">data[left], data[i] &#x3D; data[i], data[left]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> ## 4.左右遞迴下去 <pre class="line-numbers language-python" data-language="python"><code class="language-python">quicksort(data, left, i-1)
quicksort(data, i+1, right)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> ## 5.完整程式碼 <strong>時間複雜度：Ｏ(NlogN)</strong> 範例一： <pre class="line-numbers language-python" data-language="python"><code class="language-python">data &#x3D; [89, 34, 23, 78, 67, 100, 66, 29, 79, 55, 78, 88, 92, 96, 96, 23]

def quicksort(data, left, right): # 輸入資料，和從兩邊開始的位置
    if left &gt;&#x3D; right :            # 如果左邊大於右邊，就跳出function
        return

    i &#x3D; left                      # 左邊的代理人
    j &#x3D; right                     # 右邊的代理人
    key &#x3D; data[left]                 # 基準點

    while i !&#x3D; j:                  
        while data[j] &gt; key and i &lt; j:   # 從右邊開始找，找比基準點小的值
            j -&#x3D; 1
        while data[i] &lt;&#x3D; key and i &lt; j:  # 從左邊開始找，找比基準點大的值
            i +&#x3D; 1
        if i &lt; j:                        # 當左右代理人沒有相遇時，互換值
            data[i], data[j] &#x3D; data[j], data[i] 

    # 將基準點歸換至代理人相遇點
    data[left] &#x3D; data[i] 
    data[i] &#x3D; key

    quicksort(data, left, i-1)   # 繼續處理較小部分的子循環
    quicksort(data, i+1, right)  # 繼續處理較大部分的子循環

quicksort(data, 0, len(data)-1)
print(data)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 範例二： <pre class="line-numbers language-python" data-language="python"><code class="language-python">def quick_sort(collection: list) -&gt; list:
    &quot;&quot;&quot;A pure Python implementation of quick sort algorithm
    :param collection: a mutable collection of comparable items
    :return: the same collection ordered by ascending
    Examples:
    &gt;&gt;&gt; quick_sort([0, 5, 3, 2, 2])
    [0, 2, 2, 3, 5]
    &gt;&gt;&gt; quick_sort([])
    []
    &gt;&gt;&gt; quick_sort([-2, 5, 0, -45])
    [-45, -2, 0, 5]
    &quot;&quot;&quot;
    if len(collection) &lt; 2:
        return collection
    pivot &#x3D; collection.pop()  # Use the last element as the first pivot
    greater &#x3D; []  # All elements greater than pivot
    lesser &#x3D; []  # All elements less than or equal to pivot
    for element in collection:
        (greater if element &gt; pivot else lesser).append(element)
    return quick_sort(lesser) + [pivot] + quick_sort(greater)


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    unsorted &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]
    print(quick_sort(unsorted))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 範例三： <pre class="line-numbers language-python" data-language="python"><code class="language-python">def quick_sort(data: list) -&gt; list:
    &quot;&quot;&quot;
    &gt;&gt;&gt; for data in ([2, 1, 0], [2.2, 1.1, 0], &quot;quick_sort&quot;):
    ...     quick_sort(data) &#x3D;&#x3D; sorted(data)
    True
    True
    True
    &quot;&quot;&quot;
    if len(data) &lt;&#x3D; 1:
        return data
    else:
        return (
            quick_sort([e for e in data[1:] if e &lt;&#x3D; data[0]])
            + [data[0]]
            + quick_sort([e for e in data[1:] if e &gt; data[0]])
        )


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    import doctest

    doctest.testmod()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <code>data = [23, 23, 29, 34, 55, 66, 67, 78, 78, 79, 88, 89, 92, 96, 96, 100]</code> 範例四: random選擇index當成pivot，然後再和最左或最右的數交換後進行normal quick sort。 <pre class="line-numbers language-python" data-language="python"><code class="language-python">import random


def partition(A, left_index, right_index):
    pivot &#x3D; A[left_index]
    i &#x3D; left_index + 1
    for j in range(left_index + 1, right_index):
        if A[j] &lt; pivot:
            A[j], A[i] &#x3D; A[i], A[j]
            i +&#x3D; 1
    A[left_index], A[i - 1] &#x3D; A[i - 1], A[left_index]
    return i - 1


def quick_sort_random(A, left, right):
    if left &lt; right:
        pivot &#x3D; random.randint(left, right - 1)
        A[pivot], A[left] &#x3D; (
            A[left],
            A[pivot],
        )  # switches the pivot with the left most bound
        pivot_index &#x3D; partition(A, left, right)
        quick_sort_random(
            A, left, pivot_index
        )  # recursive quicksort to the left of the pivot point
        quick_sort_random(
            A, pivot_index + 1, right
        )  # recursive quicksort to the right of the pivot point


def main():
    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    arr &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]

    quick_sort_random(arr, 0, len(arr))

    print(arr)


if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    main()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 範例五: 此方法的圖示可參考下圖(唯一差別是圖中把right當成pivot): <img src="/posts/932bcef/quicksort_3group.png" class=""> 詳細請參考<a href="https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/linear-time-partitioning">Linear-time partitioning</a> <pre class="line-numbers language-python" data-language="python"><code class="language-python">def quick_sort_3partition(sorting: list, left: int, right: int) -&gt; None:
    if right &lt;&#x3D; left:
        return
    a &#x3D; i &#x3D; left
    b &#x3D; right
    pivot &#x3D; sorting[left]
    while i &lt;&#x3D; b:
        if sorting[i] &lt; pivot:
            sorting[a], sorting[i] &#x3D; sorting[i], sorting[a]
            a +&#x3D; 1
            i +&#x3D; 1
        elif sorting[i] &gt; pivot:
            sorting[b], sorting[i] &#x3D; sorting[i], sorting[b]
            b -&#x3D; 1
        else:
            i +&#x3D; 1
    quick_sort_3partition(sorting, left, a - 1)
    quick_sort_3partition(sorting, b + 1, right)

if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    import doctest

    doctest.testmod(verbose&#x3D;True)

    user_input &#x3D; input(&quot;Enter numbers separated by a comma:\n&quot;).strip()
    unsorted &#x3D; [int(item) for item in user_input.split(&quot;,&quot;)]
    quick_sort_3partition(unsorted, 0, len(unsorted) - 1)
    print(unsorted)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> # 與Merge sort差別 和merge sort一樣，quick sort也是使用divide-and-conquer。但是不一樣的是，merge sort在divide階段幾乎沒做什事情，真正花時間的在combine階段。而quick sort則是相反，divide花最多時間，而combine則沒做什事情。</p>
<h1 id="時間複雜度分析">時間複雜度分析</h1>
<p>為什麼會有差異？來自於基準點pivot的選擇(partition) ## Worst-case 當剛好每次pivot都選到該array最大或最小數時，如下圖。 <img src="/posts/932bcef/quick_tree1.png" class=""> 加總起來後時間複雜度為<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="12.841ex" height="3.15ex" role="img" focusable="false" viewBox="0 -1047.1 5675.8 1392.1" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-13-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path><path id="MJX-13-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-13-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-13-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-13-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-13-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-13-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-13-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-13-TEX-I-1D450"></use></g><g data-mml-node="mo" transform="translate(433, 0)"><use xlink:href="#MJX-13-TEX-N-28"></use></g><g data-mml-node="mfrac" transform="translate(822, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-13-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(600, 0)"><use xlink:href="#MJX-13-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(989, 0)"><use xlink:href="#MJX-13-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1589, 0)"><use xlink:href="#MJX-13-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(2367, 0)"><use xlink:href="#MJX-13-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2867, 0)"><use xlink:href="#MJX-13-TEX-N-29"></use></g></g><g data-mml-node="mn" transform="translate(1194.4, -345) scale(0.707)"><use xlink:href="#MJX-13-TEX-N-32"></use></g><rect width="2502.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3786.6, 0)"><use xlink:href="#MJX-13-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(4786.8, 0)"><use xlink:href="#MJX-13-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(5286.8, 0)"><use xlink:href="#MJX-13-TEX-N-29"></use></g></g></g></svg></mjx-container>，所以為<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="5.791ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 2559.6 1083.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-13-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-13-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-13-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-13-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-13-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-13-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-13-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1167, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-13-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, 363) scale(0.707)"><use xlink:href="#MJX-13-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2170.6, 0)"><use xlink:href="#MJX-13-TEX-N-29"></use></g></g></g></svg></mjx-container> ## best case 最好的情況就是剛好把subarray分為一半(因array個數為奇數偶數而誤差1以內都沒差)，如下圖。 <img src="/posts/932bcef/quick_tree2.png" class=""> 和merge sort一樣，時間複雜度為:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.999ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4419.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-12-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-12-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-12-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-12-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-12-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-12-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-12-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-12-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1767, 0)"><use xlink:href="#MJX-12-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2065, 0)"><use xlink:href="#MJX-12-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(2550, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D454"></use></g><g data-mml-node="mn" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-12-TEX-N-32"></use></g></g><g data-mml-node="mi" transform="translate(3430.6, 0)"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4030.6, 0)"><use xlink:href="#MJX-12-TEX-N-29"></use></g></g></g></svg></mjx-container> ## average case 這裡直接說複雜度為:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.999ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4419.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-N-398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path><path id="MJX-11-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-11-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-11-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-11-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-11-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-11-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-11-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-N-398"></use></g><g data-mml-node="mo" transform="translate(778, 0)"><use xlink:href="#MJX-11-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1167, 0)"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1767, 0)"><use xlink:href="#MJX-11-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2065, 0)"><use xlink:href="#MJX-11-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(2550, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D454"></use></g><g data-mml-node="mn" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-32"></use></g></g><g data-mml-node="mi" transform="translate(3430.6, 0)"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4030.6, 0)"><use xlink:href="#MJX-11-TEX-N-29"></use></g></g></g></svg></mjx-container> 因為推導需要複雜的數學運算，所以這裡只用簡單的例子說明(想像)一下。 假如每次分割剛好都分成n/4和3n/4，則tree如下圖： <img src="/posts/932bcef/quick_tree_average.png" class=""> 先看<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex" xmlns="http://www.w3.org/2000/svg" width="5.121ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 2263.6 899" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-11-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-11-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-11-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-11-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(298, 0)"><use xlink:href="#MJX-11-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(783, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D454"></use></g><g data-mml-node="mn" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-34"></use></g></g><g data-mml-node="mi" transform="translate(1663.6, 0)"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g></g></g></svg></mjx-container>這層，共有n個節點。這層以下的每層呢？都小於n個節點，所以花在partition的時間最多就cn time。整體來看tree的右腳高度(最長)為<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.135ex" xmlns="http://www.w3.org/2000/svg" width="10.435ex" height="2.831ex" role="img" focusable="false" viewBox="0 -750 4612.1 1251.5" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-10-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-10-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-10-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-10-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-10-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-10-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1752, 0)"><use xlink:href="#MJX-10-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2050, 0)"><use xlink:href="#MJX-10-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(2535, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D454"></use></g><g data-mml-node="TeXAtom" transform="translate(477, -257.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 394) scale(0.707)"><use xlink:href="#MJX-10-TEX-N-33"></use></g><g data-mml-node="mn" transform="translate(220, -345) scale(0.707)"><use xlink:href="#MJX-10-TEX-N-34"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mi" transform="translate(3623.1, 0)"><use xlink:href="#MJX-10-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4223.1, 0)"><use xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></svg></mjx-container>。現在已知數學式:對於所有的正數a,b和n <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.108ex" xmlns="http://www.w3.org/2000/svg" width="12.721ex" height="3.316ex" role="img" focusable="false" viewBox="0 -975.7 5622.7 1465.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-10-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-10-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-10-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-10-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-10-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-10-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-10-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(298, 0)"><use xlink:href="#MJX-10-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(783, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-10-TEX-I-1D44E"></use></g></g><g data-mml-node="mi" transform="translate(1684.1, 0)"><use xlink:href="#MJX-10-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2561.8, 0)"><use xlink:href="#MJX-10-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(3617.6, 0)"><g data-mml-node="mrow" transform="translate(220, 485) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(298, 0)"><use xlink:href="#MJX-10-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(783, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-10-TEX-I-1D44F"></use></g></g><g data-mml-node="mi" transform="translate(1613.3, 0)"><use xlink:href="#MJX-10-TEX-I-1D45B"></use></g></g><g data-mml-node="mrow" transform="translate(245.1, -345) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(298, 0)"><use xlink:href="#MJX-10-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(783, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-10-TEX-I-1D454"></use></g><g data-mml-node="mi" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-10-TEX-I-1D44F"></use></g></g><g data-mml-node="mi" transform="translate(1613.3, 0)"><use xlink:href="#MJX-10-TEX-I-1D44E"></use></g></g><rect width="1765.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container> 所以最後時間複雜度也是為：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="9.965ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4404.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-8-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-8-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-8-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-8-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-8-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path><path id="MJX-8-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path><path id="MJX-8-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-8-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763, 0)"><use xlink:href="#MJX-8-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152, 0)"><use xlink:href="#MJX-8-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(1752, 0)"><use xlink:href="#MJX-8-TEX-I-1D459"></use></g><g data-mml-node="mi" transform="translate(2050, 0)"><use xlink:href="#MJX-8-TEX-I-1D45C"></use></g><g data-mml-node="msub" transform="translate(2535, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-8-TEX-I-1D454"></use></g><g data-mml-node="mn" transform="translate(477, -150) scale(0.707)"><use xlink:href="#MJX-8-TEX-N-32"></use></g></g><g data-mml-node="mi" transform="translate(3415.6, 0)"><use xlink:href="#MJX-8-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4015.6, 0)"><use xlink:href="#MJX-8-TEX-N-29"></use></g></g></g></svg></mjx-container></p>
<h1 id="randomized-quicksort">Randomized quicksort</h1>
<p>基本做法就是隨機選擇一數然後跟left or right對調，接著和原本的quick sort一樣。 可以延伸一些議題。(不過不重要，簡單的可以參考<a href="https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/analysis-of-quicksort">Analysis of quicksort</a>最後一段)</p>
<h1 id="參靠資料">參靠資料</h1>
<p><a href="https://ithelp.ithome.com.tw/articles/10202330">快速排序法 (Quick Sort)</a> <a href="https://github.com/TheAlgorithms/Python/blob/master/sorts/quick_sort.py">Quick Sort</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort">Overview of quicksort</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/linear-time-partitioning">Linear-time partitioning</a> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/analysis-of-quicksort">Analysis of quicksort</a></p>
]]></content>
      <tags>
        <tag>資料結構與演算法</tag>
      </tags>
  </entry>
  <entry>
    <title>區塊鏈之始</title>
    <url>/posts/54c45e77/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言">前言</h3>
<p>一開始接觸加密貨幣大概是2019年初(比大家晚很多)，那時去網路上收了10幾張RX570和RX470回來組了兩台礦機。 我還記得當時硬體配備：<a id="more"></a> * CPU: intel G4600 * 主機板: ASUS B250礦板（可以插18張顯示卡），當時看網友魔改到能插21張XD * GPU: AMD RX470 RX570 * RAM: DDR4 美光 3000Hz 16G (這個有點奢侈，8G就夠) * SSD: 金士頓128G * POWER: 海盜船RM1000X 振華850W(說真的振華真的超耐操，前輩們統計操壞的電源發現振華故障率最低） * OS: Hive OS(linux) WIN10(剛開使用Hive，後面因為懶得設定就用WIN10)</p>
<h3 id="進入幣圈">進入幣圈</h3>
<p>2020四月是我人生第一次用法幣（台幣）買BTC Maicoin入金然後再轉到深度較佳的幣安 開始了我的炒幣之旅</p>
<h3 id="defi">Defi</h3>
<p>其實我也忘記我為什麼會接觸到Defi的，但當時看了一些文章（剛開始是動區，後面主要都是鏈聞），和<strong>區塊先生</strong>(受益良多) 還好四月進入Defi還不算晚，當時很多幣種都還在萌芽，幣價被炒高好幾倍，雖然我只是在二級市場（交易所）撿別人剩下的韭菜不過還好也是撈了一些 這時期最嘔的就是在<strong>uniswap</strong>空投（9月初）很早之前我就知道這個最大的去中心化交易所了（因為區塊先生一直推XD) 但是我當時是用安卓<em>Argent</em>錢包，當時我在使用<strong>snx</strong>和<strong>curve</strong>的時候想說兌換的量不大，使用argent裡面的交易對和uniswap匯差沒差很多（我算過）所以就沒領到空頭了QQ，當時UNI我還記得一路從3美被炒到一顆9美還12美，等於空頭<strong>400UNI = 台幣3萬~10萬</strong>，而且我還要自己買來炒QQ 題外話相同性質的代幣<strong>SUSHI</strong>我也玩過，後面主廚那場鬧劇真的是...害我賠了一堆錢，不過最近SUSHI有慾火重生的感覺了 當時主要就是寫小程式串接幣安的API然後進行比較像是剝頭皮式策略賺錢，後面雖然也有用技術性指標MACD RSI EMA去做即時交易，但是久了發現虛擬貨幣人為炒作真的太大了，指標都不太準 其實炒幣很吃消息面，常常項目方Twitter和Medium發個合作文或是進展文（反正就是利好消息），在那短短幾分內幣價會被炒高很多，所以我其實一直想寫爬蟲抓消息面（寫過爬蟲都知道不難），但我恨我自己真的就是懶... 現在都玩幣安合約居多，之前想過跳去FTX（一部分因為SBF信仰），但是老話一句，懶= =</p>
<h3 id="solidity">solidity</h3>
<p>其實一開始挖礦我就稍微有去研究ETH和ETH2.0想解決的問題，當時就知道智慧合約，我覺得這是一個很大的市場和創新所以對ETH有信仰 前陣子想學solidity,但是相關的書籍並不多 我想可能是因為這領域還太新的關係 之後再更新吧，未完待續...</p>
]]></content>
      <tags>
        <tag>日記</tag>
      </tags>
  </entry>
  <entry>
    <title>Binary Tree</title>
    <url>/posts/e0e2589a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="binary-tree-二元樹">Binary Tree (二元樹)</h1>
<ul>
<li><strong>Binary Tree 為具有 <code>≥ 0 個 nodes</code> 所構成的有限集合</strong>
<ul>
<li>Binary Tree可以為<mark class="label info">空的樹</mark></li>
<li>若不為空的樹，則具有 Root 及左, 右子樹，且左, 右子樹亦是 Binary Tree <img src="/posts/e0e2589a/bt1.jpg" class=""> <a id="more"></a></li>
</ul></li>
<li><strong>表示各 node 之 degree 介於 <code>0 與 2</code> 之間</strong></li>
<li><strong>左, 右子樹有<code>次序</code>之分</strong>
<ul>
<li>故又稱 <mark class="label info">Order Tree</mark> <img src="/posts/e0e2589a/bt2.jpg" class=""></li>
<li>一般樹的子樹不會去區分是左子樹、中子樹還是右子樹，∵ 可能的子樹型態很多</li>
</ul></li>
</ul>
<img src="/posts/e0e2589a/bt3.jpg" class="">
<p><strong>Tree 與 Binary Tree 之差異:</strong> <img src="/posts/e0e2589a/bt52.jpg" class=""></p>
<h2 id="二元樹之三個基本定理">二元樹之三個基本定理</h2>
<ol type="1">
<li>二元樹中，第 i 個 level 的 node 個數最多有 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="3.841ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1697.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-14-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-14-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-14-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-14-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-14-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-14-TEX-I-1D456"></use></g><g data-mml-node="mo" transform="translate(345, 0)"><use xlink:href="#MJX-14-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1123, 0)"><use xlink:href="#MJX-14-TEX-N-31"></use></g></g></g></g></g></svg></mjx-container></strong> 個</li>
<li>高 (深) 度為 H 的二元樹，其 node 個數最多有 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.562ex" height="2.099ex" role="img" focusable="false" viewBox="0 -846 2900.4 928" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-14-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-14-TEX-I-1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-14-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-14-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-14-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-14-TEX-I-1D43B"></use></g></g><g data-mml-node="mo" transform="translate(1400.1, 0)"><use xlink:href="#MJX-14-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2400.4, 0)"><use xlink:href="#MJX-14-TEX-N-31"></use></g></g></g></svg></mjx-container></strong> 個 <strong>( <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="13.989ex" height="2.271ex" role="img" focusable="false" viewBox="0 -846 6183.3 1003.7" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-13-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-13-TEX-I-1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-13-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-13-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-13-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-13-TEX-I-1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-13-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-13-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mn"><use xlink:href="#MJX-13-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-13-TEX-I-1D45A"></use></g><g data-mml-node="mi" transform="translate(878, 0)"><use xlink:href="#MJX-13-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(1407, 0)"><use xlink:href="#MJX-13-TEX-I-1D465"></use></g></g></g><g data-mml-node="mo" transform="translate(2227.1, 0)"><use xlink:href="#MJX-13-TEX-N-3D"></use></g><g data-mml-node="msup" transform="translate(3282.9, 0)"><g data-mml-node="mn"><use xlink:href="#MJX-13-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-13-TEX-I-1D43B"></use></g></g><g data-mml-node="mo" transform="translate(4683.1, 0)"><use xlink:href="#MJX-13-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(5683.3, 0)"><use xlink:href="#MJX-13-TEX-N-31"></use></g></g></g></svg></mjx-container> )</strong></li>
<li>非空二元樹若 leaf 個數為 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="2.27ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 1003.6 607.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-12-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-12-TEX-N-30"></use></g></g></g></g></svg></mjx-container></strong> 個，degree 為 2 的 node 個數為 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex" xmlns="http://www.w3.org/2000/svg" width="2.27ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1003.6 592" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-12-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-12-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-12-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-12-TEX-N-32"></use></g></g></g></g></svg></mjx-container></strong> 個，則 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="11.455ex" height="1.881ex" role="img" focusable="false" viewBox="0 -666 5063.1 831.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-11-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-11-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-11-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-11-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-11-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-30"></use></g></g><g data-mml-node="mo" transform="translate(1281.3, 0)"><use xlink:href="#MJX-11-TEX-N-3D"></use></g><g data-mml-node="msub" transform="translate(2337.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(3562.9, 0)"><use xlink:href="#MJX-11-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(4563.1, 0)"><use xlink:href="#MJX-11-TEX-N-31"></use></g></g></g></svg></mjx-container></strong></li>
</ol>
<p><strong>練習範例：</strong></p>
<ul>
<li>若有 15 個 leafs，則 degree 為 2 的 node 數 = ?
<ul>
<li>14 個</li>
</ul></li>
<li>若有 10 個 degree 為 2 的 nodes，則 leaf 個數 = ?
<ul>
<li>11 個</li>
</ul></li>
<li>若二元樹有 53 個 nodes，其中 degree 為 1 的 node 數有 22 個，則 leaf 個數 = ?
<ul>
<li>n = 53 = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="23.412ex" height="1.881ex" role="img" focusable="false" viewBox="0 -666 10348.2 831.6" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-11-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-11-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-11-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-11-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-11-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-11-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path><path id="MJX-11-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-11-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-30"></use></g></g><g data-mml-node="mo" transform="translate(1225.8, 0)"><use xlink:href="#MJX-11-TEX-N-2B"></use></g><g data-mml-node="msub" transform="translate(2226, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-31"></use></g></g><g data-mml-node="mo" transform="translate(3451.8, 0)"><use xlink:href="#MJX-11-TEX-N-2B"></use></g><g data-mml-node="msub" transform="translate(4452, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(5733.3, 0)"><use xlink:href="#MJX-11-TEX-N-21D2"></use></g><g data-mml-node="msub" transform="translate(7011.1, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-11-TEX-I-1D45B"></use></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><use xlink:href="#MJX-11-TEX-N-30"></use></g></g><g data-mml-node="mo" transform="translate(8292.4, 0)"><use xlink:href="#MJX-11-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(9348.2, 0)"><use xlink:href="#MJX-11-TEX-N-31"></use><use xlink:href="#MJX-11-TEX-N-36" transform="translate(500, 0)"></use></g></g></g></svg></mjx-container></li>
</ul></li>
</ul>
<h2 id="二元樹的種類">二元樹的種類</h2>
<h3 id="skewed-binary-tree-偏斜二元樹">Skewed Binary Tree (偏斜二元樹)</h3>
<ul>
<li><strong>Left-Skewed Binary Tree</strong>: 毎個 non-leaf node 皆只有<strong>左</strong>子節點 <img src="/posts/e0e2589a/bt5.jpg" class=""></li>
<li><strong>Right-Skewed Binary Tree</strong>: 毎個 non-leaf node 皆只有<strong>右</strong>子節點 <img src="/posts/e0e2589a/bt4.jpg" class=""></li>
<li>此類型的 tree 之高度 <strong>H</strong> 為節點個數 n</li>
</ul>
<h3 id="full-binary-tree-完滿二元樹">Full Binary Tree (完滿二元樹)</h3>
<p>具有<code>最多 Node 個數</code>的二元樹稱之</p>
<ul>
<li>即: <strong>高度</strong>為 H，其 <strong>node 數</strong>必為 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.562ex" height="2.099ex" role="img" focusable="false" viewBox="0 -846 2900.4 928" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-9-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-9-TEX-I-1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-9-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-9-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-9-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-9-TEX-I-1D43B"></use></g></g><g data-mml-node="mo" transform="translate(1400.1, 0)"><use xlink:href="#MJX-9-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2400.4, 0)"><use xlink:href="#MJX-9-TEX-N-31"></use></g></g></g></svg></mjx-container></strong></li>
<li>Full B.T. 下具有 n 個 nodes，其<strong>高度</strong>必為: <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.819ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4782 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-7-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-7-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-7-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-7-TEX-N-2061" d=""></path><path id="MJX-7-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-7-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-7-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-7-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-7-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-N-6C"></use><use xlink:href="#MJX-7-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-7-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mn" transform="translate(1278, -241.4) scale(0.707)"><use xlink:href="#MJX-7-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1681.6, 0)"><use xlink:href="#MJX-7-TEX-N-2061"></use></g><g data-mml-node="mo" transform="translate(1681.6, 0)"><use xlink:href="#MJX-7-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2070.6, 0)"><use xlink:href="#MJX-7-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(2892.8, 0)"><use xlink:href="#MJX-7-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(3893, 0)"><use xlink:href="#MJX-7-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(4393, 0)"><use xlink:href="#MJX-7-TEX-N-29"></use></g></g></g></svg></mjx-container></strong> <img src="/posts/e0e2589a/bt6.jpg" class=""></li>
</ul>
<h3 id="complete-binary-tree-完整二元樹">Complete Binary Tree (完整二元樹)</h3>
<p>若二元樹<strong>高度</strong>為 H，<strong>node</strong> 個數為 n，則</p>
<ul>
<li><strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="18.663ex" height="2.099ex" role="img" focusable="false" viewBox="0 -846 8249.1 928" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-7-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-7-TEX-I-1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-7-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-7-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-7-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-7-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-7-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(500, 363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use xlink:href="#MJX-7-TEX-I-1D43B"></use></g><g data-mml-node="mo" transform="translate(888, 0)"><use xlink:href="#MJX-7-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1666, 0)"><use xlink:href="#MJX-7-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(2359.4, 0)"><use xlink:href="#MJX-7-TEX-N-3C"></use></g><g data-mml-node="mi" transform="translate(3415.1, 0)"><use xlink:href="#MJX-7-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(4292.9, 0)"><use xlink:href="#MJX-7-TEX-N-3C"></use></g><g data-mml-node="msup" transform="translate(5348.7, 0)"><g data-mml-node="mn"><use xlink:href="#MJX-7-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-7-TEX-I-1D43B"></use></g></g><g data-mml-node="mo" transform="translate(6748.8, 0)"><use xlink:href="#MJX-7-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(7749.1, 0)"><use xlink:href="#MJX-7-TEX-N-31"></use></g></g></g></svg></mjx-container></strong></li>
<li>n 個 node 之<strong>編號</strong>與<strong>高度</strong> H 的 full binary tree 之前的 n 個 node <strong>編號一一對應</strong>，不能跳號 <img src="/posts/e0e2589a/bt7.jpg" class=""></li>
<li>Complete B.T. 下具有 n 個 <strong>nodes</strong>，其<strong>高度</strong> H 必為: <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="12.828ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5670 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-N-2308" d="M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z"></path><path id="MJX-5-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-5-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-5-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-N-2061" d=""></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-5-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-5-TEX-N-2309" d="M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-5-TEX-N-2308"></use></g><g data-mml-node="msub" transform="translate(444, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-N-6C"></use><use xlink:href="#MJX-5-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-5-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mn" transform="translate(1278, -241.4) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2125.6, 0)"><use xlink:href="#MJX-5-TEX-N-2061"></use></g><g data-mml-node="mo" transform="translate(2125.6, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(2514.6, 0)"><use xlink:href="#MJX-5-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(3336.8, 0)"><use xlink:href="#MJX-5-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(4337, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(4837, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(5226, 0)"><use xlink:href="#MJX-5-TEX-N-2309"></use></g></g></g></svg></mjx-container></strong></li>
<li>假設 Complete B.T. 有 n 個節點 (編號 1~n)，其中某個節點其編號為 i，則:
<ul>
<li>其左兒子編號為 <strong>2i</strong>； 若 2i &gt; n，則左兒子不存在</li>
<li>其右兒子編號為 <strong>2i+1</strong>； 若 2i+1 &gt; n，則右兒子不存在</li>
<li>其父點編號為 <strong>[<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.729ex" role="img" focusable="false" viewBox="0 -861.4 793.6 1206.4" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(274.8, 394) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D456"></use></g><g data-mml-node="mn" transform="translate(220, -345) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>]</strong> ( [ ]: 無條件捨位取整數 )； 若 [<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.729ex" role="img" focusable="false" viewBox="0 -861.4 793.6 1206.4" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(274.8, 394) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D456"></use></g><g data-mml-node="mn" transform="translate(220, -345) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>] &lt; 1，則父節點不存在</li>
</ul></li>
</ul>
<p><strong>範例：</strong></p>
<ul>
<li>有一個 6 Nodes 的 Complete B.T.：
<ul>
<li>Node 5 的 Parent 為何？ 2</li>
<li>Node 3 的 Sibling 為何？右子點為何？ 2 , NULL</li>
<li>Node 2 的左右子點和父點編號為何？ 4, 5, 1</li>
<li>Node 4 的 Grand Parent 為何？ [<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.729ex" role="img" focusable="false" viewBox="0 -861.4 793.6 1206.4" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-5-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(274.8, 394) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D456"></use></g><g data-mml-node="mn" transform="translate(220, -345) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-34"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>] <img src="/posts/e0e2589a/bt8.jpg" class=""></li>
</ul></li>
</ul>
<p><strong>範例：</strong></p>
<ul>
<li>有一個 Complete B.T.，共有 1000 個節點 (編號：1~1000)
<ul>
<li>The number of “Last parent” = 500</li>
<li>Node 256 的 Grand Parent = 64</li>
<li>Node 347 的 Sibling = 346</li>
<li>Node 450 的左子點 = 900, 右子點 = 901, 父點 = 225</li>
<li>Node 600 的 左子點 = 不存在</li>
<li>樹高 = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="15.995ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7070 1000" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-N-2308" d="M174 734Q178 746 190 750H298H369Q400 750 411 747T422 730T411 713T372 709Q365 709 345 709T310 710H214V-235Q206 -248 196 -250Q192 -250 189 -249T184 -247T180 -244T178 -241T176 -237T174 -234V734Z"></path><path id="MJX-5-TEX-N-6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path id="MJX-5-TEX-N-6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"></path><path id="MJX-5-TEX-N-67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-N-2061" d=""></path><path id="MJX-5-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-5-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-5-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-5-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-5-TEX-N-2309" d="M21 717T21 730T32 746T75 750H147H256Q266 742 269 735V-235Q262 -248 251 -250Q247 -250 244 -249T239 -247T235 -244T233 -241T231 -237T229 -234V710H133Q119 710 99 710T71 709Q43 709 32 713Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-5-TEX-N-2308"></use></g><g data-mml-node="msub" transform="translate(444, 0)"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-N-6C"></use><use xlink:href="#MJX-5-TEX-N-6F" transform="translate(278, 0)"></use><use xlink:href="#MJX-5-TEX-N-67" transform="translate(778, 0)"></use></g><g data-mml-node="mn" transform="translate(1278, -241.4) scale(0.707)"><use xlink:href="#MJX-5-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(2125.6, 0)"><use xlink:href="#MJX-5-TEX-N-2061"></use></g><g data-mml-node="mo" transform="translate(2125.6, 0)"><use xlink:href="#MJX-5-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(2514.6, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use><use xlink:href="#MJX-5-TEX-N-30" transform="translate(500, 0)"></use><use xlink:href="#MJX-5-TEX-N-30" transform="translate(1000, 0)"></use><use xlink:href="#MJX-5-TEX-N-30" transform="translate(1500, 0)"></use></g><g data-mml-node="mo" transform="translate(4736.8, 0)"><use xlink:href="#MJX-5-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(5737, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(6237, 0)"><use xlink:href="#MJX-5-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(6626, 0)"><use xlink:href="#MJX-5-TEX-N-2309"></use></g></g></g></svg></mjx-container> = 10</li>
<li>有 500 個葉子節點</li>
<li>Degree 為 1 的 Node 數有 1 個, 編號為 500</li>
</ul></li>
</ul>
<h2 id="binary-tree-structure">Binary Tree Structure</h2>
<h3 id="利用-array">利用 Array</h3>
<p><strong>做法:</strong></p>
<ul>
<li>假設此二元樹的<strong>高度</strong>為 H，則準備一個大小為 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="6.562ex" height="2.099ex" role="img" focusable="false" viewBox="0 -846 2900.4 928" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-I-1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-5-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-5-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D43B"></use></g></g><g data-mml-node="mo" transform="translate(1400.1, 0)"><use xlink:href="#MJX-5-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2400.4, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use></g></g></g></svg></mjx-container> 的一維陣列 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="14.054ex" height="2.48ex" role="img" focusable="false" viewBox="0 -846 6211.7 1096" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path><path id="MJX-5-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-5-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-5-TEX-N-22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path><path id="MJX-5-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-5-TEX-I-1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-5-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-5-TEX-N-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><use xlink:href="#MJX-5-TEX-I-1D434"></use></g><g data-mml-node="mo" transform="translate(750, 0)"><use xlink:href="#MJX-5-TEX-N-5B"></use></g><g data-mml-node="mn" transform="translate(1028, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1694.7, 0)"><use xlink:href="#MJX-5-TEX-N-22EF"></use></g><g data-mml-node="msup" transform="translate(3033.3, 0)"><g data-mml-node="mn"><use xlink:href="#MJX-5-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-5-TEX-I-1D43B"></use></g></g><g data-mml-node="mo" transform="translate(4433.5, 0)"><use xlink:href="#MJX-5-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(5433.7, 0)"><use xlink:href="#MJX-5-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(5933.7, 0)"><use xlink:href="#MJX-5-TEX-N-5D"></use></g></g></g></svg></mjx-container></strong> 以相對於 Full B.T. 之節點編號，並將之<strong>一一對應</strong>填入</li>
</ul>
<p><strong>例:</strong></p>
<p>此二元樹的<strong>高度</strong>為 3，則準備一個大小為 <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="10.089ex" height="2.071ex" role="img" focusable="false" viewBox="0 -833.2 4459.6 915.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path id="MJX-4-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-4-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-4-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-4-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-33"></use></g></g><g data-mml-node="mo" transform="translate(1125.8, 0)"><use xlink:href="#MJX-4-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2126, 0)"><use xlink:href="#MJX-4-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2903.8, 0)"><use xlink:href="#MJX-4-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(3959.6, 0)"><use xlink:href="#MJX-4-TEX-N-37"></use></g></g></g></svg></mjx-container></strong> 的一維陣列 <img src="/posts/e0e2589a/bt9.jpg" class=""></p>
<p><strong>優點:</strong></p>
<ul>
<li>對於 Full B.T. 之儲存，完全<strong>沒有</strong>浪費空間</li>
<li><strong>易</strong>於取得某 node 之左、右子節點及父節點之資料
<ul>
<li>當某個節點其編號為 i，則:
<ul>
<li>其左兒子編號為 <strong>2i</strong>，若 2i &gt; n，則左兒子不存在</li>
<li>其右兒子編號為 <strong>2i+1</strong>，若 2i+1 &gt; n，則右兒子不存在</li>
<li>其父點編號為 <strong>[<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.729ex" role="img" focusable="false" viewBox="0 -861.4 793.6 1206.4" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(274.8, 394) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g><g data-mml-node="mn" transform="translate(220, -345) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>]</strong> ( [ ]: 無條件捨位取整數 )； 若 [<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="1.795ex" height="2.729ex" role="img" focusable="false" viewBox="0 -861.4 793.6 1206.4" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(274.8, 394) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D456"></use></g><g data-mml-node="mn" transform="translate(220, -345) scale(0.707)"><use xlink:href="#MJX-4-TEX-N-32"></use></g><rect width="553.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>] &lt; 1，則父節點不存在</li>
</ul></li>
</ul></li>
</ul>
<p><strong>缺點：</strong></p>
<ul>
<li><strong>節點增刪不易</strong>
<ul>
<li>∵空間要費力移動。若空間不夠用時，需重新宣告 Array</li>
</ul></li>
<li><p>對於 <strong>Skewed B.T.</strong> 之儲存，極度浪費空間</p></li>
<li>為何浪費空間？
<ul>
<li>假設有一個<strong>高度</strong>為 k 的 <code>Skewed B.T.</code>，則
<ul>
<li>需準備一個具有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="5.975ex" height="2.117ex" role="img" focusable="false" viewBox="0 -853.7 2640.8 935.7" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-4-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-4-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D458"></use></g></g><g data-mml-node="mo" transform="translate(1140.6, 0)"><use xlink:href="#MJX-4-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2140.8, 0)"><use xlink:href="#MJX-4-TEX-N-31"></use></g></g></g></svg></mjx-container> 個空間之 Array</li>
<li>實際會用到 k 個空間</li>
<li>∴ <strong>會浪費 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="9.919ex" height="2.117ex" role="img" focusable="false" viewBox="0 -853.7 4384.3 935.7" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-4-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-4-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-4-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use xlink:href="#MJX-4-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(500, 363) scale(0.707)"><use xlink:href="#MJX-4-TEX-I-1D458"></use></g></g><g data-mml-node="mo" transform="translate(1140.6, 0)"><use xlink:href="#MJX-4-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(2140.8, 0)"><use xlink:href="#MJX-4-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2863.1, 0)"><use xlink:href="#MJX-4-TEX-N-2212"></use></g><g data-mml-node="mi" transform="translate(3863.3, 0)"><use xlink:href="#MJX-4-TEX-I-1D458"></use></g></g></g></svg></mjx-container> 個空間</strong></li>
</ul></li>
<li>如: 有一個 k = 10 的 Skewed B.T.，需為它準備一個空間大小為 1023 的 Array，但實際卻只用上 10 個空間</li>
</ul></li>
</ul>
<h3 id="利用-link-list">利用 Link List</h3>
<p><strong>節點結構設計如下：</strong> <img src="/posts/e0e2589a/bt10.jpg" class=""> <pre class="line-numbers language-none"><code class="language-none">Node
  leftSubTree &lt;pointer to Node&gt;
  data &lt;dataType&gt;
  rithtSubTree &lt;pointer to Node&gt;
End Node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> <img src="/posts/e0e2589a/bt11.jpg" class=""></p>
<ul>
<li><strong>優點:</strong>
<ul>
<li>對於 Skewed B.T. 之儲存較 Array <strong>節省空間</strong></li>
<li>Node 之<strong>增刪容易</strong></li>
</ul></li>
<li><strong>缺點：</strong>
<ul>
<li><strong>不易</strong>取得父點
<ul>
<li>∵ 指標只用以指向兩個孩子</li>
</ul></li>
<li>Link 空間<strong>仍浪費約一半</strong>
<ul>
<li>2n 個指標，n-1 個 node 頭上有指標</li>
</ul></li>
</ul></li>
<li>分析: 假設 tree 有 n 個 <strong>nodes</strong>, tree <strong>degree</strong> 為 k
<ul>
<li><strong>總共</strong>的 link 空間為： <strong>n <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0.02ex" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.09ex" role="img" focusable="false" viewBox="0 -491 778 482" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-D7"></use></g></g></g></svg></mjx-container> k</strong></li>
<li><strong>有用</strong>的 link 空間 (即: link ≠ nil): <strong>n-1</strong></li>
<li><strong>浪費</strong>的 link 空間 (即: link = nil): <strong>nk - (n-1)</strong></li>
<li><strong>浪費比例</strong>： <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.798ex" xmlns="http://www.w3.org/2000/svg" width="26.313ex" height="3.167ex" role="img" focusable="false" viewBox="0 -1047.1 11630.2 1399.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-3-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path><path id="MJX-3-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-3-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-3-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-3-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-3-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-3-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-3-TEX-N-2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(600, 0)"><use xlink:href="#MJX-3-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(1121, 0)"><use xlink:href="#MJX-3-TEX-N-2212"></use></g><g data-mml-node="mrow" transform="translate(1899, 0)"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389, 0)"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(989, 0)"><use xlink:href="#MJX-3-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1767, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2267, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g></g><g data-mml-node="mrow" transform="translate(1434.1, -345) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(600, 0)"><use xlink:href="#MJX-3-TEX-I-1D458"></use></g></g><rect width="3420.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3938.6, 0)"><use xlink:href="#MJX-3-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(4994.4, 0)"><g data-mml-node="mrow" transform="translate(220, 516.8) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="mrow" transform="translate(600, 0)"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(389, 0)"><use xlink:href="#MJX-3-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(910, 0)"><use xlink:href="#MJX-3-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1688, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2188, 0)"><use xlink:href="#MJX-3-TEX-N-29"></use></g></g><g data-mml-node="mo" transform="translate(3177, 0)"><use xlink:href="#MJX-3-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(3955, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g></g><g data-mml-node="mrow" transform="translate(1398.7, -345) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D45B"></use></g><g data-mml-node="mi" transform="translate(600, 0)"><use xlink:href="#MJX-3-TEX-I-1D458"></use></g></g><rect width="3350.2" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(8862.4, 0)"><use xlink:href="#MJX-3-TEX-N-2248"></use></g><g data-mml-node="mfrac" transform="translate(9918.1, 0)"><g data-mml-node="mrow" transform="translate(220, 398) scale(0.707)"><g data-mml-node="mi"><use xlink:href="#MJX-3-TEX-I-1D458"></use></g><g data-mml-node="mo" transform="translate(521, 0)"><use xlink:href="#MJX-3-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1299, 0)"><use xlink:href="#MJX-3-TEX-N-31"></use></g></g><g data-mml-node="mi" transform="translate(671.8, -345) scale(0.707)"><use xlink:href="#MJX-3-TEX-I-1D458"></use></g><rect width="1472.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>
<ol type="1">
<li>k 越<code>多</code>，浪費比例越<code>高</code>
<ul>
<li>若k=100，則浪費高達99%</li>
</ul></li>
<li>為避免上述問題，則 k 應<code>越小越好</code>。若：
<ul>
<li>k = 1 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-21D2"></use></g></g></g></svg></mjx-container> 鏈結串列(∵ 不是 tree ∴ 不予討論)</li>
<li>k = 2 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.054ex" xmlns="http://www.w3.org/2000/svg" width="2.262ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 1000 549" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-N-21D2" d="M580 514Q580 525 596 525Q601 525 604 525T609 525T613 524T615 523T617 520T619 517T622 512Q659 438 720 381T831 300T927 263Q944 258 944 250T935 239T898 228T840 204Q696 134 622 -12Q618 -21 615 -22T600 -24Q580 -24 580 -17Q580 -13 585 0Q620 69 671 123L681 133H70Q56 140 56 153Q56 168 72 173H725L735 181Q774 211 852 250Q851 251 834 259T789 283T735 319L725 327H72Q56 332 56 347Q56 360 70 367H681L671 377Q638 412 609 458T580 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><use xlink:href="#MJX-3-TEX-N-21D2"></use></g></g></g></svg></mjx-container> <strong>浪費比例最低</strong></li>
</ul></li>
</ol></li>
</ul></li>
</ul>
<h2 id="binary-tree-traversal-二元樹追蹤">Binary Tree Traversal (二元樹追蹤)</h2>
<p><strong>二元樹追蹤主要是拜訪二元樹中毎個 Node 資料各一次</strong></p>
<h3 id="breadth-first-traversals-廣度優先追蹤">Breadth-first Traversals (廣度優先追蹤)</h3>
<p><strong>由根節點出發，以水平方向由左到右處理，將所有同一 level 之節點拜訪完畢後，再選擇下一 level 之所有節點加以處理</strong> <img src="/posts/e0e2589a/bt12.jpg" class=""></p>
<h3 id="depth-first-traversals-深度優先追蹤">Depth-first Traversals (深度優先追蹤)</h3>
<p>一個二元樹包括了根節點 (Root)、左子樹 (Left subtree) 與右子樹 (Right subtree)，因此可能會有 6 種不同的 <strong>Depth-First Traversal</strong> 的走訪程序： <img src="/posts/e0e2589a/bt13.jpg" class=""></p>
<ul>
<li>若限制 L 一定要在 R 之前走訪:
<ul>
<li><code>D</code>LR: Preorder (前序)</li>
<li>L<code>D</code>R: Inorder (中序)</li>
<li>LR<code>D</code>: Postorder (後序)</li>
</ul></li>
<li>看到 D 就印出 (處理) 資料 (<code>base case</code>)</li>
<li>上述走訪方式皆具備<code>遞迴</code>特性</li>
</ul>
<h4 id="二元樹的追蹤次序與遞迴演算法">二元樹的追蹤次序與遞迴演算法</h4>
<h5 id="preorder-dlr">Preorder (DLR)</h5>
<p>在前序追蹤時，<code>根節點</code>會最先被處理；再來是遞迴處理該根節點的<strong>左子樹</strong>；待左子樹之所有節點均處理完畢後，再遞迴處理該根節點之<strong>右子樹</strong> <img src="/posts/e0e2589a/bt14.jpg" class=""> <strong>Output: <code>ABCDEF</code></strong> <pre class="line-numbers language-none"><code class="language-none">Procedure preOrder (T: Pointer to B.T. root)
  if (T is not null): &#x2F;&#x2F; 即: 樹為非空時
    print (T → data); &#x2F;&#x2F; D
    preOrder (T → leftSubtree); &#x2F;&#x2F; L
    preOrder (T → rightSubtree); &#x2F;&#x2F; R
  return;   &#x2F;&#x2F; 由堆疊處取得應當返回之上層資訊
end preOrder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h5 id="inorder-ldr">Inorder (LDR)</h5>
<p>在中序追蹤時，需要最先遞迴處理根節點的左子樹；待左子樹之所有節點均處理完畢後，再處理<code>根節點</code>；最後再遞迴處理根節點之右子樹 <img src="/posts/e0e2589a/bt14.jpg" class=""> <strong>Output: <code>CBDAEF</code></strong> <pre class="line-numbers language-none"><code class="language-none">Procedure inOrder (T: Pointer to B.T. root)
  if (T is not null): &#x2F;&#x2F; 即: 樹為非空時
    inOrder (T → leftSubtree); &#x2F;&#x2F; L
    print (T → data); &#x2F;&#x2F; D
    inOrder (T → rightSubtree); &#x2F;&#x2F; R
  return;   &#x2F;&#x2F; 由堆疊處取得應當返回之上層資訊
end inOrder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h5 id="postnorder-lrd">Postnorder (LRD)</h5>
<p>在後序追蹤時，需要最先遞迴處理根節點的左子樹 ；待左子樹之所有節點均處理完畢後，再遞迴處理根節點之右子樹；最後再處理<code>根節點</code> <img src="/posts/e0e2589a/bt14.jpg" class=""> <strong>Output: <code>CDBFEA</code></strong> <pre class="line-numbers language-none"><code class="language-none">Procedure postOrder (T: Pointer to B.T. root)
  if (T is not null): &#x2F;&#x2F; 即: 樹為非空時
    postOrder (T → leftSubtree); &#x2F;&#x2F; L
    postOrder (T → rightSubtree); &#x2F;&#x2F; R
    print (T → data); &#x2F;&#x2F; D
  return;   &#x2F;&#x2F; 由堆疊處取得應當返回之上層資訊
end postOrder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h4 id="配對問題">配對問題</h4>
<p>給予 “<code>中序與前序</code>”之配對，或是 “<code>中序與後序</code>”之配對，必可決定<code>唯一的Binary Tree</code>，但 “前序與後序”之配對無法決定出唯一的Binary Tree (可能會有很多組)</p>
<p><strong>例1:</strong></p>
<ul>
<li><strong>前序</strong>: ABCDEFGHI</li>
<li><strong>中序</strong>: BCAEDGHFI</li>
</ul>
<p>則此 Binary Tree 為何? (觀念: 用<code>前序 DLR 決定 root</code> ，用<code>中序畫 tree</code>) <img src="/posts/e0e2589a/bt15.jpg" class=""></p>
<p><strong>例2:</strong></p>
<ul>
<li><strong>後序</strong>: EDBAJIHGFC</li>
<li><strong>中序</strong>: ADEBCGHJIF</li>
</ul>
<p>則此 Binary Tree 為何? (觀念: 用<code>後序 LRD 決定 root</code> ，用<code>中序畫 tree</code>) <img src="/posts/e0e2589a/bt16.jpg" class=""></p>
<p><strong>例3:</strong></p>
<ul>
<li><strong>前序</strong>: ABC</li>
<li><strong>後序</strong>: CBA</li>
</ul>
<p>則此Binary Tree為何? <img src="/posts/e0e2589a/bt17.jpg" class=""></p>
<h4 id="dfs-遞迴演算法其它應用">DFS 遞迴演算法其它應用</h4>
<h5 id="計算-b.t.-的節點總數">計算 B.T. 的節點總數</h5>
<p><strong>觀念：</strong></p>
<ul>
<li>若 B.T. 為<strong>空樹</strong>，則回傳結果為 0</li>
<li>若 B.T. <strong>不為空樹</strong>，則： <img src="/posts/e0e2589a/bt18.jpg" class=""></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">Procedure Count(T: Pointer of B.T. root)
  if (T is not null): &#x2F;&#x2F;即: 樹為非空時
    nL &#x3D; Count(T → leftSubtree);
    nR &#x3D; Count(T → rightSubtree);
    return (nL + nR +1);
  else:
    return (0);
  return;
end Count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="計算-b.t.-的高度">計算 B.T. 的高度</h5>
<p><strong>觀念：</strong></p>
<ul>
<li>若 B.T. 為<strong>空樹</strong>，則回傳結果為 0</li>
<li>若 B.T. <strong>不為空樹</strong>，則： <img src="/posts/e0e2589a/bt19.jpg" class=""></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">Procedure Height(T: Pointer of B.T. root)
  if (T is not null): &#x2F;&#x2F;即: 樹為非空時
    HL &#x3D; Height(T → leftSubtree);
    HR &#x3D; Height(T → rightSubtree);
    return (HL + HR +1);
  else:
    return (0);
  return;
end Height<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="b.t.-的毎一個節點之左右子樹互換">B.T. 的毎一個節點之左右子樹互換</h5>
<p><strong>觀念：</strong></p>
<ul>
<li>若 B.T. 為<strong>空樹</strong>，則不需執行此工作</li>
<li>若 B.T. <strong>不為空樹</strong>，則： <img src="/posts/e0e2589a/bt20.jpg" class=""></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">Procedure Swap(T: Pointer of B.T. root):
  if (T is not null): &#x2F;&#x2F;即: 樹為非空時
    Swap(T → leftSubtree);
    Swap(T → rightSubtree);
1   temp &#x3D; (T → leftSubtree);
2   T → leftSubtree &#x3D; T → rightSubtree;
3   T → rightSubtree &#x3D; temp;
  return;
end Swap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="二元搜尋樹">二元搜尋樹</h5>
<p>為一個 Binary Tree；<strong>可以為空</strong>，若不為空則需滿足：</p>
<ul>
<li>左子樹所有 Node 鍵値均<code>小於</code> Root 鍵値</li>
<li>右子樹所有 Node 鍵値均<code>大於</code> Root 鍵値</li>
<li>左、右子樹亦是 <strong>Binary Search Tree</strong></li>
</ul>
<div class="note success"><p>Binary Search Tree 可應用於資料的<code>排序 (Sort)</code> 與<code>搜尋 (Search)</code></p>
</div>
<img src="/posts/e0e2589a/bt21.jpg" class="">
<h6 id="如何建立-b.s.t">如何建立 B.S.T</h6>
<ul>
<li>依據資料輸入的順序，執行 “<mark class="label success">Insert a node into B.S.T</mark>”之工作：
<ul>
<li>輸入的資料皆與<code>樹根</code>比，<mark class="label info">比樹根小就往左子樹放</mark>，<mark class="label info">比樹根大就往右子樹放</mark></li>
</ul></li>
<li>例：26, 5, 77, 43, 19, 2, 8 <img src="/posts/e0e2589a/bt22.jpg" class=""></li>
</ul>
<h6 id="如何利用-binary-search-tree-對資料進行排序-sort">如何利用 Binary Search Tree 對資料進行排序 (Sort)</h6>
<ul>
<li>先將資料建成二元搜尋樹</li>
<li>依 <code>Inorder</code> 追蹤，即可得出<code>由小到大</code>的排序結果 <img src="/posts/e0e2589a/bt23.jpg" class=""></li>
</ul>
<h6 id="如何利用-binary-search-tree-對資料進行搜尋-search">如何利用 Binary Search Tree 對資料進行搜尋 (Search)</h6>
<ul>
<li><strong>演算法設計觀念：</strong>
<ul>
<li>如果在B.S.T.有找到想要的資料，則 return Data；否則就 return Not Found</li>
<li>假設要找的資料是 k，拿 k 跟<strong>樹根</strong>的資料 t 做比較：
<ul>
<li>若是 “<code>=</code>”，表示<strong>找到</strong>資料</li>
<li>若是 “<code>&lt;</code>”，表示要往<strong>左子樹</strong>找 (遞迴)</li>
<li>若是 “<code>&gt;</code>”，表示要往<strong>右子樹</strong>找 (遞迴)</li>
</ul></li>
<li>似 “前序追蹤” (DLR)</li>
</ul></li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">Procedure Search(T: Pointer to B.T. root, k: 要找的資料)
  if (T is not null): &#x2F;&#x2F;即: 樹為非空時
    if (k &#x3D; T → data):
      return (T → data); &#x2F;&#x2F; D
    else if (k &lt; T → data):
      Search(T → leftSubtree); &#x2F;&#x2F; L
    else:
      Search(T → rightSubtree); &#x2F;&#x2F; R
  else:
    return “Not Found”;
  return; &#x2F;&#x2F;由堆疊處取得應當返回之上層資訊
end Search<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><strong>若有一個 7 個 Nodes 的 B.S.T. 如下，則其 “成功搜尋” 的平均比較次數為何?</strong> <img src="/posts/e0e2589a/bt24.jpg" class=""> (1+2+2+3+3+3+4) / 7 = 18/7 (次)</li>
<li><strong>若有一個 7 個 Nodes 的 B.S.T. 如下，則其 “成功搜尋” 的平均比較次數為何?</strong> <img src="/posts/e0e2589a/bt25.jpg" class=""> (1+2+3+4+5+6+7) / 7 = 4 (次) 此為 <strong>B.S.T.</strong> 從事資料搜尋的<code>最差情況</code></li>
<li><strong>結論：</strong>
<ul>
<li>以 <strong>B.S.T.</strong> 從事資料搜尋時，其左、右子樹<code>愈平衡愈好</code></li>
<li><strong>B.S.T.</strong> 從事資料搜尋時，易受<code>資料輸入順序</code>的影響</li>
</ul></li>
</ul>
<h1 id="一般樹化成二元樹">一般樹化成二元樹</h1>
<p><strong>做法：</strong></p>
<ol type="1">
<li>建立 <strong>Sibling 之間的 Link</strong></li>
<li>毎個節點只保留<strong>與原最左 (leftmost) child 間的 link</strong> 及 <strong>Sibling 間之 link</strong>，其餘父點與子點間的 link 皆刪除</li>
<li>順時針<strong>轉45度</strong></li>
</ol>
<img src="/posts/e0e2589a/bt26.jpg" class="">
<img src="/posts/e0e2589a/bt27.jpg" class="">
<h1 id="二元樹化成一般樹">二元樹化成一般樹</h1>
<p><strong>做法：</strong></p>
<ol type="1">
<li><strong>逆時針</strong>轉 45 度 (即：右兒子上拉成右兄弟)</li>
<li><strong>建立</strong>父點與子點之間的 links</li>
<li><strong>刪除</strong> Sibling 之間的 links</li>
</ol>
<img src="/posts/e0e2589a/bt29.jpg" class="">
<img src="/posts/e0e2589a/bt30.jpg" class="">
<img src="/posts/e0e2589a/bt31.jpg" class="">
<img src="/posts/e0e2589a/bt32.jpg" class="">
<h1 id="一般樹轉二元樹的陷阱">一般樹轉二元樹的陷阱</h1>
<div class="note danger"><p><strong>但是注意這邊的轉換：</strong> <img src="/posts/e0e2589a/bt33.jpg" class=""></p>
<ul>
<li><strong>綠色</strong>轉換是<code>錯的</code>(當 tree 的 node 只有右兒子時，轉成 binany tree 後還是右兒子，假如在轉回 tree 會發現長的不一樣了)</li>
<li><strong>紫色</strong>轉換才是<code>對的</code>(假如 node 只有右兒子轉成 binany tree 時自動拉成左兒子，轉回 tree 後會發現一樣了)</li>
</ul>
</div>
<h1 id="forest-化成二元樹">Forest 化成二元樹</h1>
<img src="/posts/e0e2589a/bt34.jpg" class="">
<p><strong>做法：</strong></p>
<ol type="1">
<li><strong>將森林中毎棵 Tree 先化成 Binary Tree</strong> <img src="/posts/e0e2589a/bt35.jpg" class=""> <img src="/posts/e0e2589a/bt38.jpg" class=""></li>
<li><strong>將各 Binary Tree 的 Root 以 Sibling 方式連結</strong> <img src="/posts/e0e2589a/bt36.jpg" class=""></li>
<li><strong>針對這些 Roots，順時針轉 45 度</strong> <img src="/posts/e0e2589a/bt37.jpg" class=""></li>
</ol>
<h1 id="二元樹化成-forest">二元樹化成 Forest</h1>
<img src="/posts/e0e2589a/bt39.jpg" class="">
<p>做法：</p>
<ol type="1">
<li><strong>逆時針轉 45 度 (即：將 Root <code>右子樹中的所有最右節點上拉</code>，以成為 Root 的右兄弟)</strong> <img src="/posts/e0e2589a/bt40.jpg" class=""></li>
<li><strong>刪除 Root 間之 Sibling 的 links，以形成多個獨立的 B.T.</strong> <img src="/posts/e0e2589a/bt41.jpg" class=""></li>
<li><strong>將各個 B.T. 化成一般樹</strong> <img src="/posts/e0e2589a/bt42.jpg" class=""></li>
</ol>
<h1 id="forest-的追蹤">Forest 的追蹤</h1>
<ul>
<li>Forest 之 <strong>Preorder、Inorder 等於</strong> “<code>化成 B.T. 後，再利用 B.T. 的 Preorder、Inorder 追蹤</code>”</li>
<li>Forest 之 <strong>Postorder <code>不等於</code></strong> “化成 B.T. 後，再利用 B.T. 的 Postorder 追蹤”</li>
</ul>
<img src="/posts/e0e2589a/bt43.jpg" class="">
<h2 id="preorder">Preorder</h2>
<p>先拜訪第一顆樹的 Root，再由左至右依序分別拜訪第一顆樹的子樹；接著再拜訪第二顆樹的 Root ，再由左至右依序分別拜訪第二顆樹的子樹；… <strong><code>(先處理某棵 Tree 的 Root，再處理子樹)</code></strong> <img src="/posts/e0e2589a/bt44.jpg" class=""> <strong><code>ABECDFGHI</code></strong></p>
<h2 id="inorder">Inorder</h2>
<p>先由左至右依序分別拜訪第一顆樹的子樹，再拜訪第一顆樹的 Root ；接著再由左至右依序分別拜訪第二顆樹的子樹，再拜訪第二顆樹的 Root ；… <strong><code>(先處理某棵 Tree 的 子樹，再處理 Root)</code></strong> <img src="/posts/e0e2589a/bt44.jpg" class=""> <strong><code>EBCDAGHFI</code></strong></p>
<h2 id="postorder">Postorder</h2>
<p>先由左至右依序分別拜訪第一顆樹的子樹，接著再由左至右依序分別拜訪第二顆樹的子樹…。當拜訪完所有的子樹後，再由最後一顆樹的 Root 往回追蹤。 <strong><code>EDCBHGIFA</code></strong></p>
<h1 id="thread-binary-tree-引線二元樹">Thread Binary Tree (引線二元樹)</h1>
<p>一個二元樹具有 n 個節點，以 link list 表示，會有 <strong>n+1 條空 links</strong>。為了充分利用這些空 links，將這些 links <code>改指向其它 nodes</code>，此種 binary tree 稱為 <strong>Thread Binary Tree</strong>。一般而言，以<strong>中序引線二元樹</strong>居多。</p>
<ul>
<li>若 x → Lchild 為 nil，則將 <strong>x → Lchild</strong> 改指向 x 在中序順序的<code>前</code>一個 node</li>
<li>若 x → Rchild 為 nil，則將 <strong>x → Rchild</strong> 改指向 x 在中序順序的<code>後</code>一個 node</li>
</ul>
<p><strong>例:</strong></p>
<p>給予一個二元樹如下，請繪出其 Thread B.T. <img src="/posts/e0e2589a/bt45.jpg" class=""></p>
<p><strong><code>中序式： B C A F D E</code></strong> <img src="/posts/e0e2589a/bt46.jpg" class=""></p>
<h2 id="data-structure-之設計">Data Structure 之設計</h2>
<img src="/posts/e0e2589a/bt47.jpg" class="">
<ul>
<li><strong>Left Thread</strong>:
<ul>
<li><strong>True</strong>: 表 Lchild 為左<strong>引線</strong>指標</li>
<li><strong>False</strong>: 表 Lchild 為左<strong>兒子</strong>指標</li>
</ul></li>
<li><strong>Right Thread</strong>:
<ul>
<li><strong>True</strong>: 表 Rchild 為右<strong>引線</strong>指標</li>
<li><strong>False</strong>: 表 Rchild 為右<strong>兒子</strong>指標</li>
</ul></li>
</ul>
<p>使用時，會再加入一個 <code>Head Node (串列首)</code></p>
<ul>
<li><strong>空樹</strong>時： <img src="/posts/e0e2589a/bt48.jpg" class=""></li>
<li><strong>非空樹</strong>時: <img src="/posts/e0e2589a/bt49.jpg" class=""></li>
</ul>
<p><strong>例:</strong></p>
<p>將下列二元樹繪出其 Thread B.T. 之 Data Structure <img src="/posts/e0e2589a/bt50.jpg" class=""> <img src="/posts/e0e2589a/bt51.jpg" class=""></p>
<h2 id="優點">優點</h2>
<ul>
<li>充份利用空的 Link 空間</li>
<li>不需利用遞迴 (即：不需要 Stack 的支援)，即可得到中序式，同時可立即知道某節點的中序後繼者與先行者</li>
<li>可簡化 Inorder traversal</li>
</ul>
<h1 id="參考資料">參考資料</h1>
<p><a href="http://debussy.im.nuu.edu.tw/sjchen/Datastructure/98/course06.pdf">國立聯合大學陳士杰資料結構</a></p>
]]></content>
      <tags>
        <tag>資料結構</tag>
      </tags>
  </entry>
  <entry>
    <title>Hardhat Tutorial</title>
    <url>/posts/1730cd52/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="overview">Overview</h1>
<p><strong>Hardhat</strong> 是一個有助於在 Ethereum 上進行構建的開發環境(development environment)。它幫助 developers 在構建 smart contracts 和 dApps 時 manage and automate the recurring tasks，以及在工作流程中引入更多功能。這意味著從根本上進行 compilie 和 test。</p>
<p><strong>Hardhat</strong> 還內建了 <strong>Hardhat Network</strong> (一個為開發而設計的 local Ethereum network)，它允許你 deploy contracts, run tests, debug codes. <a id="more"></a></p>
<p>在本教程將會學到：</p>
<ul>
<li>為以太坊開發設置 Node.js 環境</li>
<li>創建和配置 a <strong>Hardhat</strong> project</li>
<li>implements a token 所需 Solidity 智能合約的基礎</li>
<li>使用 <strong>Ethers.js</strong> 和 <strong>Waffle</strong> 為合約編寫自動化測試</li>
<li>使用 <strong>Hardhat Network</strong> 的 <code>console.log()</code> Debug Solidity</li>
<li>將合約部署到 <strong>Hardhat Network</strong> and Ethereum testnets</li>
</ul>
<p>先備知識：</p>
<ul>
<li><strong>JavaScript</strong></li>
<li>操作 <strong>terminal</strong></li>
<li><strong>git</strong></li>
<li>了解 <strong>smart contracts</strong> 的基本運作原理</li>
<li>創件一個 <strong>Metamask</strong> 錢包</li>
</ul>
<h1 id="setting-up-the-environment">Setting up the environment</h1>
<p>因為很簡單，所以請參考 <a href="https://hardhat.org/tutorial/setting-up-the-environment.html">Setting up the environment</a>。</p>
<h1 id="creating-a-new-hardhat-project">Creating a new Hardhat project</h1>
<p>我們將使用 npm 下載 <strong>Hardhat</strong>。The <strong>N</strong>ode.js <strong>p</strong>ackage <strong>m</strong>anager is a package manager and an online repository for JavaScript code. ( npm 的官方敘述)</p>
<p>打開 terminal 接著輸入以下 commands : <pre class="language-bash" data-language="bash"><code class="language-bash">mkdir hardhat-tutorial 
cd hardhat-tutorial 
npm init --yes 
npm install --save-dev hardhat </code></pre> 當下載好 <strong>Hardhat</strong> 後在同一目錄下執行: <pre class="language-bash" data-language="bash"><code class="language-bash">npx hardhat</code></pre> 用鍵盤選擇 <code>Create an empty hardhat.config.js</code> 後按下 enter。 <pre class="language-none"><code class="language-none">$ npx hardhat
888    888                      888 888               888
888    888                      888 888               888
888    888                      888 888               888
8888888888  8888b.  888d888 .d88888 88888b.   8888b.  888888
888    888     &quot;88b 888P&quot;  d88&quot; 888 888 &quot;88b     &quot;88b 888
888    888 .d888888 888    888  888 888  888 .d888888 888
888    888 888  888 888    Y88b 888 888  888 888  888 Y88b.
888    888 &quot;Y888888 888     &quot;Y88888 888  888 &quot;Y888888  &quot;Y888

Welcome to Hardhat v2.0.0

? What do you want to do? …
  Create a sample project
❯ Create an empty hardhat.config.js
  Quit</code></pre> 運行 <strong>Hardhat</strong> 時，它將從 current working directory 開始搜索最近的 <code>hardhat.config.js</code> 文件。 該文件通常位於 project 的 root 中，而一個空白的 <code>hardhat.config.js</code>文件足以使 <strong>Hardhat</strong> 正常工作。整個設定都包含在此文件中。</p>
<h2 id="hardhats-architecture">Hardhat's architecture</h2>
<p><strong>Hardhat</strong> 是圍繞 <strong>tasks</strong> 和 <strong>plugins</strong> 的概念而設計的。 <strong>Hardhat</strong> 大部分的功能來自於 plugins，做為一個開發者你可以自由選擇你所需要的 <a href="https://hardhat.org/plugins/">plugin</a> 。</p>
<h3 id="tasks">Tasks</h3>
<p>其實每次從 CLI 運行 <strong>Hardhat</strong> 時都是在執行一個 task 。例如 <code>npx hardhat compile</code> 是在執行 <code>compile</code> task 。執行 <code>npx hardhat</code> 可以查看 project 中當前可用的 tasks 。 執行 <code>npx hardhat help [task]</code> 可以查看該 task 詳細信息。</p>
<blockquote>
<p>TIP 你可以創造自己的 tasks 。詳情請看 <a href="https://hardhat.org/guides/create-task.html">Creating a task</a> guide 。</p>
</blockquote>
<h3 id="plugins">Plugins</h3>
<p><strong>Hardhat</strong> 有一些預設值，但全部都可以被 override 。大多數時候使用給定的工具的方式是利用 Plugin 集成到 <strong>Hardhat</strong> 中。</p>
<p>在此教程我們將會使用 <code>Ethers.js</code> 和 <code>Waffle</code> plugins 。它允許我們和 Ethereum 溝通並且 test 自己的 contracts 。後面會再介紹怎麼使用它們，在此同時我們先在 project 目錄 install ： <pre class="language-bash" data-language="bash"><code class="language-bash">npm install --save-dev @nomiclabs&#x2F;hardhat-ethers ethers @nomiclabs&#x2F;hardhat-waffle ethereum-waffle chai</code></pre> 將第一行添加到 <code>hardhat.config.js</code> 中，使其如下所示： <pre class="line-numbers language-javascript" data-language="javascript"><div class="caption"><span>hardhat.config.js</span><a href="/downloads/code/hardhat/hardhat.config_1.js">view raw</a></div><code class="language-javascript"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@nomiclabs/hardhat-waffle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * @type import('hardhat/config').HardhatUserConfig
 */</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  solidity<span class="token operator">:</span> <span class="token string">"0.7.3"</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 在這裡只需要使用 <code>hardhat-waffle</code> ，因為它 depends on <code>hardhat-ethers</code> ，因此不需要同時添加兩者。</p>
<h1 id="writing-and-compiling-smart-contracts">Writing and compiling smart contracts</h1>
<p>我們將創建一個簡單的 smart contract，該 contract 實做能夠 transfer 的 token。 Token contracts 最常用於 exchange or store value. 這邊將不深入討論 contract 的 Solidity code，但是我們實做了一些應該知道的邏輯：</p>
<ul>
<li>token 的總供應量是固定的而且無法被更改</li>
<li>整個供應量都分配給部署 contract 的 address</li>
<li>任何人都可以收到 tokens</li>
<li>任何人只要擁有至少一個 token 則可以 transfer</li>
<li>The token 無法分割。只可以 transfer 1, 2, 3 or 37 tokens but not 2.5</li>
</ul>
<blockquote>
<p>TIP 你可能聽說過 ERC20，這是 Ethereum 中的 token 標準。DAI，USDC，MKR和ZRX之類的 tokens 遵循 ERC20 標準，使它們都可以與任何可以處理 ERC20 tokens 的軟件兼容。 <strong>為簡單起見，我們要構建的 token 不是 ERC20 。</strong></p>
</blockquote>
<h3 id="writing-smart-contracts">Writing smart contracts</h3>
<p>首先新增一個名為 <code>contracts</code> 的新目錄，然後在該目錄內新增檔案 <code>Token.sol</code>。 將下面的代碼複製到檔案中，花一點時間閱讀代碼。它很簡單，並且裡頭充滿了解釋 Solidity 代碼基礎的註釋。</p>
<blockquote>
<p>TIP 如果要 syntax highlighting 應該在 text editor 中添加 Solidity support。 只需尋找 Solidity 或 Ethereum plugins。 建議使用 Visual Studio Code 或 Sublime Text 3。</p>
</blockquote>
<pre class="line-numbers language-solidity" data-language="solidity"><div class="caption"><span>Token.sol</span><a href="/downloads/code/hardhat/Token_1.sol">view raw</a></div><code class="language-solidity">&#x2F;&#x2F; Solidity files have to start with this pragma.
&#x2F;&#x2F; It will be used by the Solidity compiler to validate its version.
pragma solidity ^0.7.0;


&#x2F;&#x2F; This is the main building block for smart contracts.
contract Token {
    &#x2F;&#x2F; Some string type variables to identify the token.
    &#x2F;&#x2F; The &#96;public&#96; modifier makes a variable readable from outside the contract.
    string public name &#x3D; &quot;My Hardhat Token&quot;;
    string public symbol &#x3D; &quot;MBT&quot;;

    &#x2F;&#x2F; The fixed amount of tokens stored in an unsigned integer type variable.
    uint256 public totalSupply &#x3D; 1000000;

    &#x2F;&#x2F; An address type variable is used to store ethereum accounts.
    address public owner;

    &#x2F;&#x2F; A mapping is a key&#x2F;value map. Here we store each account balance.
    mapping(address &#x3D;&gt; uint256) balances;

    &#x2F;**
     * Contract initialization.
     *
     * The &#96;constructor&#96; is executed only once when the contract is created.
     *&#x2F;
    constructor() {
        &#x2F;&#x2F; The totalSupply is assigned to transaction sender, which is the account
        &#x2F;&#x2F; that is deploying the contract.
        balances[msg.sender] &#x3D; totalSupply;
        owner &#x3D; msg.sender;
    }

    &#x2F;**
     * A function to transfer tokens.
     *
     * The &#96;external&#96; modifier makes a function *only* callable from outside
     * the contract.
     *&#x2F;
    function transfer(address to, uint256 amount) external {
        &#x2F;&#x2F; Check if the transaction sender has enough tokens.
        &#x2F;&#x2F; If &#96;require&#96;&#39;s first argument evaluates to &#96;false&#96; then the
        &#x2F;&#x2F; transaction will revert.
        require(balances[msg.sender] &gt;&#x3D; amount, &quot;Not enough tokens&quot;);

        &#x2F;&#x2F; Transfer the amount.
        balances[msg.sender] -&#x3D; amount;
        balances[to] +&#x3D; amount;
    }

    &#x2F;**
     * Read only function to retrieve the token balance of a given account.
     *
     * The &#96;view&#96; modifier indicates that it doesn&#39;t modify the contract&#39;s
     * state, which allows us to call it without executing a transaction.
     *&#x2F;
    function balanceOf(address account) external view returns (uint256) {
        return balances[account];
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>TIP <code>*.sol</code> 用於 Solidity 文件。建議將文件名與其包含的 contract 進行匹配，這是一種常見的做法。</p>
</blockquote>
<h3 id="compiling-contracts">Compiling contracts</h3>
<p>要編譯 contract，在 terminal 執行 <code>npx hardhat compile</code>。 The <code>compile</code> task 是 hardhat 內建的 tasks 之一。 <pre class="line-numbers language-none"><code class="language-none">$ npx hardhat compile
Compiling 1 file with 0.7.3
Compilation finished successfully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> 合約已經成功編譯且可以使用了！</p>
<h1 id="testing-contracts">Testing contracts</h1>
<p>在建構 smart contracts 時撰寫自動化 tests 至關重要。為此，我們將使用 <strong>Hardhat Network</strong> ，這是一個內置的以太坊網絡，專門為開發而設計，是 <strong>Hardhat</strong> 中的默認網絡。無需進行任何設置即可使用它。在我們的 tests 中，我們將使用 ethers.js 與上一節中構建的 Ethereum contract 進行交互，並使用 <a href="https://mochajs.org/">Mocha</a> 做為我們的 test runner。</p>
<h3 id="writing-tests">Writing tests</h3>
<p>在 project root directory 創建一個名為<code>test</code> 的新目錄，並在目錄裡創建一個名為 <code>Token.js</code> 的新文件。</p>
<p>讓我們從下面的代碼開始。接下來，我們將對其進行解釋，但現在將其複製到 <code>Token.js</code> 中： <pre class="line-numbers language-javascript" data-language="javascript"><div class="caption"><span>Token.js</span><a href="/downloads/code/hardhat/Token_1.js">view raw</a></div><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"chai"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"Token contract"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Deployment should assign the total supply of tokens to the owner"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> Token <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">"Token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> hardhatToken <span class="token operator">=</span> <span class="token keyword">await</span> Token<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> ownerBalance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>ownerBalance<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 接著在 terminal 執行 <code>npx hardhat test</code> 將會看到下面的輸出: <pre class="line-numbers language-none"><code class="language-none">$ npx hardhat test

  Token contract
    ✓ Deployment should assign the total supply of tokens to the owner (654ms)


  1 passing (663ms)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 這意味著測試通過了。現在讓我們解釋每一行： <pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <code>ethers.js</code> 中的 <code>Signer</code> 是一個代表 Ethereum account 的 object。它用於將 transactions 發送到 contracts 和其他 accounts 。在這裡，我們獲得了所連接 node 中的 accounts list，在本例中為 <strong>Hardhat Network</strong>，僅保留第一個 account 。</p>
<p>The <code>ethers</code> variable is available in the global scope. 如果想要 code always being explicit, 可以在頂部加上這行: <pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> ethers <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hardhat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> &gt; TIP &gt; 要了解有關 Signer 的更多信息，可以查看 <a href="https://docs.ethers.io/v5/api/signer/">Signers documentation</a>。 <pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> Token <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">"Token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> ethers.js 中的 <code>ContractFactory</code> 是用於 deploy new smart contracts 的 abstraction，因此 <code>Token</code> 這裡是 a factory for instances of our token contract. <pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> hardhatToken <span class="token operator">=</span> <span class="token keyword">await</span> Token<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> 在 <code>ContractFactory</code> 上調用 <code>deploy()</code> 將啟動 deployment，並返回解析為 <code>Contract</code> 的 <code>Promise</code>。該 object 具有用於每個 smart contract functions 的 method 。 <pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> ownerBalance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> deploye contract 後，我們可以在 <code>hardhatToken</code> 上調用我們的 contract methods ，並通過調用 <code>balanceOf()</code> 來獲取 owner account 的 balance 。</p>
<p>請記住，獲得 entire supply token 的 owner 是進行 deploy 的 account ，並且在使用 <code>hardhat-ethers plugin</code> 時，預設情況下，<code>ContractFactory</code> 和 <code>Contract</code> instances 連接到 first signer 。 這意味著 <code>owner</code> variable 中的 account executed the deployment ，而 <code>balanceOf()</code> 應該 return the entire supply amount. <pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>ownerBalance<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> 在這裡，我們再次使用 <code>Contract</code> instance 在 Solidity 代碼中調用 smart contract function 。<code>totalSupply()</code> 返回 token's supply amount ，我們正在檢查它是否等於 <code>ownerBalance</code> 。</p>
<p>為此，我們使用 <a href="https://www.chaijs.com/">Chai</a> ，這是一個 assertions library。這些 asserting functions 稱為 "matchers" ，而我們在此處使用的實際上來自 <a href="https://getwaffle.io/">Waffle</a> 。這就是為什麼我們使用 <code>hardhat-waffle</code> plugin 的原因，這使得從 assert values from Ethereum 更加容易。查看 Waffle documentation 中的 <a href="https://ethereum-waffle.readthedocs.io/en/latest/matchers.html">此部份</a>，以了解 Ethereum-specific matchers 的完整列表.</p>
<h3 id="using-a-different-account">Using a different account</h3>
<p>如果需要從 default account 以外的其他 account ( or <code>Signer</code> in ethers.js speak ) 發送 transaction 以 test code ，則可以在 ethers.js <code>Contract</code> 中使用 <code>connect()</code> method 將其連接到其他 account 。像這樣： <pre class="line-numbers language-javascript" data-language="javascript"><div class="caption"><span>Token.js</span><a href="/downloads/code/hardhat/Token_2.js">view raw</a></div><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"chai"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"Transactions"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Should transfer tokens between accounts"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>owner<span class="token punctuation">,</span> addr1<span class="token punctuation">,</span> addr2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> Token <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">"Token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> hardhatToken <span class="token operator">=</span> <span class="token keyword">await</span> Token<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   
    <span class="token comment">// Transfer 50 tokens from owner to addr1</span>
    <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>addr1<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>addr1<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Transfer 50 tokens from addr1 to addr2</span>
    <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>addr1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>addr2<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>addr2<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="full-coverage">Full coverage</h3>
<p>既然已經介紹了 testing contracts 所需的基礎知識，這是 token 的完整測試，其中包含有關 Mocha 以及如何構建測試的許多其他信息。建議完整閱讀。 <pre class="line-numbers language-javascript" data-language="javascript"><div class="caption"><span>Token.js</span><a href="/downloads/code/hardhat/Token_3.js">view raw</a></div><code class="language-javascript"><span class="token comment">// We import Chai to use its asserting functions here.</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"chai"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// `describe` is a Mocha function that allows you to organize your tests. It's</span>
<span class="token comment">// not actually needed, but having your tests organized makes debugging them</span>
<span class="token comment">// easier. All Mocha functions are available in the global scope.</span>

<span class="token comment">// `describe` receives the name of a section of your test suite, and a callback.</span>
<span class="token comment">// The callback must define the tests of that section. This callback can't be</span>
<span class="token comment">// an async function.</span>
<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"Token contract"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Mocha has four functions that let you hook into the the test runner's</span>
  <span class="token comment">// lifecyle. These are: `before`, `beforeEach`, `after`, `afterEach`.</span>

  <span class="token comment">// They're very useful to setup the environment for tests, and to clean it</span>
  <span class="token comment">// up after they run.</span>

  <span class="token comment">// A common pattern is to declare some variables, and assign them in the</span>
  <span class="token comment">// `before` and `beforeEach` callbacks.</span>

  <span class="token keyword">let</span> Token<span class="token punctuation">;</span>
  <span class="token keyword">let</span> hardhatToken<span class="token punctuation">;</span>
  <span class="token keyword">let</span> owner<span class="token punctuation">;</span>
  <span class="token keyword">let</span> addr1<span class="token punctuation">;</span>
  <span class="token keyword">let</span> addr2<span class="token punctuation">;</span>
  <span class="token keyword">let</span> addrs<span class="token punctuation">;</span>

  <span class="token comment">// `beforeEach` will run before each test, re-deploying the contract every</span>
  <span class="token comment">// time. It receives a callback, which can be async.</span>
  <span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Get the ContractFactory and Signers here.</span>
    Token <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">"Token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>owner<span class="token punctuation">,</span> addr1<span class="token punctuation">,</span> addr2<span class="token punctuation">,</span> <span class="token operator">...</span>addrs<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// To deploy our contract, we just have to call Token.deploy() and await</span>
    <span class="token comment">// for it to be deployed(), which happens onces its transaction has been</span>
    <span class="token comment">// mined.</span>
    hardhatToken <span class="token operator">=</span> <span class="token keyword">await</span> Token<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// You can nest describe calls to create subsections.</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"Deployment"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// `it` is another Mocha function. This is the one you use to define your</span>
    <span class="token comment">// tests. It receives the test name, and a callback function.</span>

    <span class="token comment">// If the callback function is async, Mocha will `await` it.</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Should set the right owner"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Expect receives a value, and wraps it in an Assertion object. These</span>
      <span class="token comment">// objects have a lot of utility methods to assert values.</span>

      <span class="token comment">// This test expects the owner variable stored in the contract to be equal</span>
      <span class="token comment">// to our Signer's owner.</span>
      <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">owner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Should assign the total supply of tokens to the owner"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> ownerBalance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>ownerBalance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"Transactions"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Should transfer tokens between accounts"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Transfer 50 tokens from owner to addr1</span>
      <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>addr1<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> addr1Balance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>addr1<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>addr1Balance<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Transfer 50 tokens from addr1 to addr2</span>
      <span class="token comment">// We use .connect(signer) to send a transaction from another account</span>
      <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>addr1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>addr2<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> addr2Balance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>addr2<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>addr2Balance<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Should fail if sender doesn’t have enough tokens"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> initialOwnerBalance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Try to send 1 token from addr1 (0 tokens) to owner (1000 tokens).</span>
      <span class="token comment">// `require` will evaluate false and revert the transaction.</span>
      <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>
        hardhatToken<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>addr1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>be<span class="token punctuation">.</span><span class="token function">revertedWith</span><span class="token punctuation">(</span><span class="token string">"Not enough tokens"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Owner balance shouldn't have changed.</span>
      <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>
        initialOwnerBalance
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Should update balances after transfers"</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> initialOwnerBalance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Transfer 100 tokens from owner to addr1.</span>
      <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>addr1<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Transfer another 50 tokens from owner to addr2.</span>
      <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>addr2<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Check balances.</span>
      <span class="token keyword">const</span> finalOwnerBalance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>finalOwnerBalance<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>initialOwnerBalance <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">const</span> addr1Balance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>addr1<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>addr1Balance<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">const</span> addr2Balance <span class="token operator">=</span> <span class="token keyword">await</span> hardhatToken<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>addr2<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>addr2Balance<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 對於完整的測試，這是執行 <code>npx hardhat test</code> 後的輸出: <pre class="line-numbers language-none"><code class="language-none">$ npx hardhat test

  Token contract
    Deployment
      ✓ Should set the right owner
      ✓ Should assign the total supply of tokens to the owner
    Transactions
      ✓ Should transfer tokens between accounts (199ms)
      ✓ Should fail if sender doesn’t have enough tokens
      ✓ Should update balances after transfers (111ms)


  5 passing (1s)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 請記住，當運行 <code>npx hardhat test</code> 時，如果自上次運行測試以來 contract 已更改，則先對它進行 compile 。</p>
<h1 id="debugging-with-hardhat-network">Debugging with Hardhat Network</h1>
<p><strong>Hardhat</strong> 內建 <strong>Hardhat Network</strong>, 該網路是為開發而設計的 local Ethereum network 。它允許 deploy your contracts, run your tests and debug your code. 這是 <strong>Hardhat</strong> 連接的 default network, 因此您無需進行任何設置即可正常工作。 Just run your tests!</p>
<h3 id="solidity-console.log">Solidity console.log</h3>
<p>在 <strong>Hardhat Network</strong> 上運行 contracts 和 tests 時，可以從 Solidity 代碼中調用 <code>console.log()</code> 來 print logging messages 和 contract variables 。要使用它，必須從 contract 代碼中導入 <strong>Hardhat</strong>'s <code>console.log</code>。(第三行) 像是: <pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity">pragma solidity ^0.6.0;

import &quot;hardhat&#x2F;console.sol&quot;;

contract Token &#123;
  &#x2F;&#x2F;...
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 將一些 <code>console.log</code> 添加到 <code>transfer()</code> 函數中，就像在 JavaScript 中使用它一樣： <pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity">function transfer(address to, uint256 amount) external &#123;
    console.log(&quot;Sender balance is %s tokens&quot;, balances[msg.sender]);
    console.log(&quot;Trying to send %s tokens to %s&quot;, amount, to);

    require(balances[msg.sender] &gt;&#x3D; amount, &quot;Not enough tokens&quot;);

    balances[msg.sender] -&#x3D; amount;
    balances[to] +&#x3D; amount;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 運行 tests 時將顯示 log 輸出： <pre class="line-numbers language-none"><code class="language-none">$ npx hardhat test

  Token contract
    Deployment
      ✓ Should set the right owner
      ✓ Should assign the total supply of tokens to the owner
    Transactions
Sender balance is 1000 tokens
Trying to send 50 tokens to 0xead9c93b79ae7c1591b1fb5323bd777e86e150d4
Sender balance is 50 tokens
Trying to send 50 tokens to 0xe5904695748fe4a84b40b3fc79de2277660bd1d3
      ✓ Should transfer tokens between accounts (373ms)
      ✓ Should fail if sender doesn’t have enough tokens
Sender balance is 1000 tokens
Trying to send 100 tokens to 0xead9c93b79ae7c1591b1fb5323bd777e86e150d4
Sender balance is 900 tokens
Trying to send 100 tokens to 0xe5904695748fe4a84b40b3fc79de2277660bd1d3
      ✓ Should update balances after transfers (187ms)


  5 passing (2s)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h1 id="deploying-to-a-live-network">Deploying to a live network</h1>
<p>準備好與其他人共享 dApp 後，接下來要做的就是將其 deploy to a live network 中。這樣，其他人就可以訪問不在本地系統上運行的 instance 。</p>
<p>有一個處理真實貨幣的 Ethereum network 被稱為 “mainnet” ，然後還有一些不處理真實貨幣但能夠很好地模仿 mainnet 的 live networks ，並且可以被其他人用作共享階段環境。這些被稱為 “testnets” ，以太坊有多個： Ropsten ， Kovan ， Rinkeby 和 Goerli 。我們建議你將 contracts 部署到 Ropsten 測試網。</p>
<p>對於軟體來說，部署到測試網與部署到主網相同。唯一的區別是你連接到哪個網絡。讓我們看一下使用 ethers.js 部署合約的代碼是什麼樣的。</p>
<p>主要概念是 <code>Signer</code> ， <code>ContractFactory</code> 和 <code>Contract</code> ，我們在 testing 部分對此進行了解釋。與 testing 部份相比，沒有什麼新的需要做，因為當測試 contracts 時，實際上是在向開發網絡進行部署。這使代碼非常相似或相同。</p>
<p>讓我們在 project root's directory 下創建一個新的 <code>scripts</code> directory，並將以下內容複製到 <code>deploy.js</code> 文件中：  要指示 <strong>Hardhat</strong> 在運行任何 asks 時連接到特定的 Ethereum network ，可以使用 --network 參數。像這樣： <pre class="line-numbers language-none"><code class="language-none">npx hardhat run scripts&#x2F;deploy.js --network &lt;network-name&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 在這種情況下，如果不使用 --network 參數運行它，則代碼將針對 <strong>Hardhat Network</strong> 的 embedded instance 運行，因此當 Hardhat 完成運行時，部署實際上會丟失，但是它仍然能測試我們的部署的代碼是否有用： <pre class="line-numbers language-none"><code class="language-none">$ npx hardhat run scripts&#x2F;deploy.js
Deploying contracts with the account: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266
Account balance: 10000000000000000000000
Token address: 0x5FbDB2315678afecb367f032d93F642f64180aa3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="deploying-to-remote-networks">Deploying to remote networks</h3>
<p>要部署到諸如主網或任何測試網之類的 remote networks ，您需要在您的 <code>hardhat.config.js</code> 文件中添加一個 network entry 。在此示例中，我們將添加 Ropsten ：  我們正在使用 <a href="https://infura.io/">Infura</a> ，但是將 <code>url</code> 指向任何 Ethereum node 或 gateway 都可以。快去獲取你的 <code>INFURA_PROJECT_ID</code> ，然後回來。</p>
<p>要在 Ropsten 上進行部署，需要將 ropsten-ETH 發送到將要進行部署的地址中。可以從水龍頭( faucet )獲得一些用於測試網的 ETH ，該服務免費分發測試 ETH 。 <a href="https://faucet.metamask.io/">Here's the one for Ropsten</a> ，必須在交易前將 Metamask 的網絡更改為 Ropsten 。</p>
<blockquote>
<p>TIP 可以通過以下 links 為其他測試網獲取一些 ETH ：</p>
</blockquote>
<blockquote>
<ul>
<li><a href="https://faucet.kovan.network/">Kovan faucet</a></li>
<li><a href="https://faucet.rinkeby.io/">Rinkeby faucet</a></li>
<li><a href="https://goerli-faucet.slock.it/">Goerli faucet</a></li>
</ul>
</blockquote>
<p>最後，執行： <pre class="line-numbers language-none"><code class="language-none">npx hardhat run scripts&#x2F;deploy.js --network ropsten<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 如果一切順利，應該看到已部署的 contract address 。</p>
<h1 id="hardhat-hackathon-boilerplate-project">Hardhat Hackathon Boilerplate Project</h1>
<p>如果想快速開始使用 dApp 或使用前端查看整個項目的外觀，可以使用 Hardhat 的 hackathon <a href="https://github.com/nomiclabs/hardhat-hackathon-boilerplate">樣板庫</a>。</p>
<h3 id="whats-included">What's included</h3>
<ul>
<li>我們在本教程中使用的 Solidity 合約</li>
<li>使用 ethers.js 和 Waffle 的測試套件</li>
<li>使用 ethers.js 與合約進行溝通的 minimal front-end</li>
</ul>
<h3 id="solidity-contract-tests">Solidity contract &amp; tests</h3>
<p>在 repo 的根目錄中，將找到在本教程中使用 Token 合同將其整合在一起的 <strong>Hardhat</strong> 項目。</p>
<ul>
<li>token 的總供應量是固定的而且無法被更改</li>
<li>整個供應量都分配給部署 contract 的 address</li>
<li>任何人都可以收到 tokens</li>
<li>任何人只要擁有至少一個 token 則可以 transfer</li>
<li>The token 無法分割。只可以 transfer 1, 2, 3 or 37 tokens but not 2.5</li>
</ul>
<h3 id="frontend-app">Frontend app</h3>
<p>在 <code>frontend/</code> 中，將找到一個簡單的應用程序，該應用程序允許用戶執行以下兩項操作：</p>
<ul>
<li>查看已連接 wallet's balance</li>
<li>發送 tokens to an address</li>
</ul>
<p>這是一個單獨的 npm 項目，是使用 <code>create-react-app</code> 創建的，因此這意味著它使用了 webpack 和 babel 。</p>
<h3 id="frontend-file-architecture">Frontend file architecture</h3>
<ul>
<li><code>src/</code> 包含所有代碼
<ul>
<li><code>src/components</code> 包含 react components
<ul>
<li><code>Dapp.js</code> is the only file with business logic.如果要將其用作樣板，請在此處用自己的代碼替換代碼。</li>
<li>所有其他 component just renders HTML, no logic。</li>
<li><code>src/contracts</code> 具有合約的 ABI 和 address ，這些由部署腳本自動生成。</li>
</ul></li>
</ul></li>
</ul>
<h3 id="how-to-use-it">How to use it</h3>
<p>首先 clone the repository ，然後部署 contracts ： <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cd hardhat-hackathon-boilerplate&#x2F;
npm install
npx hardhat node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> 在這裡，我們僅安裝 npm project's dependencies ，並通過運行 <code>npx hardhat node</code> 啟動一個 <strong>Hardhat Network</strong> instance ，可以使用 MetaMask 連接到該 instance 。在同一 directory 中的另一個 terminal 運行： <pre class="line-numbers language-none"><code class="language-none">npx hardhat --network localhost run scripts&#x2F;deploy.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 這會將 contract 部署到 <strong>Hardhat Network</strong> 。完成此操作後執行： <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cd hardhat-hackathon-boilerplate&#x2F;frontend&#x2F;
npm install
npm run start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> 啟動 react Web app 。在瀏覽器打開 <a href="http://localhost:3000/">http://localhost:3000/</a> 將會看到: <img src="/posts/1730cd52/front-5.png" class=""> 在 MetaMask 中將網絡設置為 localhost：8545 ，然後點擊按鈕。然後，將會看到以下內容： <img src="/posts/1730cd52/front-2.png" class=""> 這裡發生的是，用於顯示當前 wallet's balance 的前端代碼檢測到 balance 為 0 ，因此將無法嘗試 transfer 功能。通過運行： <pre class="line-numbers language-none"><code class="language-none">npx hardhat --network localhost faucet &lt;your address&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 將運行一個包含的c ustom <strong>Hardhat</strong> task ，該任務使用 deploying account 的 balance 向你的地址發送 100 MBT 和 1 ETH 。這將允許您將 tokens 發送到另一個 address 。</p>
<p>可以在 <a href="https://github.com/nomiclabs/hardhat-hackathon-boilerplate/blob/master/tasks/faucet.js">/tasks/faucet.js</a> 中檢查出該 task 的代碼，這是 <code>hardhat.config.js</code> 所必需的。 <pre class="line-numbers language-none"><code class="language-none">$ npx hardhat --network localhost faucet 0x0987a41e73e69f60c5071ce3c8f7e730f9a60f90
Transferred 1 ETH and 100 tokens to 0x0987a41e73e69f60c5071ce3c8f7e730f9a60f90<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> 在運行 npx hardhat node 的 terminal 中，還應該看到： <pre class="line-numbers language-none"><code class="language-none">eth_sendTransaction
  Contract call:       Token#transfer
  Transaction:         0x460526d98b86f7886cd0f218d6618c96d27de7c745462ff8141973253e89b7d4
  From:                0xc783df8a850f42e7f7e57013759c285caa701eb6
  To:                  0x7c2c195cd6d34b8f845992d380aadb2730bb9c6f
  Value:               0 ETH
  Gas used:            37098 of 185490
  Block #8:            0x6b6cd29029b31f30158bfbd12faf2c4ac4263068fd12b6130f5655e70d1bc257

  console.log:
    Transferring from 0xc783df8a850f42e7f7e57013759c285caa701eb6 to 0x0987a41e73e69f60c5071ce3c8f7e730f9a60f90 100 tokens<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 在我們的合約中顯示 <code>transfer()</code> 函數的 <code>console.log</code> 輸出，這是運行水龍頭 task 後 Web 應用程序的外觀： <img src="/posts/1730cd52/front-6.png" class=""> 嘗試使用它並閱讀代碼。它充滿了註釋，解釋了正在發生的事情，並清楚地指示了什麼代碼是 Ethereum boilerplate ，以及實際的 dApp 邏輯。這將使該 repository 易於為自己的 project 重複使用。</p>
<h1 id="final-thoughts">Final thoughts</h1>
<p>以下是在整個學習中可能會有用的一些 links ：</p>
<ul>
<li><a href="https://github.com/nomiclabs/hardhat-hackathon-boilerplate">Hardhat's Hackathon Boilerplate</a></li>
<li><a href="https://hardhat.org/getting-started/">Hardhat's documentation site</a></li>
<li><a href="https://hardhat.org/discord">Hardhat Support Discord server</a></li>
<li><a href="https://docs.ethers.io/">Ethers.js Documentation</a></li>
<li><a href="https://getwaffle.io/">Waffle Documentation</a></li>
<li><a href="https://mochajs.org/">Mocha Documentation</a></li>
<li><a href="https://www.chaijs.com/">Chai Documentation</a></li>
</ul>
<h1 id="參考資料">參考資料</h1>
<p><a href="https://hardhat.org/tutorial/">hardhat</a></p>
]]></content>
      <tags>
        <tag>blockchain</tag>
        <tag>smart contracts</tag>
        <tag>metamask</tag>
        <tag>HardHat</tag>
      </tags>
  </entry>
</search>
